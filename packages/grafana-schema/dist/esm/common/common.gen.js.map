{"version":3,"file":"common.gen.js","sources":["../../../src/common/common.gen.ts"],"sourcesContent":["// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     kinds/gen.go\n// Using jennies:\n//     CommonSchemaJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\n\n/**\n * A topic is attached to DataFrame metadata in query results.\n * This specifies where the data should be used.\n */\nexport enum DataTopic {\n  AlertStates = 'alertStates',\n  Annotations = 'annotations',\n  Series = 'series',\n}\n\n/**\n * TODO docs\n */\nexport interface DataSourceJsonData {\n  alertmanagerUid?: string;\n  authType?: string;\n  defaultRegion?: string;\n  manageAlerts?: boolean;\n  profile?: string;\n}\n\n/**\n * These are the common properties available to all queries in all datasources.\n * Specific implementations will *extend* this interface, adding the required\n * properties for the given context.\n */\nexport interface DataQuery {\n  /**\n   * For mixed data sources the selected datasource is on the query level.\n   * For non mixed scenarios this is undefined.\n   * TODO find a better way to do this ^ that's friendly to schema\n   * TODO this shouldn't be unknown but DataSourceRef | null\n   */\n  datasource?: unknown;\n  /**\n   * If hide is set to true, Grafana will filter out the response(s) associated with this query before returning it to the panel.\n   */\n  hide?: boolean;\n  /**\n   * Specify the query flavor\n   * TODO make this required and give it a default\n   */\n  queryType?: string;\n  /**\n   * A unique identifier for the query within the list of targets.\n   * In server side expressions, the refId is used as a variable name to identify results.\n   * By default, the UI will assign A->Z; however setting meaningful names may be useful.\n   */\n  refId: string;\n}\n\nexport interface BaseDimensionConfig {\n  /**\n   * fixed: T -- will be added by each element\n   */\n  field?: string;\n}\n\nexport enum ScaleDimensionMode {\n  Linear = 'linear',\n  Quad = 'quad',\n}\n\nexport interface ScaleDimensionConfig extends BaseDimensionConfig {\n  fixed?: number;\n  max: number;\n  min: number;\n  mode?: ScaleDimensionMode; // | *\"linear\"\n}\n\nexport interface ColorDimensionConfig extends BaseDimensionConfig {\n  fixed?: string; // color value\n}\n\nexport enum ScalarDimensionMode {\n  Clamped = 'clamped',\n  Mod = 'mod',\n}\n\nexport interface ScalarDimensionConfig extends BaseDimensionConfig {\n  fixed?: number;\n  max: number;\n  min: number;\n  mode?: ScalarDimensionMode;\n}\n\nexport enum TextDimensionMode {\n  Field = 'field',\n  Fixed = 'fixed',\n  Template = 'template',\n}\n\nexport interface TextDimensionConfig extends BaseDimensionConfig {\n  fixed?: string;\n  mode: TextDimensionMode;\n}\n\nexport enum ResourceDimensionMode {\n  Field = 'field',\n  Fixed = 'fixed',\n  Mapping = 'mapping',\n}\n\nexport interface MapLayerOptions {\n  /**\n   * Custom options depending on the type\n   */\n  config?: unknown;\n  /**\n   * Defines a frame MatcherConfig that may filter data for the given layer\n   */\n  filterData?: unknown;\n  /**\n   * Common method to define geometry fields\n   */\n  location?: FrameGeometrySource;\n  /**\n   * configured unique display name\n   */\n  name: string;\n  /**\n   * Common properties:\n   * https://openlayers.org/en/latest/apidoc/module-ol_layer_Base-BaseLayer.html\n   * Layer opacity (0-1)\n   */\n  opacity?: number;\n  /**\n   * Check tooltip (defaults to true)\n   */\n  tooltip?: boolean;\n  type: string;\n}\n\nexport enum FrameGeometrySourceMode {\n  Auto = 'auto',\n  Coords = 'coords',\n  Geohash = 'geohash',\n  Lookup = 'lookup',\n}\n\nexport enum HeatmapCalculationMode {\n  Count = 'count',\n  Size = 'size',\n}\n\nexport enum HeatmapCellLayout {\n  auto = 'auto',\n  ge = 'ge',\n  le = 'le',\n  unknown = 'unknown',\n}\n\nexport interface HeatmapCalculationBucketConfig {\n  /**\n   * Sets the bucket calculation mode\n   */\n  mode?: HeatmapCalculationMode;\n  /**\n   * Controls the scale of the buckets\n   */\n  scale?: ScaleDistributionConfig;\n  /**\n   * The number of buckets to use for the axis in the heatmap\n   */\n  value?: string;\n}\n\nexport enum LogsSortOrder {\n  Ascending = 'Ascending',\n  Descending = 'Descending',\n}\n\n/**\n * TODO docs\n */\nexport enum AxisPlacement {\n  Auto = 'auto',\n  Bottom = 'bottom',\n  Hidden = 'hidden',\n  Left = 'left',\n  Right = 'right',\n  Top = 'top',\n}\n\n/**\n * TODO docs\n */\nexport enum AxisColorMode {\n  Series = 'series',\n  Text = 'text',\n}\n\n/**\n * TODO docs\n */\nexport enum VisibilityMode {\n  Always = 'always',\n  Auto = 'auto',\n  Never = 'never',\n}\n\n/**\n * TODO docs\n */\nexport enum GraphDrawStyle {\n  Bars = 'bars',\n  Line = 'line',\n  Points = 'points',\n}\n\n/**\n * TODO docs\n */\nexport enum GraphTransform {\n  Constant = 'constant',\n  NegativeY = 'negative-Y',\n}\n\n/**\n * TODO docs\n */\nexport enum LineInterpolation {\n  Linear = 'linear',\n  Smooth = 'smooth',\n  StepAfter = 'stepAfter',\n  StepBefore = 'stepBefore',\n}\n\n/**\n * TODO docs\n */\nexport enum ScaleDistribution {\n  Linear = 'linear',\n  Log = 'log',\n  Ordinal = 'ordinal',\n  Symlog = 'symlog',\n}\n\n/**\n * TODO docs\n */\nexport enum GraphGradientMode {\n  Hue = 'hue',\n  None = 'none',\n  Opacity = 'opacity',\n  Scheme = 'scheme',\n}\n\n/**\n * TODO docs\n */\nexport enum StackingMode {\n  None = 'none',\n  Normal = 'normal',\n  Percent = 'percent',\n}\n\n/**\n * TODO docs\n */\nexport enum BarAlignment {\n  After = 1,\n  Before = -1,\n  Center = 0,\n}\n\n/**\n * TODO docs\n */\nexport enum ScaleOrientation {\n  Horizontal = 0,\n  Vertical = 1,\n}\n\n/**\n * TODO docs\n */\nexport enum ScaleDirection {\n  Down = -1,\n  Left = -1,\n  Right = 1,\n  Up = 1,\n}\n\n/**\n * TODO docs\n */\nexport interface LineStyle {\n  dash?: Array<number>;\n  fill?: ('solid' | 'dash' | 'dot' | 'square');\n}\n\nexport const defaultLineStyle: Partial<LineStyle> = {\n  dash: [],\n};\n\n/**\n * TODO docs\n */\nexport interface LineConfig {\n  lineColor?: string;\n  lineInterpolation?: LineInterpolation;\n  lineStyle?: LineStyle;\n  lineWidth?: number;\n  /**\n   * Indicate if null values should be treated as gaps or connected.\n   * When the value is a number, it represents the maximum delta in the\n   * X axis that should be considered connected.  For timeseries, this is milliseconds\n   */\n  spanNulls?: (boolean | number);\n}\n\n/**\n * TODO docs\n */\nexport interface BarConfig {\n  barAlignment?: BarAlignment;\n  barMaxWidth?: number;\n  barWidthFactor?: number;\n}\n\n/**\n * TODO docs\n */\nexport interface FillConfig {\n  fillBelowTo?: string;\n  fillColor?: string;\n  fillOpacity?: number;\n}\n\n/**\n * TODO docs\n */\nexport interface PointsConfig {\n  pointColor?: string;\n  pointSize?: number;\n  pointSymbol?: string;\n  showPoints?: VisibilityMode;\n}\n\n/**\n * TODO docs\n */\nexport interface ScaleDistributionConfig {\n  linearThreshold?: number;\n  log?: number;\n  type: ScaleDistribution;\n}\n\n/**\n * TODO docs\n */\nexport interface AxisConfig {\n  axisBorderShow?: boolean;\n  axisCenteredZero?: boolean;\n  axisColorMode?: AxisColorMode;\n  axisGridShow?: boolean;\n  axisLabel?: string;\n  axisPlacement?: AxisPlacement;\n  axisSoftMax?: number;\n  axisSoftMin?: number;\n  axisWidth?: number;\n  scaleDistribution?: ScaleDistributionConfig;\n}\n\n/**\n * TODO docs\n */\nexport interface HideSeriesConfig {\n  legend: boolean;\n  tooltip: boolean;\n  viz: boolean;\n}\n\n/**\n * TODO docs\n */\nexport interface StackingConfig {\n  group?: string;\n  mode?: StackingMode;\n}\n\n/**\n * TODO docs\n */\nexport interface StackableFieldConfig {\n  stacking?: StackingConfig;\n}\n\n/**\n * TODO docs\n */\nexport interface HideableFieldConfig {\n  hideFrom?: HideSeriesConfig;\n}\n\n/**\n * TODO docs\n */\nexport enum GraphThresholdsStyleMode {\n  Area = 'area',\n  Dashed = 'dashed',\n  DashedAndArea = 'dashed+area',\n  Line = 'line',\n  LineAndArea = 'line+area',\n  Off = 'off',\n  Series = 'series',\n}\n\n/**\n * TODO docs\n */\nexport interface GraphThresholdsStyleConfig {\n  mode: GraphThresholdsStyleMode;\n}\n\n/**\n * TODO docs\n */\nexport type LegendPlacement = ('bottom' | 'right');\n\n/**\n * TODO docs\n * Note: \"hidden\" needs to remain as an option for plugins compatibility\n */\nexport enum LegendDisplayMode {\n  Hidden = 'hidden',\n  List = 'list',\n  Table = 'table',\n}\n\n/**\n * TODO docs\n */\nexport interface SingleStatBaseOptions extends OptionsWithTextFormatting {\n  orientation: VizOrientation;\n  reduceOptions: ReduceDataOptions;\n}\n\n/**\n * TODO docs\n */\nexport interface ReduceDataOptions {\n  /**\n   * When !values, pick one value for the whole field\n   */\n  calcs: Array<string>;\n  /**\n   * Which fields to show.  By default this is only numeric fields\n   */\n  fields?: string;\n  /**\n   * if showing all values limit\n   */\n  limit?: number;\n  /**\n   * If true show each row value\n   */\n  values?: boolean;\n}\n\nexport const defaultReduceDataOptions: Partial<ReduceDataOptions> = {\n  calcs: [],\n};\n\n/**\n * TODO docs\n */\nexport enum VizOrientation {\n  Auto = 'auto',\n  Horizontal = 'horizontal',\n  Vertical = 'vertical',\n}\n\n/**\n * TODO docs\n */\nexport interface OptionsWithTooltip {\n  tooltip: VizTooltipOptions;\n}\n\n/**\n * TODO docs\n */\nexport interface OptionsWithLegend {\n  legend: VizLegendOptions;\n}\n\n/**\n * TODO docs\n */\nexport interface OptionsWithTimezones {\n  timezone?: Array<TimeZone>;\n}\n\nexport const defaultOptionsWithTimezones: Partial<OptionsWithTimezones> = {\n  timezone: [],\n};\n\n/**\n * TODO docs\n */\nexport interface OptionsWithTextFormatting {\n  text?: VizTextDisplayOptions;\n}\n\n/**\n * TODO docs\n */\nexport enum BigValueColorMode {\n  Background = 'background',\n  BackgroundSolid = 'background_solid',\n  None = 'none',\n  Value = 'value',\n}\n\n/**\n * TODO docs\n */\nexport enum BigValueGraphMode {\n  Area = 'area',\n  Line = 'line',\n  None = 'none',\n}\n\n/**\n * TODO docs\n */\nexport enum BigValueJustifyMode {\n  Auto = 'auto',\n  Center = 'center',\n}\n\n/**\n * TODO docs\n */\nexport enum BigValueTextMode {\n  Auto = 'auto',\n  Name = 'name',\n  None = 'none',\n  Value = 'value',\n  ValueAndName = 'value_and_name',\n}\n\n/**\n * TODO docs\n */\nexport enum PercentChangeColorMode {\n  Inverted = 'inverted',\n  SameAsValue = 'same_as_value',\n  Standard = 'standard',\n}\n\n/**\n * TODO -- should not be table specific!\n * TODO docs\n */\nexport type FieldTextAlignment = ('auto' | 'left' | 'right' | 'center');\n\n/**\n * Controls the value alignment in the TimelineChart component\n */\nexport type TimelineValueAlignment = ('center' | 'left' | 'right');\n\n/**\n * TODO docs\n */\nexport interface VizTextDisplayOptions {\n  /**\n   * Explicit title text size\n   */\n  titleSize?: number;\n  /**\n   * Explicit value text size\n   */\n  valueSize?: number;\n}\n\n/**\n * TODO docs\n */\nexport enum TooltipDisplayMode {\n  Multi = 'multi',\n  None = 'none',\n  Single = 'single',\n}\n\n/**\n * TODO docs\n */\nexport enum SortOrder {\n  Ascending = 'asc',\n  Descending = 'desc',\n  None = 'none',\n}\n\n/**\n * TODO docs\n */\nexport interface GraphFieldConfig extends LineConfig, FillConfig, PointsConfig, AxisConfig, BarConfig, StackableFieldConfig, HideableFieldConfig {\n  drawStyle?: GraphDrawStyle;\n  gradientMode?: GraphGradientMode;\n  insertNulls?: (boolean | number);\n  thresholdsStyle?: GraphThresholdsStyleConfig;\n  transform?: GraphTransform;\n}\n\n/**\n * TODO docs\n */\nexport interface VizLegendOptions {\n  asTable?: boolean;\n  calcs: Array<string>;\n  displayMode: LegendDisplayMode;\n  isVisible?: boolean;\n  placement: LegendPlacement;\n  showLegend: boolean;\n  sortBy?: string;\n  sortDesc?: boolean;\n  width?: number;\n}\n\nexport const defaultVizLegendOptions: Partial<VizLegendOptions> = {\n  calcs: [],\n};\n\n/**\n * Enum expressing the possible display modes\n * for the bar gauge component of Grafana UI\n */\nexport enum BarGaugeDisplayMode {\n  Basic = 'basic',\n  Gradient = 'gradient',\n  Lcd = 'lcd',\n}\n\n/**\n * Allows for the table cell gauge display type to set the gauge mode.\n */\nexport enum BarGaugeValueMode {\n  Color = 'color',\n  Hidden = 'hidden',\n  Text = 'text',\n}\n\n/**\n * Allows for the bar gauge name to be placed explicitly\n */\nexport enum BarGaugeNamePlacement {\n  Auto = 'auto',\n  Left = 'left',\n  Top = 'top',\n}\n\n/**\n * Allows for the bar gauge size to be set explicitly\n */\nexport enum BarGaugeSizing {\n  Auto = 'auto',\n  Manual = 'manual',\n}\n\n/**\n * TODO docs\n */\nexport interface VizTooltipOptions {\n  maxHeight?: number;\n  maxWidth?: number;\n  mode: TooltipDisplayMode;\n  sort: SortOrder;\n}\n\nexport interface Labels {}\n\n/**\n * Internally, this is the \"type\" of cell that's being displayed\n * in the table such as colored text, JSON, gauge, etc.\n * The color-background-solid, gradient-gauge, and lcd-gauge\n * modes are deprecated in favor of new cell subOptions\n */\nexport enum TableCellDisplayMode {\n  Auto = 'auto',\n  BasicGauge = 'basic',\n  ColorBackground = 'color-background',\n  ColorBackgroundSolid = 'color-background-solid',\n  ColorText = 'color-text',\n  Custom = 'custom',\n  DataLinks = 'data-links',\n  Gauge = 'gauge',\n  GradientGauge = 'gradient-gauge',\n  Image = 'image',\n  JSONView = 'json-view',\n  LcdGauge = 'lcd-gauge',\n  Sparkline = 'sparkline',\n}\n\n/**\n * Display mode to the \"Colored Background\" display\n * mode for table cells. Either displays a solid color (basic mode)\n * or a gradient.\n */\nexport enum TableCellBackgroundDisplayMode {\n  Basic = 'basic',\n  Gradient = 'gradient',\n}\n\n/**\n * Sort by field state\n */\nexport interface TableSortByFieldState {\n  /**\n   * Flag used to indicate descending sort order\n   */\n  desc?: boolean;\n  /**\n   * Sets the display name of the field to sort by\n   */\n  displayName: string;\n}\n\n/**\n * Footer options\n */\nexport interface TableFooterOptions {\n  countRows?: boolean;\n  enablePagination?: boolean;\n  fields?: Array<string>;\n  reducer: Array<string>; // actually 1 value\n  show: boolean;\n}\n\nexport const defaultTableFooterOptions: Partial<TableFooterOptions> = {\n  fields: [],\n  reducer: [],\n};\n\n/**\n * Auto mode table cell options\n */\nexport interface TableAutoCellOptions {\n  type: TableCellDisplayMode.Auto;\n  wrapText?: boolean;\n}\n\n/**\n * Colored text cell options\n */\nexport interface TableColorTextCellOptions {\n  type: TableCellDisplayMode.ColorText;\n  wrapText?: boolean;\n}\n\n/**\n * Json view cell options\n */\nexport interface TableJsonViewCellOptions {\n  type: TableCellDisplayMode.JSONView;\n}\n\n/**\n * Json view cell options\n */\nexport interface TableImageCellOptions {\n  type: TableCellDisplayMode.Image;\n}\n\n/**\n * Show data links in the cell\n */\nexport interface TableDataLinksCellOptions {\n  type: TableCellDisplayMode.DataLinks;\n}\n\n/**\n * Gauge cell options\n */\nexport interface TableBarGaugeCellOptions {\n  mode?: BarGaugeDisplayMode;\n  type: TableCellDisplayMode.Gauge;\n  valueDisplayMode?: BarGaugeValueMode;\n}\n\n/**\n * Sparkline cell options\n */\nexport interface TableSparklineCellOptions extends GraphFieldConfig {\n  hideValue?: boolean;\n  type: TableCellDisplayMode.Sparkline;\n}\n\n/**\n * Colored background cell options\n */\nexport interface TableColoredBackgroundCellOptions {\n  applyToRow?: boolean;\n  mode?: TableCellBackgroundDisplayMode;\n  type: TableCellDisplayMode.ColorBackground;\n  wrapText?: boolean;\n}\n\n/**\n * Height of a table cell\n */\nexport enum TableCellHeight {\n  Auto = 'auto',\n  Lg = 'lg',\n  Md = 'md',\n  Sm = 'sm',\n}\n\n/**\n * Table cell options. Each cell has a display mode\n * and other potential options for that display.\n */\nexport type TableCellOptions = (TableAutoCellOptions | TableSparklineCellOptions | TableBarGaugeCellOptions | TableColoredBackgroundCellOptions | TableColorTextCellOptions | TableImageCellOptions | TableDataLinksCellOptions | TableJsonViewCellOptions);\n\n/**\n * Use UTC/GMT timezone\n */\nexport type TimeZoneUtc = 'utc';\n\n/**\n * Use the timezone defined by end user web browser\n */\nexport type TimeZoneBrowser = 'browser';\n\n/**\n * Optional formats for the template variable replace functions\n * See also https://grafana.com/docs/grafana/latest/dashboards/variables/variable-syntax/#advanced-variable-format-options\n */\nexport enum VariableFormatID {\n  CSV = 'csv',\n  Date = 'date',\n  Distributed = 'distributed',\n  DoubleQuote = 'doublequote',\n  Glob = 'glob',\n  HTML = 'html',\n  JSON = 'json',\n  Lucene = 'lucene',\n  PercentEncode = 'percentencode',\n  Pipe = 'pipe',\n  QueryParam = 'queryparam',\n  Raw = 'raw',\n  Regex = 'regex',\n  SQLString = 'sqlstring',\n  SingleQuote = 'singlequote',\n  Text = 'text',\n  UriEncode = 'uriencode',\n}\n\nexport interface DataSourceRef {\n  /**\n   * The plugin type-id\n   */\n  type?: string;\n  /**\n   * Specific datasource instance\n   */\n  uid?: string;\n}\n\n/**\n * Links to a resource (image/svg path)\n */\nexport interface ResourceDimensionConfig extends BaseDimensionConfig {\n  fixed?: string;\n  mode: ResourceDimensionMode;\n}\n\nexport interface FrameGeometrySource {\n  /**\n   * Path to Gazetteer\n   */\n  gazetteer?: string;\n  /**\n   * Field mappings\n   */\n  geohash?: string;\n  latitude?: string;\n  longitude?: string;\n  lookup?: string;\n  mode: FrameGeometrySourceMode;\n  wkt?: string;\n}\n\nexport interface HeatmapCalculationOptions {\n  /**\n   * The number of buckets to use for the xAxis in the heatmap\n   */\n  xBuckets?: HeatmapCalculationBucketConfig;\n  /**\n   * The number of buckets to use for the yAxis in the heatmap\n   */\n  yBuckets?: HeatmapCalculationBucketConfig;\n}\n\nexport enum LogsDedupStrategy {\n  exact = 'exact',\n  none = 'none',\n  numbers = 'numbers',\n  signature = 'signature',\n}\n\n/**\n * Compare two values\n */\nexport enum ComparisonOperation {\n  EQ = 'eq',\n  GT = 'gt',\n  GTE = 'gte',\n  LT = 'lt',\n  LTE = 'lte',\n  NEQ = 'neq',\n}\n\n/**\n * Field options for each field within a table (e.g 10, \"The String\", 64.20, etc.)\n * Generally defines alignment, filtering capabilties, display options, etc.\n */\nexport interface TableFieldOptions {\n  align: FieldTextAlignment;\n  cellOptions: TableCellOptions;\n  /**\n   * This field is deprecated in favor of using cellOptions\n   */\n  displayMode?: TableCellDisplayMode;\n  filterable?: boolean;\n  hidden?: boolean; // ?? default is missing or false ??\n  /**\n   * Hides any header for a column, useful for columns that show some static content or buttons.\n   */\n  hideHeader?: boolean;\n  inspect: boolean;\n  minWidth?: number;\n  width?: number;\n}\n\nexport const defaultTableFieldOptions: Partial<TableFieldOptions> = {\n  align: 'auto',\n  inspect: false,\n};\n\n/**\n * A specific timezone from https://en.wikipedia.org/wiki/Tz_database\n */\nexport type TimeZone = (TimeZoneUtc | TimeZoneBrowser | string);\n\nexport const defaultTimeZone: TimeZone = 'browser';\n"],"names":["DataTopic","ScaleDimensionMode","ScalarDimensionMode","TextDimensionMode","ResourceDimensionMode","FrameGeometrySourceMode","HeatmapCalculationMode","HeatmapCellLayout","LogsSortOrder","AxisPlacement","AxisColorMode","VisibilityMode","GraphDrawStyle","GraphTransform","LineInterpolation","ScaleDistribution","GraphGradientMode","StackingMode","BarAlignment","ScaleOrientation","ScaleDirection","GraphThresholdsStyleMode","LegendDisplayMode","VizOrientation","BigValueColorMode","BigValueGraphMode","BigValueJustifyMode","BigValueTextMode","PercentChangeColorMode","TooltipDisplayMode","SortOrder","BarGaugeDisplayMode","BarGaugeValueMode","BarGaugeNamePlacement","BarGaugeSizing","TableCellDisplayMode","TableCellBackgroundDisplayMode","TableCellHeight","VariableFormatID","LogsDedupStrategy","ComparisonOperation"],"mappings":"AAcY,IAAA,SAAA,qBAAAA,UAAL,KAAA;AACL,EAAAA,WAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,WAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,WAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAHC,EAAAA,OAAAA,UAAAA,CAAAA;AAAA,CAAA,EAAA,SAAA,IAAA,EAAA,EAAA;AAsDA,IAAA,kBAAA,qBAAAC,mBAAL,KAAA;AACL,EAAAA,oBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,oBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAFG,EAAAA,OAAAA,mBAAAA,CAAAA;AAAA,CAAA,EAAA,kBAAA,IAAA,EAAA,EAAA;AAgBA,IAAA,mBAAA,qBAAAC,oBAAL,KAAA;AACL,EAAAA,qBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,qBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AAFI,EAAAA,OAAAA,oBAAAA,CAAAA;AAAA,CAAA,EAAA,mBAAA,IAAA,EAAA,EAAA;AAYA,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,mBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,mBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AAHD,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AAWA,IAAA,qBAAA,qBAAAC,sBAAL,KAAA;AACL,EAAAA,uBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,uBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,uBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AAHA,EAAAA,OAAAA,sBAAAA,CAAAA;AAAA,CAAA,EAAA,qBAAA,IAAA,EAAA,EAAA;AAoCA,IAAA,uBAAA,qBAAAC,wBAAL,KAAA;AACL,EAAAA,yBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,yBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,yBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,yBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAJC,EAAAA,OAAAA,wBAAAA,CAAAA;AAAA,CAAA,EAAA,uBAAA,IAAA,EAAA,EAAA;AAOA,IAAA,sBAAA,qBAAAC,uBAAL,KAAA;AACL,EAAAA,wBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,wBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAFG,EAAAA,OAAAA,uBAAAA,CAAAA;AAAA,CAAA,EAAA,sBAAA,IAAA,EAAA,EAAA;AAKA,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,mBAAA,IAAK,CAAA,GAAA,IAAA,CAAA;AACL,EAAAA,mBAAA,IAAK,CAAA,GAAA,IAAA,CAAA;AACL,EAAAA,mBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AAJA,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AAsBA,IAAA,aAAA,qBAAAC,cAAL,KAAA;AACL,EAAAA,eAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AACZ,EAAAA,eAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AAFH,EAAAA,OAAAA,cAAAA,CAAAA;AAAA,CAAA,EAAA,aAAA,IAAA,EAAA,EAAA;AAQA,IAAA,aAAA,qBAAAC,cAAL,KAAA;AACL,EAAAA,eAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,eAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,eAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,eAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,eAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,eAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AANI,EAAAA,OAAAA,cAAAA,CAAAA;AAAA,CAAA,EAAA,aAAA,IAAA,EAAA,EAAA;AAYA,IAAA,aAAA,qBAAAC,cAAL,KAAA;AACL,EAAAA,eAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,eAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAFG,EAAAA,OAAAA,cAAAA,CAAAA;AAAA,CAAA,EAAA,aAAA,IAAA,EAAA,EAAA;AAQA,IAAA,cAAA,qBAAAC,eAAL,KAAA;AACL,EAAAA,gBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,gBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,gBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AAHE,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA,EAAA;AASA,IAAA,cAAA,qBAAAC,eAAL,KAAA;AACL,EAAAA,gBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,gBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,gBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAHC,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA,EAAA;AASA,IAAA,cAAA,qBAAAC,eAAL,KAAA;AACL,EAAAA,gBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AACX,EAAAA,gBAAA,WAAY,CAAA,GAAA,YAAA,CAAA;AAFF,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA,EAAA;AAQA,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,mBAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AACZ,EAAAA,mBAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AAJH,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AAUA,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,mBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AACN,EAAAA,mBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAJC,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AAUA,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AACN,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,mBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAJC,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AAUA,IAAA,YAAA,qBAAAC,aAAL,KAAA;AACL,EAAAA,cAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,cAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,cAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AAHA,EAAAA,OAAAA,aAAAA,CAAAA;AAAA,CAAA,EAAA,YAAA,IAAA,EAAA,EAAA;AASA,IAAA,YAAA,qBAAAC,aAAL,KAAA;AACL,EAAAA,aAAAA,CAAAA,aAAAA,CAAA,WAAQ,CAAR,CAAA,GAAA,OAAA,CAAA;AACA,EAAAA,aAAAA,CAAAA,aAAAA,CAAA,YAAS,CAAT,CAAA,CAAA,GAAA,QAAA,CAAA;AACA,EAAAA,aAAAA,CAAAA,aAAAA,CAAA,YAAS,CAAT,CAAA,GAAA,QAAA,CAAA;AAHU,EAAAA,OAAAA,aAAAA,CAAAA;AAAA,CAAA,EAAA,YAAA,IAAA,EAAA,EAAA;AASA,IAAA,gBAAA,qBAAAC,iBAAL,KAAA;AACL,EAAAA,iBAAAA,CAAAA,iBAAAA,CAAA,gBAAa,CAAb,CAAA,GAAA,YAAA,CAAA;AACA,EAAAA,iBAAAA,CAAAA,iBAAAA,CAAA,cAAW,CAAX,CAAA,GAAA,UAAA,CAAA;AAFU,EAAAA,OAAAA,iBAAAA,CAAAA;AAAA,CAAA,EAAA,gBAAA,IAAA,EAAA,EAAA;AAQA,IAAA,cAAA,qBAAAC,eAAL,KAAA;AACL,EAAAA,eAAAA,CAAAA,eAAAA,CAAA,UAAO,CAAP,CAAA,CAAA,GAAA,MAAA,CAAA;AACA,EAAAA,eAAAA,CAAAA,eAAAA,CAAA,UAAO,CAAP,CAAA,CAAA,GAAA,MAAA,CAAA;AACA,EAAAA,eAAAA,CAAAA,eAAAA,CAAA,WAAQ,CAAR,CAAA,GAAA,OAAA,CAAA;AACA,EAAAA,eAAAA,CAAAA,eAAAA,CAAA,QAAK,CAAL,CAAA,GAAA,IAAA,CAAA;AAJU,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA,EAAA;AAeL,MAAM,gBAAuC,GAAA;AAAA,EAClD,MAAM,EAAC;AACT,EAAA;AAyGY,IAAA,wBAAA,qBAAAC,yBAAL,KAAA;AACL,EAAAA,0BAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,0BAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,0BAAA,eAAgB,CAAA,GAAA,aAAA,CAAA;AAChB,EAAAA,0BAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,0BAAA,aAAc,CAAA,GAAA,WAAA,CAAA;AACd,EAAAA,0BAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AACN,EAAAA,0BAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAPC,EAAAA,OAAAA,yBAAAA,CAAAA;AAAA,CAAA,EAAA,wBAAA,IAAA,EAAA,EAAA;AA0BA,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,mBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AAHE,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AAoCL,MAAM,wBAAuD,GAAA;AAAA,EAClE,OAAO,EAAC;AACV,EAAA;AAKY,IAAA,cAAA,qBAAAC,eAAL,KAAA;AACL,EAAAA,gBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,gBAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AACb,EAAAA,gBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AAHD,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA,EAAA;AA2BL,MAAM,2BAA6D,GAAA;AAAA,EACxE,UAAU,EAAC;AACb,EAAA;AAYY,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AACb,EAAAA,mBAAA,iBAAkB,CAAA,GAAA,kBAAA,CAAA;AAClB,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,mBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AAJE,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AAUA,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAHG,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AASA,IAAA,mBAAA,qBAAAC,oBAAL,KAAA;AACL,EAAAA,qBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,qBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAFC,EAAAA,OAAAA,oBAAAA,CAAAA;AAAA,CAAA,EAAA,mBAAA,IAAA,EAAA,EAAA;AAQA,IAAA,gBAAA,qBAAAC,iBAAL,KAAA;AACL,EAAAA,kBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,kBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,kBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,kBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,kBAAA,cAAe,CAAA,GAAA,gBAAA,CAAA;AALL,EAAAA,OAAAA,iBAAAA,CAAAA;AAAA,CAAA,EAAA,gBAAA,IAAA,EAAA,EAAA;AAWA,IAAA,sBAAA,qBAAAC,uBAAL,KAAA;AACL,EAAAA,wBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AACX,EAAAA,wBAAA,aAAc,CAAA,GAAA,eAAA,CAAA;AACd,EAAAA,wBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AAHD,EAAAA,OAAAA,uBAAAA,CAAAA;AAAA,CAAA,EAAA,sBAAA,IAAA,EAAA,EAAA;AAkCA,IAAA,kBAAA,qBAAAC,mBAAL,KAAA;AACL,EAAAA,oBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,oBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,oBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAHC,EAAAA,OAAAA,mBAAAA,CAAAA;AAAA,CAAA,EAAA,kBAAA,IAAA,EAAA,EAAA;AASA,IAAA,SAAA,qBAAAC,UAAL,KAAA;AACL,EAAAA,WAAA,WAAY,CAAA,GAAA,KAAA,CAAA;AACZ,EAAAA,WAAA,YAAa,CAAA,GAAA,MAAA,CAAA;AACb,EAAAA,WAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAHG,EAAAA,OAAAA,UAAAA,CAAAA;AAAA,CAAA,EAAA,SAAA,IAAA,EAAA,EAAA;AAgCL,MAAM,uBAAqD,GAAA;AAAA,EAChE,OAAO,EAAC;AACV,EAAA;AAMY,IAAA,mBAAA,qBAAAC,oBAAL,KAAA;AACL,EAAAA,qBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,qBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AACX,EAAAA,qBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AAHI,EAAAA,OAAAA,oBAAAA,CAAAA;AAAA,CAAA,EAAA,mBAAA,IAAA,EAAA,EAAA;AASA,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAHG,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AASA,IAAA,qBAAA,qBAAAC,sBAAL,KAAA;AACL,EAAAA,uBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,uBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,uBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AAHI,EAAAA,OAAAA,sBAAAA,CAAAA;AAAA,CAAA,EAAA,qBAAA,IAAA,EAAA,EAAA;AASA,IAAA,cAAA,qBAAAC,eAAL,KAAA;AACL,EAAAA,gBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,gBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAFC,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA,EAAA;AAuBA,IAAA,oBAAA,qBAAAC,qBAAL,KAAA;AACL,EAAAA,sBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,sBAAA,YAAa,CAAA,GAAA,OAAA,CAAA;AACb,EAAAA,sBAAA,iBAAkB,CAAA,GAAA,kBAAA,CAAA;AAClB,EAAAA,sBAAA,sBAAuB,CAAA,GAAA,wBAAA,CAAA;AACvB,EAAAA,sBAAA,WAAY,CAAA,GAAA,YAAA,CAAA;AACZ,EAAAA,sBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,sBAAA,WAAY,CAAA,GAAA,YAAA,CAAA;AACZ,EAAAA,sBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,sBAAA,eAAgB,CAAA,GAAA,gBAAA,CAAA;AAChB,EAAAA,sBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,sBAAA,UAAW,CAAA,GAAA,WAAA,CAAA;AACX,EAAAA,sBAAA,UAAW,CAAA,GAAA,WAAA,CAAA;AACX,EAAAA,sBAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AAbF,EAAAA,OAAAA,qBAAAA,CAAAA;AAAA,CAAA,EAAA,oBAAA,IAAA,EAAA,EAAA;AAqBA,IAAA,8BAAA,qBAAAC,+BAAL,KAAA;AACL,EAAAA,gCAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,gCAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AAFD,EAAAA,OAAAA,+BAAAA,CAAAA;AAAA,CAAA,EAAA,8BAAA,IAAA,EAAA,EAAA;AA8BL,MAAM,yBAAyD,GAAA;AAAA,EACpE,QAAQ,EAAC;AAAA,EACT,SAAS,EAAC;AACZ,EAAA;AAqEY,IAAA,eAAA,qBAAAC,gBAAL,KAAA;AACL,EAAAA,iBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,iBAAA,IAAK,CAAA,GAAA,IAAA,CAAA;AACL,EAAAA,iBAAA,IAAK,CAAA,GAAA,IAAA,CAAA;AACL,EAAAA,iBAAA,IAAK,CAAA,GAAA,IAAA,CAAA;AAJK,EAAAA,OAAAA,gBAAAA,CAAAA;AAAA,CAAA,EAAA,eAAA,IAAA,EAAA,EAAA;AA2BA,IAAA,gBAAA,qBAAAC,iBAAL,KAAA;AACL,EAAAA,kBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AACN,EAAAA,kBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,kBAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,kBAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,kBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,kBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,kBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,kBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,kBAAA,eAAgB,CAAA,GAAA,eAAA,CAAA;AAChB,EAAAA,kBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,kBAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AACb,EAAAA,kBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AACN,EAAAA,kBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,kBAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AACZ,EAAAA,kBAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,kBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,kBAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AAjBF,EAAAA,OAAAA,iBAAAA,CAAAA;AAAA,CAAA,EAAA,gBAAA,IAAA,EAAA,EAAA;AAkEA,IAAA,iBAAA,qBAAAC,kBAAL,KAAA;AACL,EAAAA,mBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,mBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,mBAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AAJF,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA,EAAA;AAUA,IAAA,mBAAA,qBAAAC,oBAAL,KAAA;AACL,EAAAA,qBAAA,IAAK,CAAA,GAAA,IAAA,CAAA;AACL,EAAAA,qBAAA,IAAK,CAAA,GAAA,IAAA,CAAA;AACL,EAAAA,qBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AACN,EAAAA,qBAAA,IAAK,CAAA,GAAA,IAAA,CAAA;AACL,EAAAA,qBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AACN,EAAAA,qBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AANI,EAAAA,OAAAA,oBAAAA,CAAAA;AAAA,CAAA,EAAA,mBAAA,IAAA,EAAA,EAAA;AAyCL,MAAM,eAA4B,GAAA;;;;"}