{"version":3,"file":"accesspolicy_types.gen.js","sources":["../../../../../src/raw/accesspolicy/x/accesspolicy_types.gen.ts"],"sourcesContent":["// Code generated - EDITING IS FUTILE. DO NOT EDIT.\n//\n// Generated by:\n//     kinds/gen.go\n// Using jennies:\n//     TSTypesJenny\n//     LatestMajorsOrXJenny\n//\n// Run 'make gen-cue' from repository root to regenerate.\n\nexport interface RoleRef {\n  /**\n   * Policies can apply to roles, teams, or users\n   * Applying policies to individual users is supported, but discouraged\n   */\n  kind: ('Role' | 'BuiltinRole' | 'Team' | 'User');\n  name: string;\n  xname: string; // temporary\n}\n\nexport interface ResourceRef {\n  kind: string; // explicit resource or folder will cascade\n  name: string;\n}\n\nexport interface AccessRule {\n  /**\n   * The kind this rule applies to (dashboards, alert, etc)\n   */\n  kind: ('*' | string);\n  /**\n   * Specific sub-elements like \"alert.rules\" or \"dashboard.permissions\"????\n   */\n  target?: string;\n  /**\n   * READ, WRITE, CREATE, DELETE, ...\n   * should move to k8s style verbs like: \"get\", \"list\", \"watch\", \"create\", \"update\", \"patch\", \"delete\"\n   */\n  verb: ('*' | 'none' | string);\n}\n\nexport interface AccessPolicy {\n  /**\n   * The role that must apply this policy\n   */\n  role: RoleRef;\n  /**\n   * The set of rules to apply.  Note that * is required to modify\n   * access policy rules, and that \"none\" will reject all actions\n   */\n  rules: Array<AccessRule>;\n  /**\n   * The scope where these policies should apply\n   */\n  scope: ResourceRef;\n}\n\nexport const defaultAccessPolicy: Partial<AccessPolicy> = {\n  rules: [],\n};\n"],"names":[],"mappings":"AAyDO,MAAM,mBAA6C,GAAA;AAAA,EACxD,OAAO,EAAC;AACV;;;;"}