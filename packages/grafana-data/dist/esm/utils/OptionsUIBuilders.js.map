{"version":3,"file":"OptionsUIBuilders.js","sources":["../../../src/utils/OptionsUIBuilders.ts"],"sourcesContent":["import { set, cloneDeep } from 'lodash';\n\nimport {\n  numberOverrideProcessor,\n  selectOverrideProcessor,\n  stringOverrideProcessor,\n  booleanOverrideProcessor,\n  standardEditorsRegistry,\n  SelectFieldConfigSettings,\n  StandardEditorProps,\n  StringFieldConfigSettings,\n  NumberFieldConfigSettings,\n  SliderFieldConfigSettings,\n  identityOverrideProcessor,\n  UnitFieldConfigSettings,\n  unitOverrideProcessor,\n  FieldNamePickerConfigSettings,\n  StandardEditorContext,\n} from '../field';\nimport { PanelOptionsSupplier } from '../panel/PanelPlugin';\nimport { isObject } from '../types';\nimport { OptionsEditorItem, OptionsUIRegistryBuilder } from '../types/OptionsUIRegistryBuilder';\nimport { FieldConfigPropertyItem, FieldConfigEditorConfig } from '../types/fieldOverrides';\nimport { PanelOptionsEditorConfig, PanelOptionsEditorItem } from '../types/panel';\n\n/**\n * Fluent API for declarative creation of field config option editors\n */\nexport class FieldConfigEditorBuilder<TOptions> extends OptionsUIRegistryBuilder<\n  TOptions,\n  StandardEditorProps<any, any>,\n  FieldConfigPropertyItem<TOptions>\n> {\n  addNumberInput<TSettings>(config: FieldConfigEditorConfig<TOptions, TSettings & NumberFieldConfigSettings, number>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      override: standardEditorsRegistry.get('number').editor,\n      editor: standardEditorsRegistry.get('number').editor,\n      process: numberOverrideProcessor,\n      shouldApply: config.shouldApply ?? (() => true),\n      settings: config.settings || {},\n    });\n  }\n\n  addSliderInput<TSettings>(config: FieldConfigEditorConfig<TOptions, TSettings & SliderFieldConfigSettings, number>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      override: standardEditorsRegistry.get('slider').editor,\n      editor: standardEditorsRegistry.get('slider').editor,\n      process: numberOverrideProcessor,\n      shouldApply: config.shouldApply ?? (() => true),\n      settings: config.settings || {},\n    });\n  }\n\n  addTextInput<TSettings>(config: FieldConfigEditorConfig<TOptions, TSettings & StringFieldConfigSettings, string>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      override: standardEditorsRegistry.get('text').editor,\n      editor: standardEditorsRegistry.get('text').editor,\n      process: stringOverrideProcessor,\n      shouldApply: config.shouldApply ?? (() => true),\n      settings: config.settings || {},\n    });\n  }\n\n  addSelect<TOption, TSettings extends SelectFieldConfigSettings<TOption>>(\n    config: FieldConfigEditorConfig<TOptions, TSettings, TOption>\n  ) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      override: standardEditorsRegistry.get('select').editor,\n      editor: standardEditorsRegistry.get('select').editor,\n      process: selectOverrideProcessor,\n      // ???\n      shouldApply: config.shouldApply ? config.shouldApply : () => true,\n      settings: config.settings || { options: [] },\n    });\n  }\n\n  addRadio<TOption, TSettings = any>(config: FieldConfigEditorConfig<TOptions, TSettings, TOption>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      override: standardEditorsRegistry.get('radio').editor,\n      editor: standardEditorsRegistry.get('radio').editor,\n      process: selectOverrideProcessor,\n      // ???\n      shouldApply: config.shouldApply ? config.shouldApply : () => true,\n      settings: config.settings || { options: [] },\n    });\n  }\n\n  addBooleanSwitch<TSettings = any>(config: FieldConfigEditorConfig<TOptions, TSettings, boolean>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('boolean').editor,\n      override: standardEditorsRegistry.get('boolean').editor,\n      process: booleanOverrideProcessor,\n      shouldApply: config.shouldApply ? config.shouldApply : () => true,\n      settings: config.settings || {},\n    });\n  }\n\n  addColorPicker<TSettings = any>(config: FieldConfigEditorConfig<TOptions, TSettings, string>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('color').editor,\n      override: standardEditorsRegistry.get('color').editor,\n      process: identityOverrideProcessor,\n      shouldApply: config.shouldApply ? config.shouldApply : () => true,\n      settings: config.settings || {},\n    });\n  }\n\n  addUnitPicker<TSettings = any>(\n    config: FieldConfigEditorConfig<TOptions, TSettings & UnitFieldConfigSettings, string>\n  ) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('unit').editor,\n      override: standardEditorsRegistry.get('unit').editor,\n      process: unitOverrideProcessor,\n      shouldApply: config.shouldApply ? config.shouldApply : () => true,\n      settings: config.settings || {},\n    });\n  }\n\n  addFieldNamePicker<TSettings = any>(\n    config: FieldConfigEditorConfig<TOptions, TSettings & FieldNamePickerConfigSettings, string>\n  ): this {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('field-name').editor,\n      override: standardEditorsRegistry.get('field-name').editor,\n      process: identityOverrideProcessor,\n      shouldApply: config.shouldApply ? config.shouldApply : () => true,\n      settings: config.settings || {},\n    });\n  }\n\n  addGenericEditor<TSettings = any>(\n    config: FieldConfigEditorConfig<TOptions, TSettings & any>, // & any... i give up!\n    editor: (props: StandardEditorProps<TSettings>) => JSX.Element\n  ): this {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: editor,\n      override: editor,\n      process: identityOverrideProcessor,\n      shouldApply: config.shouldApply ? config.shouldApply : () => true,\n      settings: config.settings || {},\n    });\n  }\n}\n\nexport interface NestedValueAccess {\n  getValue: (path: string) => any;\n  onChange: (path: string, value: any) => void;\n  getContext?: (parent: StandardEditorContext<any, any>) => StandardEditorContext<any, any>;\n}\nexport interface NestedPanelOptions<TSub = any> {\n  path: string;\n  category?: string[];\n  defaultValue?: TSub;\n  build: PanelOptionsSupplier<TSub>;\n  values?: (parent: NestedValueAccess) => NestedValueAccess;\n}\n\nexport class NestedPanelOptionsBuilder<TSub = any> implements OptionsEditorItem<TSub, any, any, any> {\n  path = '';\n  category?: string[];\n  defaultValue?: TSub;\n  id = 'nested-panel-options';\n  name = 'nested';\n  editor = () => null;\n\n  constructor(public cfg: NestedPanelOptions<TSub>) {\n    this.path = cfg.path;\n    this.category = cfg.category;\n    this.defaultValue = this.getDefaultValue(cfg);\n  }\n\n  private getDefaultValue(cfg: NestedPanelOptions<TSub>): TSub {\n    let result = isObject(cfg.defaultValue) ? cloneDeep(cfg.defaultValue) : {};\n\n    const builder = new PanelOptionsEditorBuilder<TSub>();\n    cfg.build(builder, { data: [] });\n\n    for (const item of builder.getItems()) {\n      if (item.defaultValue != null) {\n        set(result, item.path, item.defaultValue);\n      }\n    }\n\n    // TSub is defined as type any and we need to cast it back\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return result as TSub;\n  }\n\n  getBuilder = () => {\n    return this.cfg.build;\n  };\n\n  getNestedValueAccess = (parent: NestedValueAccess) => {\n    const values = this.cfg.values;\n    if (values) {\n      return values(parent);\n    }\n    // by default prefix the path\n    return {\n      getValue: (path: string) => parent.getValue(`${this.path}.${path}`),\n      onChange: (path: string, value: any) => parent.onChange(`${this.path}.${path}`, value),\n    };\n  };\n}\n\nexport function isNestedPanelOptions(item: unknown): item is NestedPanelOptionsBuilder {\n  return isObject(item) && 'id' in item && item.id === 'nested-panel-options';\n}\n\n/**\n * Fluent API for declarative creation of panel options\n */\nexport class PanelOptionsEditorBuilder<TOptions> extends OptionsUIRegistryBuilder<\n  TOptions,\n  StandardEditorProps,\n  PanelOptionsEditorItem<TOptions>\n> {\n  addNestedOptions<Sub>(opts: NestedPanelOptions<Sub>) {\n    const s = new NestedPanelOptionsBuilder<Sub>(opts);\n    return this.addCustomEditor(s);\n  }\n\n  addNumberInput<TSettings>(config: PanelOptionsEditorConfig<TOptions, TSettings & NumberFieldConfigSettings, number>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('number').editor,\n    });\n  }\n\n  addSliderInput<TSettings>(config: PanelOptionsEditorConfig<TOptions, TSettings & SliderFieldConfigSettings, number>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('slider').editor,\n    });\n  }\n\n  addTextInput<TSettings>(config: PanelOptionsEditorConfig<TOptions, TSettings & StringFieldConfigSettings, string>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('text').editor,\n    });\n  }\n\n  addStringArray<TSettings>(\n    config: PanelOptionsEditorConfig<TOptions, TSettings & StringFieldConfigSettings, string[]>\n  ) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('strings').editor,\n    });\n  }\n\n  addSelect<TOption, TSettings extends SelectFieldConfigSettings<TOption>>(\n    config: PanelOptionsEditorConfig<TOptions, TSettings, TOption>\n  ) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('select').editor,\n    });\n  }\n\n  addMultiSelect<TOption, TSettings extends SelectFieldConfigSettings<TOption>>(\n    config: PanelOptionsEditorConfig<TOptions, TSettings, TOption>\n  ) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('multi-select').editor,\n    });\n  }\n\n  addRadio<TOption, TSettings extends SelectFieldConfigSettings<TOption>>(\n    config: PanelOptionsEditorConfig<TOptions, TSettings, TOption>\n  ) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('radio').editor,\n    });\n  }\n\n  addBooleanSwitch<TSettings = any>(config: PanelOptionsEditorConfig<TOptions, TSettings, boolean>) {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('boolean').editor,\n    });\n  }\n\n  addColorPicker<TSettings = any>(config: PanelOptionsEditorConfig<TOptions, TSettings, string>): this {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('color').editor,\n      settings: config.settings || {},\n    });\n  }\n\n  addTimeZonePicker<TSettings = any>(config: PanelOptionsEditorConfig<TOptions, TSettings, string>): this {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('timezone').editor,\n      settings: config.settings || {},\n    });\n  }\n\n  addUnitPicker<TSettings = any>(\n    config: PanelOptionsEditorConfig<TOptions, TSettings & UnitFieldConfigSettings, string>\n  ): this {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('unit').editor,\n    });\n  }\n\n  addFieldNamePicker<TSettings = any>(\n    config: PanelOptionsEditorConfig<TOptions, TSettings & FieldNamePickerConfigSettings, string>\n  ): this {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('field-name').editor,\n    });\n  }\n\n  addDashboardPicker<TSettings = any>(\n    config: PanelOptionsEditorConfig<TOptions, TSettings & FieldNamePickerConfigSettings, string>\n  ): this {\n    return this.addCustomEditor({\n      ...config,\n      id: config.path,\n      editor: standardEditorsRegistry.get('dashboard-uid').editor, // added at runtime\n    });\n  }\n}\n"],"names":[],"mappings":"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"}