{"version":3,"file":"nodeGraph.js","sources":["../../../src/utils/nodeGraph.ts"],"sourcesContent":["export enum NodeGraphDataFrameFieldNames {\n  // Unique identifier [required] [nodes + edges]\n  id = 'id',\n  // Text to show under the node [nodes]\n  title = 'title',\n  // Text to show under the node as second line [nodes]\n  subTitle = 'subtitle',\n  // Main value to be shown inside the node [nodes]\n  mainStat = 'mainstat',\n  // Second value to be shown inside the node under the mainStat [nodes]\n  secondaryStat = 'secondarystat',\n  // Prefix for fields which value will represent part of the color circle around the node, values should add up to 1 [nodes]\n  arc = 'arc__',\n  // Will show a named icon inside the node circle if defined. Can be used only with icons already available in\n  // grafana/ui [nodes]\n  icon = 'icon',\n  // Defines a single color if string (hex or html named value) or color mode config can be used as threshold or\n  // gradient. arc__ fields must not be defined if used [nodes + edges]\n  color = 'color',\n\n  // Id of the source node [required] [edges]\n  source = 'source',\n  // Id of the target node [required] [edges]\n  target = 'target',\n\n  // Prefix for fields which will be shown in a context menu [nodes + edges]\n  detail = 'detail__',\n\n  // Radius of the node [nodes]\n  nodeRadius = 'noderadius',\n\n  // Thickness of the edge [edges]\n  thickness = 'thickness',\n\n  // Whether the node or edge should be highlighted (e.g., shown in red) in the UI [nodes + edges]\n  // @deprecated -- for edges use color instead\n  highlighted = 'highlighted',\n\n  // Defines the stroke dash array for the edge [edges]. See SVG strokeDasharray definition for syntax.\n  strokeDasharray = 'strokedasharray',\n\n  // Supplies a fixed X position for the node to have in the finished graph.\n  fixedX = 'fixedx',\n\n  // Supplies a fixed Y position for the node to have in the finished graph.\n  fixedY = 'fixedy',\n}\n"],"names":["NodeGraphDataFrameFieldNames"],"mappings":"AAAY,IAAA,4BAAA,qBAAAA,6BAAL,KAAA;AAEL,EAAAA,8BAAA,IAAK,CAAA,GAAA,IAAA,CAAA;AAEL,EAAAA,8BAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AAER,EAAAA,8BAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AAEX,EAAAA,8BAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AAEX,EAAAA,8BAAA,eAAgB,CAAA,GAAA,eAAA,CAAA;AAEhB,EAAAA,8BAAA,KAAM,CAAA,GAAA,OAAA,CAAA;AAGN,EAAAA,8BAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAGP,EAAAA,8BAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AAGR,EAAAA,8BAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAET,EAAAA,8BAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAGT,EAAAA,8BAAA,QAAS,CAAA,GAAA,UAAA,CAAA;AAGT,EAAAA,8BAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AAGb,EAAAA,8BAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AAIZ,EAAAA,8BAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AAGd,EAAAA,8BAAA,iBAAkB,CAAA,GAAA,iBAAA,CAAA;AAGlB,EAAAA,8BAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAGT,EAAAA,8BAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AA7CC,EAAAA,OAAAA,6BAAAA,CAAAA;AAAA,CAAA,EAAA,4BAAA,IAAA,EAAA;;;;"}