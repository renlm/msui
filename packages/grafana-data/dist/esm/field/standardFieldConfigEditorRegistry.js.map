{"version":3,"file":"standardFieldConfigEditorRegistry.js","sources":["../../../src/field/standardFieldConfigEditorRegistry.ts"],"sourcesContent":["import { ComponentType } from 'react';\n\nimport { EventBus } from '../events';\nimport { DataFrame, InterpolateFunction, VariableSuggestionsScope, VariableSuggestion } from '../types';\nimport { Registry, RegistryItem } from '../utils/Registry';\n\nimport { FieldConfigOptionsRegistry } from './FieldConfigOptionsRegistry';\n\nexport interface StandardEditorContext<TOptions, TState = any> {\n  data: DataFrame[]; // All results\n  replaceVariables?: InterpolateFunction;\n  eventBus?: EventBus;\n  getSuggestions?: (scope?: VariableSuggestionsScope) => VariableSuggestion[];\n  options?: TOptions;\n  instanceState?: TState;\n  isOverride?: boolean;\n}\n\nexport interface StandardEditorProps<TValue = any, TSettings = any, TOptions = any, TState = any> {\n  value: TValue;\n  onChange: (value?: TValue) => void;\n  context: StandardEditorContext<TOptions, TState>;\n  id?: string;\n\n  item: RegistryItem & {\n    settings?: TSettings;\n  };\n}\n\nexport interface StandardEditorsRegistryItem<TValue = any, TSettings = any> extends RegistryItem {\n  editor: ComponentType<StandardEditorProps<TValue, TSettings>>;\n  settings?: TSettings;\n}\nexport const standardFieldConfigEditorRegistry = new FieldConfigOptionsRegistry();\n\nexport const standardEditorsRegistry = new Registry<StandardEditorsRegistryItem>();\n"],"names":[],"mappings":";;;AAiCa,MAAA,iCAAA,GAAoC,IAAI,0BAA2B,GAAA;AAEnE,MAAA,uBAAA,GAA0B,IAAI,QAAsC;;;;"}