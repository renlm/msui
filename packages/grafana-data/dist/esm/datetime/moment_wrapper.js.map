{"version":3,"file":"moment_wrapper.js","sources":["../../../src/datetime/moment_wrapper.ts"],"sourcesContent":["import moment, { Moment, MomentInput, DurationInputArg1, DurationInputArg2 } from 'moment';\n\nimport { TimeZone } from '../types/time';\n/* eslint-disable id-blacklist, no-restricted-imports, @typescript-eslint/ban-types */\nexport interface DateTimeBuiltinFormat {\n  __momentBuiltinFormatBrand: any;\n}\nexport const ISO_8601: DateTimeBuiltinFormat = moment.ISO_8601;\nexport type DateTimeInput = Date | string | number | Array<string | number> | DateTime | null; // | undefined;\nexport type FormatInput = string | DateTimeBuiltinFormat | undefined;\nexport type DurationInput = string | number | DateTimeDuration;\nexport type DurationUnit =\n  | 'year'\n  | 'years'\n  | 'y'\n  | 'month'\n  | 'months'\n  | 'M'\n  | 'week'\n  | 'weeks'\n  | 'isoWeek'\n  | 'w'\n  | 'day'\n  | 'days'\n  | 'd'\n  | 'hour'\n  | 'hours'\n  | 'h'\n  | 'minute'\n  | 'minutes'\n  | 'm'\n  | 'second'\n  | 'seconds'\n  | 's'\n  | 'millisecond'\n  | 'milliseconds'\n  | 'ms'\n  | 'quarter'\n  | 'quarters'\n  | 'Q';\n\nexport interface DateTimeLocale {\n  firstDayOfWeek: () => number;\n}\n\nexport interface DateTimeDuration {\n  asHours: () => number;\n  hours: () => number;\n  minutes: () => number;\n  seconds: () => number;\n  asSeconds: () => number;\n}\n\nexport interface DateTime extends Object {\n  add: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;\n  set: (unit: DurationUnit | 'date', amount: DateTimeInput) => void;\n  diff: (amount: DateTimeInput, unit?: DurationUnit, truncate?: boolean) => number;\n  endOf: (unitOfTime: DurationUnit) => DateTime;\n  format: (formatInput?: FormatInput) => string;\n  fromNow: (withoutSuffix?: boolean) => string;\n  from: (formaInput: DateTimeInput) => string;\n  isSame: (input?: DateTimeInput, granularity?: DurationUnit) => boolean;\n  isBefore: (input?: DateTimeInput) => boolean;\n  isValid: () => boolean;\n  local: () => DateTime;\n  locale: (locale: string) => DateTime;\n  startOf: (unitOfTime: DurationUnit) => DateTime;\n  subtract: (amount?: DateTimeInput, unit?: DurationUnit) => DateTime;\n  toDate: () => Date;\n  toISOString: (keepOffset?: boolean) => string;\n  isoWeekday: (day?: number | string) => number | string;\n  valueOf: () => number;\n  unix: () => number;\n  utc: () => DateTime;\n  utcOffset: () => number;\n  hour?: () => number;\n  minute?: () => number;\n}\n\nexport const setLocale = (language: string) => {\n  moment.locale(language);\n};\n\nexport const getLocale = () => {\n  return moment.locale();\n};\n\nexport const getLocaleData = (): DateTimeLocale => {\n  return moment.localeData();\n};\n\nexport const isDateTimeInput = (value: unknown): value is DateTimeInput => {\n  return (\n    value === null ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    value instanceof Date ||\n    (Array.isArray(value) && value.every((v) => typeof v === 'string' || typeof v === 'number')) ||\n    isDateTime(value)\n  );\n};\n\nexport const isDateTime = (value: unknown): value is DateTime => {\n  return moment.isMoment(value);\n};\n\nexport const toUtc = (input?: DateTimeInput, formatInput?: FormatInput): DateTime => {\n  return moment.utc(input as MomentInput, formatInput) as DateTime;\n};\n\nexport const toDuration = (input?: DurationInput, unit?: DurationUnit): DateTimeDuration => {\n  // moment built-in types are a bit flaky, for example `isoWeek` is not in the type definition but it's present in the js source.\n  return moment.duration(input as DurationInputArg1, unit as DurationInputArg2) as DateTimeDuration;\n};\n\nexport const dateTime = (input?: DateTimeInput, formatInput?: FormatInput): DateTime => {\n  return moment(input as MomentInput, formatInput) as DateTime;\n};\n\nexport const dateTimeAsMoment = (input?: DateTimeInput) => {\n  return dateTime(input) as Moment;\n};\n\nexport const dateTimeForTimeZone = (\n  timezone?: TimeZone,\n  input?: DateTimeInput,\n  formatInput?: FormatInput\n): DateTime => {\n  if (timezone && timezone !== 'browser') {\n    let result: moment.Moment;\n\n    if (typeof input === 'string' && formatInput) {\n      result = moment.tz(input, formatInput, timezone);\n    } else {\n      result = moment.tz(input, timezone);\n    }\n\n    if (isDateTime(result)) {\n      return result;\n    }\n  }\n\n  return dateTime(input, formatInput);\n};\n\nexport const getWeekdayIndex = (day: string) => {\n  return moment.weekdays().findIndex((wd) => wd.toLowerCase() === day.toLowerCase());\n};\n\nexport const getWeekdayIndexByEnglishName = (day: string) =>\n  ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].findIndex(\n    (wd) => wd.toLowerCase() === day.toLowerCase()\n  );\n\nexport const setWeekStart = (weekStart?: string) => {\n  const suffix = '-weekStart';\n  const language = getLocale().replace(suffix, '');\n  const dow = weekStart ? getWeekdayIndexByEnglishName(weekStart) : -1;\n  if (dow !== -1) {\n    moment.locale(language + suffix, {\n      parentLocale: language,\n      week: {\n        dow,\n      },\n    });\n  } else {\n    setLocale(language);\n  }\n};\n"],"names":[],"mappings":"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"}