{"version":3,"file":"createTheme.js","sources":["../../../src/themes/createTheme.ts"],"sourcesContent":["import { createBreakpoints } from './breakpoints';\nimport { createColors, ThemeColorsInput } from './createColors';\nimport { createComponents } from './createComponents';\nimport { createShadows } from './createShadows';\nimport { createShape, ThemeShapeInput } from './createShape';\nimport { createSpacing, ThemeSpacingOptions } from './createSpacing';\nimport { createTransitions } from './createTransitions';\nimport { createTypography, ThemeTypographyInput } from './createTypography';\nimport { createV1Theme } from './createV1Theme';\nimport { createVisualizationColors } from './createVisualizationColors';\nimport { GrafanaTheme2 } from './types';\nimport { zIndex } from './zIndex';\n\n/** @internal */\nexport interface NewThemeOptions {\n  name?: string;\n  colors?: ThemeColorsInput;\n  spacing?: ThemeSpacingOptions;\n  shape?: ThemeShapeInput;\n  typography?: ThemeTypographyInput;\n}\n\n/** @internal */\nexport function createTheme(options: NewThemeOptions = {}): GrafanaTheme2 {\n  const {\n    colors: colorsInput = {},\n    spacing: spacingInput = {},\n    shape: shapeInput = {},\n    typography: typographyInput = {},\n  } = options;\n\n  const colors = createColors(colorsInput);\n  const breakpoints = createBreakpoints();\n  const spacing = createSpacing(spacingInput);\n  const shape = createShape(shapeInput);\n  const typography = createTypography(colors, typographyInput);\n  const shadows = createShadows(colors);\n  const transitions = createTransitions();\n  const components = createComponents(colors, shadows);\n  const visualization = createVisualizationColors(colors);\n\n  const theme = {\n    name: colors.mode === 'dark' ? 'Dark' : 'Light',\n    isDark: colors.mode === 'dark',\n    isLight: colors.mode === 'light',\n    colors,\n    breakpoints,\n    spacing,\n    shape,\n    components,\n    typography,\n    shadows,\n    transitions,\n    visualization,\n    zIndex: {\n      ...zIndex,\n    },\n    flags: {},\n  };\n\n  return {\n    ...theme,\n    v1: createV1Theme(theme),\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBgB,SAAA,WAAA,CAAY,OAA2B,GAAA,EAAmB,EAAA;AACxE,EAAM,MAAA;AAAA,IACJ,MAAA,EAAQ,cAAc,EAAC;AAAA,IACvB,OAAA,EAAS,eAAe,EAAC;AAAA,IACzB,KAAA,EAAO,aAAa,EAAC;AAAA,IACrB,UAAA,EAAY,kBAAkB,EAAC;AAAA,GAC7B,GAAA,OAAA,CAAA;AAEJ,EAAM,MAAA,MAAA,GAAS,aAAa,WAAW,CAAA,CAAA;AACvC,EAAA,MAAM,cAAc,iBAAkB,EAAA,CAAA;AACtC,EAAM,MAAA,OAAA,GAAU,cAAc,YAAY,CAAA,CAAA;AAC1C,EAAM,MAAA,KAAA,GAAQ,YAAY,UAAU,CAAA,CAAA;AACpC,EAAM,MAAA,UAAA,GAAa,gBAAiB,CAAA,MAAA,EAAQ,eAAe,CAAA,CAAA;AAC3D,EAAM,MAAA,OAAA,GAAU,cAAc,MAAM,CAAA,CAAA;AACpC,EAAA,MAAM,cAAc,iBAAkB,EAAA,CAAA;AACtC,EAAM,MAAA,UAAA,GAAa,gBAAiB,CAAA,MAAe,CAAA,CAAA;AACnD,EAAM,MAAA,aAAA,GAAgB,0BAA0B,MAAM,CAAA,CAAA;AAEtD,EAAA,MAAM,KAAQ,GAAA;AAAA,IACZ,IAAM,EAAA,MAAA,CAAO,IAAS,KAAA,MAAA,GAAS,MAAS,GAAA,OAAA;AAAA,IACxC,MAAA,EAAQ,OAAO,IAAS,KAAA,MAAA;AAAA,IACxB,OAAA,EAAS,OAAO,IAAS,KAAA,OAAA;AAAA,IACzB,MAAA;AAAA,IACA,WAAA;AAAA,IACA,OAAA;AAAA,IACA,KAAA;AAAA,IACA,UAAA;AAAA,IACA,UAAA;AAAA,IACA,OAAA;AAAA,IACA,WAAA;AAAA,IACA,aAAA;AAAA,IACA,QAAQ,cACH,CAAA,EAAA,EAAA,MAAA,CAAA;AAAA,IAEL,OAAO,EAAC;AAAA,GACV,CAAA;AAEA,EAAA,OAAO,iCACF,KADE,CAAA,EAAA;AAAA,IAEL,EAAA,EAAI,cAAc,KAAK,CAAA;AAAA,GACzB,CAAA,CAAA;AACF;;;;"}