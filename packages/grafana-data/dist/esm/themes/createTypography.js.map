{"version":3,"file":"createTypography.js","sources":["../../../src/themes/createTypography.ts"],"sourcesContent":["// Code based on Material UI\n// The MIT License (MIT)\n// Copyright (c) 2014 Call-Em-All\n\nimport { ThemeColors } from './createColors';\n\n/** @beta */\nexport interface ThemeTypography extends ThemeTypographyVariantTypes {\n  fontFamily: string;\n  fontFamilyMonospace: string;\n  fontSize: number;\n  fontWeightLight: number;\n  fontWeightRegular: number;\n  fontWeightMedium: number;\n  fontWeightBold: number;\n\n  // The font-size on the html element.\n  htmlFontSize?: number;\n\n  /**\n   * @deprecated\n   * from legacy old theme\n   * */\n  size: {\n    base: string;\n    xs: string;\n    sm: string;\n    md: string;\n    lg: string;\n  };\n\n  pxToRem: (px: number) => string;\n}\n\nexport interface ThemeTypographyVariant {\n  fontSize: string;\n  fontWeight: number;\n  lineHeight: number;\n  fontFamily: string;\n  letterSpacing?: string;\n}\n\nexport interface ThemeTypographyInput {\n  fontFamily?: string;\n  fontFamilyMonospace?: string;\n  fontSize?: number;\n  fontWeightLight?: number;\n  fontWeightRegular?: number;\n  fontWeightMedium?: number;\n  fontWeightBold?: number;\n  // hat's the font-size on the html element.\n  // 16px is the default font-size used by browsers.\n  htmlFontSize?: number;\n}\n\nconst defaultFontFamily = '\"Inter\", \"Helvetica\", \"Arial\", sans-serif';\nconst defaultFontFamilyMonospace = \"'Roboto Mono', monospace\";\n\nexport function createTypography(colors: ThemeColors, typographyInput: ThemeTypographyInput = {}): ThemeTypography {\n  const {\n    fontFamily = defaultFontFamily,\n    fontFamilyMonospace = defaultFontFamilyMonospace,\n    // The default font size of the Material Specification.\n    fontSize = 14, // px\n    fontWeightLight = 300,\n    fontWeightRegular = 400,\n    fontWeightMedium = 500,\n    fontWeightBold = 500,\n    // Tell Grafana-UI what's the font-size on the html element.\n    // 16px is the default font-size used by browsers.\n    htmlFontSize = 14,\n  } = typographyInput;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('Grafana-UI: `fontSize` is required to be a number.');\n    }\n\n    if (typeof htmlFontSize !== 'number') {\n      console.error('Grafana-UI: `htmlFontSize` is required to be a number.');\n    }\n  }\n\n  const coef = fontSize / 14;\n  const pxToRem = (size: number) => `${(size / htmlFontSize) * coef}rem`;\n  const buildVariant = (\n    fontWeight: number,\n    size: number,\n    lineHeight: number,\n    letterSpacing: number,\n    casing?: object\n  ): ThemeTypographyVariant => {\n    if (lineHeight % 2 !== 0 || size % 2 !== 0) {\n      throw new Error('Font size and line height should be integer multiples of 2 to prevent issues with alignment');\n    }\n\n    return {\n      fontFamily,\n      fontWeight,\n      fontSize: pxToRem(size),\n      lineHeight: lineHeight / size,\n      ...(fontFamily === defaultFontFamily ? { letterSpacing: `${round(letterSpacing / size)}em` } : {}),\n      ...casing,\n    };\n  };\n\n  // All our fonts/line heights should be integer multiples of 2 to prevent issues with alignment\n  const variants = {\n    h1: buildVariant(fontWeightRegular, 28, 32, -0.25),\n    h2: buildVariant(fontWeightRegular, 24, 28, 0),\n    h3: buildVariant(fontWeightRegular, 22, 24, 0),\n    h4: buildVariant(fontWeightRegular, 18, 22, 0.25),\n    h5: buildVariant(fontWeightRegular, 16, 22, 0),\n    h6: buildVariant(fontWeightMedium, 14, 22, 0.15),\n    body: buildVariant(fontWeightRegular, fontSize, 22, 0.15),\n    bodySmall: buildVariant(fontWeightRegular, 12, 18, 0.15),\n    code: { ...buildVariant(fontWeightRegular, 14, 16, 0.15), fontFamily: fontFamilyMonospace },\n  };\n\n  const size = {\n    base: '14px',\n    xs: '10px',\n    sm: '12px',\n    md: '14px',\n    lg: '18px',\n  };\n\n  return {\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontFamilyMonospace,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold,\n    size,\n    ...variants,\n  };\n}\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nexport interface ThemeTypographyVariantTypes {\n  h1: ThemeTypographyVariant;\n  h2: ThemeTypographyVariant;\n  h3: ThemeTypographyVariant;\n  h4: ThemeTypographyVariant;\n  h5: ThemeTypographyVariant;\n  h6: ThemeTypographyVariant;\n  body: ThemeTypographyVariant;\n  bodySmall: ThemeTypographyVariant;\n  code: ThemeTypographyVariant;\n}\n"],"names":["size"],"mappings":"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"}