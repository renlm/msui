{"version":3,"file":"matchers.js","sources":["../../../src/transformations/matchers.ts"],"sourcesContent":["// Load the Builtin matchers\nimport {\n  FieldMatcherInfo,\n  MatcherConfig,\n  FrameMatcherInfo,\n  FieldMatcher,\n  FrameMatcher,\n  ValueMatcherInfo,\n  ValueMatcher,\n} from '../types/transformations';\nimport { Registry } from '../utils/Registry';\n\nimport { getFieldTypeMatchers } from './matchers/fieldTypeMatcher';\nimport { fieldValueMatcherInfo } from './matchers/fieldValueMatcher';\nimport { getFieldNameMatchers, getFrameNameMatchers } from './matchers/nameMatcher';\nimport { getFieldPredicateMatchers, getFramePredicateMatchers } from './matchers/predicates';\nimport { getRefIdMatchers } from './matchers/refIdMatcher';\nimport { getSimpleFieldMatchers } from './matchers/simpleFieldMatcher';\nimport { getEqualValueMatchers } from './matchers/valueMatchers/equalMatchers';\nimport { getNullValueMatchers } from './matchers/valueMatchers/nullMatchers';\nimport { getNumericValueMatchers } from './matchers/valueMatchers/numericMatchers';\nimport { getRangeValueMatchers } from './matchers/valueMatchers/rangeMatchers';\nimport { getRegexValueMatcher } from './matchers/valueMatchers/regexMatchers';\nimport { getSubstringValueMatchers } from './matchers/valueMatchers/substringMatchers';\n\nexport { type FieldValueMatcherConfig } from './matchers/fieldValueMatcher';\n\n/**\n * Registry that contains all of the built in field matchers.\n * @public\n */\nexport const fieldMatchers = new Registry<FieldMatcherInfo>(() => {\n  return [\n    ...getFieldPredicateMatchers(), // Predicates\n    ...getFieldTypeMatchers(), // by type\n    ...getFieldNameMatchers(), // by name\n    ...getSimpleFieldMatchers(), // first\n    fieldValueMatcherInfo, // reduce field (all null/zero)\n  ];\n});\n\n/**\n * Registry that contains all of the built in frame matchers.\n * @public\n */\nexport const frameMatchers = new Registry<FrameMatcherInfo>(() => {\n  return [\n    ...getFramePredicateMatchers(), // Predicates\n    ...getFrameNameMatchers(), // by name\n    ...getRefIdMatchers(), // by query refId\n  ];\n});\n\n/**\n * Registry that contains all of the built in value matchers.\n * @public\n */\nexport const valueMatchers = new Registry<ValueMatcherInfo>(() => {\n  return [\n    ...getNullValueMatchers(),\n    ...getNumericValueMatchers(),\n    ...getEqualValueMatchers(),\n    ...getSubstringValueMatchers(),\n    ...getRangeValueMatchers(),\n    ...getRegexValueMatcher(),\n  ];\n});\n\n/**\n * Resolves a field matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getFieldMatcher(config: MatcherConfig): FieldMatcher {\n  const info = fieldMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown field matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n\n/**\n * Resolves a frame matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getFrameMatchers(config: MatcherConfig): FrameMatcher {\n  const info = frameMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown frame matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n\n/**\n * Resolves a value matcher from the registry for given config.\n * Will throw an error if matcher can not be resolved.\n * @public\n */\nexport function getValueMatcher(config: MatcherConfig): ValueMatcher {\n  const info = valueMatchers.get(config.id);\n  if (!info) {\n    throw new Error('Unknown value matcher: ' + config.id);\n  }\n  return info.get(config.options);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AA+Ba,MAAA,aAAA,GAAgB,IAAI,QAAA,CAA2B,MAAM;AAChE,EAAO,OAAA;AAAA,IACL,GAAG,yBAA0B,EAAA;AAAA;AAAA,IAC7B,GAAG,oBAAqB,EAAA;AAAA;AAAA,IACxB,GAAG,oBAAqB,EAAA;AAAA;AAAA,IACxB,GAAG,sBAAuB,EAAA;AAAA;AAAA,IAC1B,qBAAA;AAAA;AAAA,GACF,CAAA;AACF,CAAC,EAAA;AAMY,MAAA,aAAA,GAAgB,IAAI,QAAA,CAA2B,MAAM;AAChE,EAAO,OAAA;AAAA,IACL,GAAG,yBAA0B,EAAA;AAAA;AAAA,IAC7B,GAAG,oBAAqB,EAAA;AAAA;AAAA,IACxB,GAAG,gBAAiB,EAAA;AAAA;AAAA,GACtB,CAAA;AACF,CAAC,EAAA;AAMY,MAAA,aAAA,GAAgB,IAAI,QAAA,CAA2B,MAAM;AAChE,EAAO,OAAA;AAAA,IACL,GAAG,oBAAqB,EAAA;AAAA,IACxB,GAAG,uBAAwB,EAAA;AAAA,IAC3B,GAAG,qBAAsB,EAAA;AAAA,IACzB,GAAG,yBAA0B,EAAA;AAAA,IAC7B,GAAG,qBAAsB,EAAA;AAAA,IACzB,GAAG,oBAAqB,EAAA;AAAA,GAC1B,CAAA;AACF,CAAC,EAAA;AAOM,SAAS,gBAAgB,MAAqC,EAAA;AACnE,EAAA,MAAM,IAAO,GAAA,aAAA,CAAc,GAAI,CAAA,MAAA,CAAO,EAAE,CAAA,CAAA;AACxC,EAAA,IAAI,CAAC,IAAM,EAAA;AACT,IAAA,MAAM,IAAI,KAAA,CAAM,yBAA4B,GAAA,MAAA,CAAO,EAAE,CAAA,CAAA;AAAA,GACvD;AACA,EAAO,OAAA,IAAA,CAAK,GAAI,CAAA,MAAA,CAAO,OAAO,CAAA,CAAA;AAChC,CAAA;AAOO,SAAS,iBAAiB,MAAqC,EAAA;AACpE,EAAA,MAAM,IAAO,GAAA,aAAA,CAAc,GAAI,CAAA,MAAA,CAAO,EAAE,CAAA,CAAA;AACxC,EAAA,IAAI,CAAC,IAAM,EAAA;AACT,IAAA,MAAM,IAAI,KAAA,CAAM,yBAA4B,GAAA,MAAA,CAAO,EAAE,CAAA,CAAA;AAAA,GACvD;AACA,EAAO,OAAA,IAAA,CAAK,GAAI,CAAA,MAAA,CAAO,OAAO,CAAA,CAAA;AAChC,CAAA;AAOO,SAAS,gBAAgB,MAAqC,EAAA;AACnE,EAAA,MAAM,IAAO,GAAA,aAAA,CAAc,GAAI,CAAA,MAAA,CAAO,EAAE,CAAA,CAAA;AACxC,EAAA,IAAI,CAAC,IAAM,EAAA;AACT,IAAA,MAAM,IAAI,KAAA,CAAM,yBAA4B,GAAA,MAAA,CAAO,EAAE,CAAA,CAAA;AAAA,GACvD;AACA,EAAO,OAAA,IAAA,CAAK,GAAI,CAAA,MAAA,CAAO,OAAO,CAAA,CAAA;AAChC;;;;"}