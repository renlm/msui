{"version":3,"file":"ids.js","sources":["../../../../src/transformations/matchers/ids.ts"],"sourcesContent":["// This needs to be in its own file to avoid circular references\n\n// Builtin Predicates\n// not using 'any' and 'never' since they are reserved keywords\nexport enum MatcherID {\n  anyMatch = 'anyMatch', // checks children\n  allMatch = 'allMatch', // checks children\n  invertMatch = 'invertMatch', // checks child\n  alwaysMatch = 'alwaysMatch',\n  neverMatch = 'neverMatch',\n}\n\nexport enum FieldMatcherID {\n  // Specific Types\n  numeric = 'numeric',\n  time = 'time', // Can be multiple times\n  first = 'first',\n  firstTimeField = 'firstTimeField', // Only the first time field\n\n  // With arguments\n  byType = 'byType',\n  byTypes = 'byTypes',\n  byName = 'byName',\n  byNames = 'byNames',\n  byRegexp = 'byRegexp',\n  byRegexpOrNames = 'byRegexpOrNames',\n  byFrameRefID = 'byFrameRefID',\n  byValue = 'byValue',\n  // byIndex = 'byIndex',\n  // byLabel = 'byLabel',\n}\n\n/**\n * Field name matchers\n */\nexport enum FrameMatcherID {\n  byName = 'byName',\n  byRefId = 'byRefId',\n  byIndex = 'byIndex',\n}\n\n/**\n * @public\n */\nexport enum ValueMatcherID {\n  regex = 'regex',\n  isNull = 'isNull',\n  isNotNull = 'isNotNull',\n  greater = 'greater',\n  greaterOrEqual = 'greaterOrEqual',\n  lower = 'lower',\n  lowerOrEqual = 'lowerOrEqual',\n  equal = 'equal',\n  notEqual = 'notEqual',\n  substring = 'substring',\n  notSubstring = 'notSubstring',\n  between = 'between',\n}\n"],"names":["MatcherID","FieldMatcherID","FrameMatcherID","ValueMatcherID"],"mappings":"AAIY,IAAA,SAAA,qBAAAA,UAAL,KAAA;AACL,EAAAA,WAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AACX,EAAAA,WAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AACX,EAAAA,WAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,WAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,WAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AALH,EAAAA,OAAAA,UAAAA,CAAAA;AAAA,CAAA,EAAA,SAAA,IAAA,EAAA,EAAA;AAQA,IAAA,cAAA,qBAAAC,eAAL,KAAA;AAEL,EAAAA,gBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,gBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,gBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,gBAAA,gBAAiB,CAAA,GAAA,gBAAA,CAAA;AAGjB,EAAAA,gBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,gBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,gBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,gBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,gBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AACX,EAAAA,gBAAA,iBAAkB,CAAA,GAAA,iBAAA,CAAA;AAClB,EAAAA,gBAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,gBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AAfA,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA,EAAA;AAuBA,IAAA,cAAA,qBAAAC,eAAL,KAAA;AACL,EAAAA,gBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,gBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,gBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AAHA,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA,EAAA;AASA,IAAA,cAAA,qBAAAC,eAAL,KAAA;AACL,EAAAA,gBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,gBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,gBAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AACZ,EAAAA,gBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,gBAAA,gBAAiB,CAAA,GAAA,gBAAA,CAAA;AACjB,EAAAA,gBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,gBAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,gBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,gBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AACX,EAAAA,gBAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AACZ,EAAAA,gBAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,gBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AAZA,EAAAA,OAAAA,eAAAA,CAAAA;AAAA,CAAA,EAAA,cAAA,IAAA,EAAA;;;;"}