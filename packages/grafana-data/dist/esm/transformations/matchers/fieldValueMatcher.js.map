{"version":3,"file":"fieldValueMatcher.js","sources":["../../../../src/transformations/matchers/fieldValueMatcher.ts"],"sourcesContent":["import { ComparisonOperation } from '@grafana/schema';\n\nimport { Field, DataFrame } from '../../types/dataFrame';\nimport { FieldMatcherInfo } from '../../types/transformations';\nimport { reduceField, ReducerID } from '../fieldReducer';\n\nimport { compareValues } from './compareValues';\nimport { FieldMatcherID } from './ids';\n\nexport interface FieldValueMatcherConfig {\n  reducer: ReducerID;\n  op?: ComparisonOperation;\n  value?: number; // or string?\n}\n\n// This should move to a utility function on the reducer registry\nfunction isBooleanReducer(r: ReducerID) {\n  return r === ReducerID.allIsNull || r === ReducerID.allIsZero;\n}\n\nexport const fieldValueMatcherInfo: FieldMatcherInfo<FieldValueMatcherConfig> = {\n  id: FieldMatcherID.byValue,\n  name: 'By value (reducer)',\n  description: 'Reduce a field to a single value and test for inclusion',\n\n  // This is added to overrides by default\n  defaultOptions: {\n    reducer: ReducerID.allIsZero,\n    op: ComparisonOperation.GTE,\n    value: 0,\n  },\n\n  get: (props) => {\n    if (!props || !props.reducer) {\n      return () => false;\n    }\n    let { reducer, op, value } = props;\n    const isBoolean = isBooleanReducer(reducer);\n    if (!op) {\n      op = ComparisonOperation.EQ;\n    }\n    return (field: Field, frame: DataFrame, allFrames: DataFrame[]) => {\n      const left = reduceField({\n        field,\n        reducers: [reducer],\n      })[reducer];\n\n      if (isBoolean) {\n        return Boolean(left); // boolean\n      }\n      return compareValues(left, op!, value);\n    };\n  },\n\n  getOptionsDisplayText: (props) => {\n    return `By value (${props.reducer})`;\n  },\n};\n"],"names":[],"mappings":";;;;;AAgBA,SAAS,iBAAiB,CAAc,EAAA;AACtC,EAAA,OAAO,CAAM,KAAA,SAAA,CAAU,SAAa,IAAA,CAAA,KAAM,SAAU,CAAA,SAAA,CAAA;AACtD,CAAA;AAEO,MAAM,qBAAmE,GAAA;AAAA,EAC9E,IAAI,cAAe,CAAA,OAAA;AAAA,EACnB,IAAM,EAAA,oBAAA;AAAA,EACN,WAAa,EAAA,yDAAA;AAAA;AAAA,EAGb,cAAgB,EAAA;AAAA,IACd,SAAS,SAAU,CAAA,SAAA;AAAA,IACnB,IAAI,mBAAoB,CAAA,GAAA;AAAA,IACxB,KAAO,EAAA,CAAA;AAAA,GACT;AAAA,EAEA,GAAA,EAAK,CAAC,KAAU,KAAA;AACd,IAAA,IAAI,CAAC,KAAA,IAAS,CAAC,KAAA,CAAM,OAAS,EAAA;AAC5B,MAAA,OAAO,MAAM,KAAA,CAAA;AAAA,KACf;AACA,IAAA,IAAI,EAAE,OAAA,EAAS,EAAI,EAAA,KAAA,EAAU,GAAA,KAAA,CAAA;AAC7B,IAAM,MAAA,SAAA,GAAY,iBAAiB,OAAO,CAAA,CAAA;AAC1C,IAAA,IAAI,CAAC,EAAI,EAAA;AACP,MAAA,EAAA,GAAK,mBAAoB,CAAA,EAAA,CAAA;AAAA,KAC3B;AACA,IAAO,OAAA,CAAC,KAAc,EAAA,KAAA,EAAkB,SAA2B,KAAA;AACjE,MAAA,MAAM,OAAO,WAAY,CAAA;AAAA,QACvB,KAAA;AAAA,QACA,QAAA,EAAU,CAAC,OAAO,CAAA;AAAA,OACnB,EAAE,OAAO,CAAA,CAAA;AAEV,MAAA,IAAI,SAAW,EAAA;AACb,QAAA,OAAO,QAAQ,IAAI,CAAA,CAAA;AAAA,OACrB;AACA,MAAO,OAAA,aAAA,CAAc,IAAM,EAAA,EAAA,EAAK,KAAK,CAAA,CAAA;AAAA,KACvC,CAAA;AAAA,GACF;AAAA,EAEA,qBAAA,EAAuB,CAAC,KAAU,KAAA;AAChC,IAAO,OAAA,CAAA,UAAA,EAAa,MAAM,OAAO,CAAA,CAAA,CAAA,CAAA;AAAA,GACnC;AACF;;;;"}