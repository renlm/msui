{"version":3,"file":"equalMatchers.js","sources":["../../../../../src/transformations/matchers/valueMatchers/equalMatchers.ts"],"sourcesContent":["import { Field } from '../../../types/dataFrame';\nimport { ValueMatcherInfo } from '../../../types/transformations';\nimport { ValueMatcherID } from '../ids';\n\nimport { BasicValueMatcherOptions } from './types';\n\nconst isEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.equal,\n  name: 'Is equal',\n  description: 'Match where value for given field is equal to options value.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      // eslint-disable-next-line eqeqeq\n      return value == options.value;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({ value: '' }),\n};\n\nconst isNotEqualValueMatcher: ValueMatcherInfo<BasicValueMatcherOptions> = {\n  id: ValueMatcherID.notEqual,\n  name: 'Is not equal',\n  description: 'Match where value for given field is not equal to options value.',\n  get: (options) => {\n    return (valueIndex: number, field: Field) => {\n      const value = field.values[valueIndex];\n      // eslint-disable-next-line eqeqeq\n      return value != options.value;\n    };\n  },\n  getOptionsDisplayText: () => {\n    return `Matches all rows where field is not null.`;\n  },\n  isApplicable: () => true,\n  getDefaultOptions: () => ({ value: '' }),\n};\n\nexport const getEqualValueMatchers = (): ValueMatcherInfo[] => [isEqualValueMatcher, isNotEqualValueMatcher];\n"],"names":[],"mappings":";;AAMA,MAAM,mBAAkE,GAAA;AAAA,EACtE,IAAI,cAAe,CAAA,KAAA;AAAA,EACnB,IAAM,EAAA,UAAA;AAAA,EACN,WAAa,EAAA,8DAAA;AAAA,EACb,GAAA,EAAK,CAAC,OAAY,KAAA;AAChB,IAAO,OAAA,CAAC,YAAoB,KAAiB,KAAA;AAC3C,MAAM,MAAA,KAAA,GAAQ,KAAM,CAAA,MAAA,CAAO,UAAU,CAAA,CAAA;AAErC,MAAA,OAAO,SAAS,OAAQ,CAAA,KAAA,CAAA;AAAA,KAC1B,CAAA;AAAA,GACF;AAAA,EACA,uBAAuB,MAAM;AAC3B,IAAO,OAAA,CAAA,qCAAA,CAAA,CAAA;AAAA,GACT;AAAA,EACA,cAAc,MAAM,IAAA;AAAA,EACpB,iBAAmB,EAAA,OAAO,EAAE,KAAA,EAAO,EAAG,EAAA,CAAA;AACxC,CAAA,CAAA;AAEA,MAAM,sBAAqE,GAAA;AAAA,EACzE,IAAI,cAAe,CAAA,QAAA;AAAA,EACnB,IAAM,EAAA,cAAA;AAAA,EACN,WAAa,EAAA,kEAAA;AAAA,EACb,GAAA,EAAK,CAAC,OAAY,KAAA;AAChB,IAAO,OAAA,CAAC,YAAoB,KAAiB,KAAA;AAC3C,MAAM,MAAA,KAAA,GAAQ,KAAM,CAAA,MAAA,CAAO,UAAU,CAAA,CAAA;AAErC,MAAA,OAAO,SAAS,OAAQ,CAAA,KAAA,CAAA;AAAA,KAC1B,CAAA;AAAA,GACF;AAAA,EACA,uBAAuB,MAAM;AAC3B,IAAO,OAAA,CAAA,yCAAA,CAAA,CAAA;AAAA,GACT;AAAA,EACA,cAAc,MAAM,IAAA;AAAA,EACpB,iBAAmB,EAAA,OAAO,EAAE,KAAA,EAAO,EAAG,EAAA,CAAA;AACxC,CAAA,CAAA;AAEO,MAAM,qBAAwB,GAAA,MAA0B,CAAC,mBAAA,EAAqB,sBAAsB;;;;"}