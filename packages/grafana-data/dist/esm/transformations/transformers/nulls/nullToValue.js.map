{"version":3,"file":"nullToValue.js","sources":["../../../../../src/transformations/transformers/nulls/nullToValue.ts"],"sourcesContent":["import { DataFrame, Field } from '../../../types';\n\nexport function nullToValue(frame: DataFrame) {\n  return {\n    ...frame,\n    fields: frame.fields.map((field) => {\n      const noValue = Number(field.config.noValue);\n\n      if (!Number.isNaN(noValue)) {\n        return nullToValueField(field, noValue);\n      } else {\n        return field;\n      }\n    }),\n  };\n}\n\nexport function nullToValueField(field: Field, noValue: number) {\n  const transformedVals = field.values.slice();\n\n  for (let i = 0; i < transformedVals.length; i++) {\n    if (transformedVals[i] === null) {\n      transformedVals[i] = noValue;\n    }\n  }\n\n  return {\n    ...field,\n    values: transformedVals,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAEO,SAAS,YAAY,KAAkB,EAAA;AAC5C,EAAA,OAAO,iCACF,KADE,CAAA,EAAA;AAAA,IAEL,MAAQ,EAAA,KAAA,CAAM,MAAO,CAAA,GAAA,CAAI,CAAC,KAAU,KAAA;AAClC,MAAA,MAAM,OAAU,GAAA,MAAA,CAAO,KAAM,CAAA,MAAA,CAAO,OAAO,CAAA,CAAA;AAE3C,MAAA,IAAI,CAAC,MAAA,CAAO,KAAM,CAAA,OAAO,CAAG,EAAA;AAC1B,QAAO,OAAA,gBAAA,CAAiB,OAAO,OAAO,CAAA,CAAA;AAAA,OACjC,MAAA;AACL,QAAO,OAAA,KAAA,CAAA;AAAA,OACT;AAAA,KACD,CAAA;AAAA,GACH,CAAA,CAAA;AACF,CAAA;AAEgB,SAAA,gBAAA,CAAiB,OAAc,OAAiB,EAAA;AAC9D,EAAM,MAAA,eAAA,GAAkB,KAAM,CAAA,MAAA,CAAO,KAAM,EAAA,CAAA;AAE3C,EAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,eAAA,CAAgB,QAAQ,CAAK,EAAA,EAAA;AAC/C,IAAI,IAAA,eAAA,CAAgB,CAAC,CAAA,KAAM,IAAM,EAAA;AAC/B,MAAA,eAAA,CAAgB,CAAC,CAAI,GAAA,OAAA,CAAA;AAAA,KACvB;AAAA,GACF;AAEA,EAAA,OAAO,iCACF,KADE,CAAA,EAAA;AAAA,IAEL,MAAQ,EAAA,eAAA;AAAA,GACV,CAAA,CAAA;AACF;;;;"}