{"version":3,"file":"utils.js","sources":["../../../../src/transformations/transformers/utils.ts"],"sourcesContent":["import { BootData, DataFrame } from '../../types';\n\ndeclare global {\n  interface Window {\n    grafanaBootData?: BootData;\n  }\n}\n\nexport const transformationsVariableSupport = () => {\n  return window?.grafanaBootData?.settings?.featureToggles?.transformationsVariableSupport;\n};\n\n/**\n * Retrieve the maximum number of fields in a series of a dataframe.\n */\nexport function findMaxFields(data: DataFrame[]) {\n  let maxFields = 0;\n\n  // Group to nested table needs at least two fields\n  // a field to group on and to show in the nested table\n  for (const frame of data) {\n    if (frame.fields.length > maxFields) {\n      maxFields = frame.fields.length;\n    }\n  }\n\n  return maxFields;\n}\n"],"names":[],"mappings":"AAQO,MAAM,iCAAiC,MAAM;AARpD,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AASE,EAAA,OAAA,CAAO,kDAAQ,eAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAyB,QAAzB,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAmC,mBAAnC,IAAmD,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,8BAAA,CAAA;AAC5D,EAAA;AAKO,SAAS,cAAc,IAAmB,EAAA;AAC/C,EAAA,IAAI,SAAY,GAAA,CAAA,CAAA;AAIhB,EAAA,KAAA,MAAW,SAAS,IAAM,EAAA;AACxB,IAAI,IAAA,KAAA,CAAM,MAAO,CAAA,MAAA,GAAS,SAAW,EAAA;AACnC,MAAA,SAAA,GAAY,MAAM,MAAO,CAAA,MAAA,CAAA;AAAA,KAC3B;AAAA,GACF;AAEA,EAAO,OAAA,SAAA,CAAA;AACT;;;;"}