{"version":3,"file":"ids.js","sources":["../../../../src/transformations/transformers/ids.ts"],"sourcesContent":["export enum DataTransformerID {\n  append = 'append',\n  //  rotate = 'rotate', // Columns to rows\n  reduce = 'reduce',\n  order = 'order',\n  organize = 'organize',\n  rename = 'rename',\n  calculateField = 'calculateField',\n  /** @deprecated use joinByField */\n  seriesToColumns = 'seriesToColumns',\n  seriesToRows = 'seriesToRows',\n  merge = 'merge',\n  concatenate = 'concatenate',\n  labelsToFields = 'labelsToFields',\n  filterFields = 'filterFields',\n  filterFieldsByName = 'filterFieldsByName',\n  filterFrames = 'filterFrames',\n  filterByRefId = 'filterByRefId',\n  renameByRegex = 'renameByRegex',\n  filterByValue = 'filterByValue',\n  noop = 'noop',\n  ensureColumns = 'ensureColumns',\n  groupBy = 'groupBy',\n  sortBy = 'sortBy',\n  histogram = 'histogram',\n  configFromData = 'configFromData',\n  rowsToFields = 'rowsToFields',\n  prepareTimeSeries = 'prepareTimeSeries',\n  convertFieldType = 'convertFieldType',\n  fieldLookup = 'fieldLookup',\n  heatmap = 'heatmap',\n  spatial = 'spatial',\n  joinByField = 'joinByField',\n  joinByLabels = 'joinByLabels',\n  extractFields = 'extractFields',\n  groupingToMatrix = 'groupingToMatrix',\n  limit = 'limit',\n  partitionByValues = 'partitionByValues',\n  timeSeriesTable = 'timeSeriesTable',\n  formatTime = 'formatTime',\n  formatString = 'formatString',\n  regression = 'regression',\n  groupToNestedTable = 'groupToNestedTable',\n}\n"],"names":["DataTransformerID"],"mappings":"AAAY,IAAA,iBAAA,qBAAAA,kBAAL,KAAA;AACL,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAET,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,mBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,mBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AACX,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,mBAAA,gBAAiB,CAAA,GAAA,gBAAA,CAAA;AAEjB,EAAAA,mBAAA,iBAAkB,CAAA,GAAA,iBAAA,CAAA;AAClB,EAAAA,mBAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,mBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,mBAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,mBAAA,gBAAiB,CAAA,GAAA,gBAAA,CAAA;AACjB,EAAAA,mBAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,mBAAA,oBAAqB,CAAA,GAAA,oBAAA,CAAA;AACrB,EAAAA,mBAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,mBAAA,eAAgB,CAAA,GAAA,eAAA,CAAA;AAChB,EAAAA,mBAAA,eAAgB,CAAA,GAAA,eAAA,CAAA;AAChB,EAAAA,mBAAA,eAAgB,CAAA,GAAA,eAAA,CAAA;AAChB,EAAAA,mBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,mBAAA,eAAgB,CAAA,GAAA,eAAA,CAAA;AAChB,EAAAA,mBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,mBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,mBAAA,WAAY,CAAA,GAAA,WAAA,CAAA;AACZ,EAAAA,mBAAA,gBAAiB,CAAA,GAAA,gBAAA,CAAA;AACjB,EAAAA,mBAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,mBAAA,mBAAoB,CAAA,GAAA,mBAAA,CAAA;AACpB,EAAAA,mBAAA,kBAAmB,CAAA,GAAA,kBAAA,CAAA;AACnB,EAAAA,mBAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,mBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,mBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,mBAAA,aAAc,CAAA,GAAA,aAAA,CAAA;AACd,EAAAA,mBAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,mBAAA,eAAgB,CAAA,GAAA,eAAA,CAAA;AAChB,EAAAA,mBAAA,kBAAmB,CAAA,GAAA,kBAAA,CAAA;AACnB,EAAAA,mBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,mBAAA,mBAAoB,CAAA,GAAA,mBAAA,CAAA;AACpB,EAAAA,mBAAA,iBAAkB,CAAA,GAAA,iBAAA,CAAA;AAClB,EAAAA,mBAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AACb,EAAAA,mBAAA,cAAe,CAAA,GAAA,cAAA,CAAA;AACf,EAAAA,mBAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AACb,EAAAA,mBAAA,oBAAqB,CAAA,GAAA,oBAAA,CAAA;AA1CX,EAAAA,OAAAA,kBAAAA,CAAAA;AAAA,CAAA,EAAA,iBAAA,IAAA,EAAA;;;;"}