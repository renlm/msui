{"version":3,"file":"EventBus.js","sources":["../../../src/events/EventBus.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { Unsubscribable, Observable, Subscriber } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport {\n  EventBus,\n  LegacyEmitter,\n  BusEventHandler,\n  BusEventType,\n  LegacyEventHandler,\n  BusEvent,\n  AppEvent,\n  EventFilterOptions,\n} from './types';\n\n/**\n * @alpha\n */\nexport class EventBusSrv implements EventBus, LegacyEmitter {\n  private emitter: EventEmitter;\n  private subscribers = new Map<Function, Subscriber<BusEvent>>();\n\n  constructor() {\n    this.emitter = new EventEmitter();\n  }\n\n  publish<T extends BusEvent>(event: T): void {\n    this.emitter.emit(event.type, event);\n  }\n\n  subscribe<T extends BusEvent>(typeFilter: BusEventType<T>, handler: BusEventHandler<T>): Unsubscribable {\n    return this.getStream(typeFilter).subscribe({ next: handler });\n  }\n\n  getStream<T extends BusEvent = BusEvent>(eventType: BusEventType<T>): Observable<T> {\n    return new Observable<T>((observer) => {\n      const handler = (event: T) => {\n        observer.next(event);\n      };\n\n      this.emitter.on(eventType.type, handler);\n      this.subscribers.set(handler, observer);\n\n      return () => {\n        this.emitter.off(eventType.type, handler);\n        this.subscribers.delete(handler);\n      };\n    });\n  }\n\n  newScopedBus(key: string, filter?: EventFilterOptions): ScopedEventBus {\n    return new ScopedEventBus([key], this, filter);\n  }\n\n  /**\n   * Legacy functions\n   */\n  emit<T>(event: AppEvent<T> | string, payload?: T | any): void {\n    // console.log(`Deprecated emitter function used (emit), use $emit`);\n\n    if (typeof event === 'string') {\n      this.emitter.emit(event, { type: event, payload });\n    } else {\n      this.emitter.emit(event.name, { type: event.name, payload });\n    }\n  }\n\n  on<T>(event: AppEvent<T> | string, handler: LegacyEventHandler<T>, scope?: any) {\n    // console.log(`Deprecated emitter function used (on), use $on`);\n\n    // need this wrapper to make old events compatible with old handlers\n    handler.wrapper = (emittedEvent: BusEvent) => {\n      handler(emittedEvent.payload);\n    };\n\n    if (typeof event === 'string') {\n      this.emitter.on(event, handler.wrapper);\n    } else {\n      this.emitter.on(event.name, handler.wrapper);\n    }\n\n    if (scope) {\n      const unbind = scope.$on('$destroy', () => {\n        this.off(event, handler);\n        unbind();\n      });\n    }\n  }\n\n  off<T>(event: AppEvent<T> | string, handler: LegacyEventHandler<T>) {\n    if (typeof event === 'string') {\n      this.emitter.off(event, handler.wrapper);\n      return;\n    }\n\n    this.emitter.off(event.name, handler.wrapper);\n  }\n\n  removeAllListeners() {\n    this.emitter.removeAllListeners();\n    for (const [key, sub] of this.subscribers) {\n      sub.complete();\n      this.subscribers.delete(key);\n    }\n  }\n}\n\n/**\n * Wraps EventBus and adds a source to help with identifying if a subscriber should react to the event or not.\n */\nclass ScopedEventBus implements EventBus {\n  // will be mutated by panel runners\n  filterConfig: EventFilterOptions;\n\n  // The path is not yet exposed, but can be used to indicate nested groups and support faster filtering\n  constructor(\n    public path: string[],\n    private eventBus: EventBus,\n    filter?: EventFilterOptions\n  ) {\n    this.filterConfig = filter ?? { onlyLocal: false };\n  }\n\n  publish<T extends BusEvent>(event: T): void {\n    if (!event.origin) {\n      event.origin = this;\n    }\n    this.eventBus.publish(event);\n  }\n\n  filter<T extends BusEvent>(event: T) {\n    if (this.filterConfig.onlyLocal) {\n      return event.origin === this;\n    }\n    return true;\n  }\n\n  getStream<T extends BusEvent>(eventType: BusEventType<T>): Observable<T> {\n    return this.eventBus.getStream(eventType).pipe(filter(this.filter.bind(this)));\n  }\n\n  // syntax sugar\n  subscribe<T extends BusEvent>(typeFilter: BusEventType<T>, handler: BusEventHandler<T>): Unsubscribable {\n    return this.getStream(typeFilter).subscribe({ next: handler });\n  }\n\n  removeAllListeners(): void {\n    this.eventBus.removeAllListeners();\n  }\n\n  /**\n   * Creates a nested event bus structure\n   */\n  newScopedBus(key: string, filter: EventFilterOptions): EventBus {\n    return new ScopedEventBus([...this.path, key], this, filter);\n  }\n}\n"],"names":["filter"],"mappings":"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"}