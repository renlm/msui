{"version":3,"file":"plugin.js","sources":["../../../src/types/plugin.ts"],"sourcesContent":["import { ComponentType } from 'react';\n\nimport { KeyValue } from './data';\nimport { IconName } from './icon';\n\n/** Describes plugins life cycle status */\nexport enum PluginState {\n  alpha = 'alpha', // Only included if `enable_alpha` config option is true\n  beta = 'beta', // Will show a warning banner\n  stable = 'stable', // Will not show anything\n  deprecated = 'deprecated', // Will continue to work -- but not show up in the options to add\n}\n\n/** Describes {@link https://grafana.com/docs/grafana/latest/plugins | type of plugin} */\nexport enum PluginType {\n  panel = 'panel',\n  datasource = 'datasource',\n  app = 'app',\n  renderer = 'renderer',\n  secretsmanager = 'secretsmanager',\n}\n\n/** Describes status of {@link https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/ | plugin signature} */\nexport enum PluginSignatureStatus {\n  internal = 'internal', // core plugin, no signature\n  valid = 'valid', // signed and accurate MANIFEST\n  invalid = 'invalid', // invalid signature\n  modified = 'modified', // valid signature, but content mismatch\n  missing = 'missing', // missing signature file\n}\n\n/** Describes level of {@link https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/#plugin-signature-levels/ | plugin signature level} */\nexport enum PluginSignatureType {\n  grafana = 'grafana',\n  commercial = 'commercial',\n  community = 'community',\n  private = 'private',\n  core = 'core',\n}\n\n/** Describes error code returned from Grafana plugins API call */\nexport enum PluginErrorCode {\n  missingSignature = 'signatureMissing',\n  invalidSignature = 'signatureInvalid',\n  modifiedSignature = 'signatureModified',\n  failedBackendStart = 'failedBackendStart',\n  angular = 'angular',\n}\n\n/** Describes error returned from Grafana plugins API call */\nexport interface PluginError {\n  errorCode: PluginErrorCode;\n  pluginId: string;\n  pluginType?: PluginType;\n}\n\nexport interface AngularMeta {\n  detected: boolean;\n  hideDeprecation: boolean;\n}\n\nexport interface PluginMeta<T extends KeyValue = {}> {\n  id: string;\n  name: string;\n  type: PluginType;\n  info: PluginMetaInfo;\n  includes?: PluginInclude[];\n  state?: PluginState;\n  aliasIDs?: string[];\n\n  // System.load & relative URLS\n  module: string;\n  baseUrl: string;\n\n  // Define plugin requirements\n  dependencies?: PluginDependencies;\n\n  // Filled in by the backend\n  jsonData?: T;\n  secureJsonData?: KeyValue;\n  secureJsonFields?: KeyValue<boolean>;\n  enabled?: boolean;\n  defaultNavUrl?: string;\n  hasUpdate?: boolean;\n  enterprise?: boolean;\n  latestVersion?: string;\n  pinned?: boolean;\n  signature?: PluginSignatureStatus;\n  signatureType?: PluginSignatureType;\n  signatureOrg?: string;\n  live?: boolean;\n  angular?: AngularMeta;\n  angularDetected?: boolean;\n}\n\ninterface PluginDependencyInfo {\n  id: string;\n  name: string;\n  version: string;\n  type: PluginType;\n}\n\nexport interface PluginDependencies {\n  grafanaDependency?: string;\n  grafanaVersion: string;\n  plugins: PluginDependencyInfo[];\n}\n\nexport enum PluginIncludeType {\n  dashboard = 'dashboard',\n  page = 'page',\n\n  // Only valid for apps\n  panel = 'panel',\n  datasource = 'datasource',\n}\n\nexport interface PluginInclude {\n  type: PluginIncludeType;\n  name: string;\n  path?: string;\n  icon?: string;\n\n  // \"Admin\", \"Editor\" or \"Viewer\". If set then the include will only show up in the navigation if the user has the required roles.\n  role?: string;\n\n  // if action is set then the include will only show up in the navigation if the user has the required permission.\n  // The action will take precedence over the role.\n  action?: string;\n\n  // Adds the \"page\" or \"dashboard\" type includes to the navigation if set to `true`.\n  addToNav?: boolean;\n\n  // Angular app pages\n  component?: string;\n}\n\ninterface PluginMetaInfoLink {\n  name: string;\n  url: string;\n  target?: '_blank' | '_self' | '_parent' | '_top';\n}\n\nexport interface PluginBuildInfo {\n  time?: number;\n  repo?: string;\n  branch?: string;\n  hash?: string;\n  number?: number;\n  pr?: number;\n}\n\nexport interface ScreenshotInfo {\n  name: string;\n  path: string;\n}\n\nexport interface PluginMetaInfo {\n  author: {\n    name: string;\n    url?: string;\n  };\n  description: string;\n  links: PluginMetaInfoLink[];\n  logos: {\n    large: string;\n    small: string;\n  };\n  build?: PluginBuildInfo;\n  screenshots: ScreenshotInfo[];\n  updated: string;\n  version: string;\n}\n\nexport interface PluginConfigPageProps<T extends PluginMeta> {\n  plugin: GrafanaPlugin<T>;\n  query: KeyValue; // The URL query parameters\n}\n\nexport interface PluginConfigPage<T extends PluginMeta> {\n  title: string; // Display\n  icon?: IconName;\n  id: string; // Unique, in URL\n\n  body: ComponentType<PluginConfigPageProps<T>>;\n}\n\nexport class GrafanaPlugin<T extends PluginMeta = PluginMeta> {\n  // Meta is filled in by the plugin loading system\n  meta: T;\n\n  // This is set if the plugin system had errors loading the plugin\n  loadError?: boolean;\n\n  // Config control (app/datasource)\n  angularConfigCtrl?: any;\n\n  // Show configuration tabs on the plugin page\n  configPages?: Array<PluginConfigPage<T>>;\n\n  // Tabs on the plugin page\n  addConfigPage(tab: PluginConfigPage<T>) {\n    if (!this.configPages) {\n      this.configPages = [];\n    }\n    this.configPages.push(tab);\n    return this;\n  }\n\n  /**\n   * @deprecated -- this is no longer necessary and will be removed\n   */\n  setChannelSupport() {\n    console.warn('[deprecation] plugin is using ignored option: setChannelSupport', this.meta);\n    return this;\n  }\n\n  constructor() {\n    this.meta = {} as T;\n  }\n}\n"],"names":["PluginState","PluginType","PluginSignatureStatus","PluginSignatureType","PluginErrorCode","PluginIncludeType"],"mappings":"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"}