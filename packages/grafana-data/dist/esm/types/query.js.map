{"version":3,"file":"query.js","sources":["../../../src/types/query.ts"],"sourcesContent":["import {\n  DataQuery as SchemaDataQuery,\n  DataSourceRef as SchemaDataSourceRef,\n  DataTopic as SchemaDataTopic,\n} from '@grafana/schema';\n\n/**\n * @deprecated use the type from @grafana/schema\n */\nexport interface DataQuery extends SchemaDataQuery {}\n\n/**\n * @deprecated use the type from @grafana/schema\n */\nexport interface DataSourceRef extends SchemaDataSourceRef {}\n\n/**\n * Attached to query results (not persisted)\n *\n * @deprecated use the type from @grafana/schema\n */\nexport { SchemaDataTopic as DataTopic };\n\n/**\n * Abstract representation of any label-based query\n * @internal\n */\nexport interface AbstractQuery extends SchemaDataQuery {\n  labelMatchers: AbstractLabelMatcher[];\n}\n\n/**\n * @internal\n */\nexport enum AbstractLabelOperator {\n  Equal = 'Equal',\n  NotEqual = 'NotEqual',\n  EqualRegEx = 'EqualRegEx',\n  NotEqualRegEx = 'NotEqualRegEx',\n}\n\n/**\n * @internal\n */\nexport type AbstractLabelMatcher = {\n  name: string;\n  value: string;\n  operator: AbstractLabelOperator;\n};\n\n/**\n * @internal\n */\nexport interface DataSourceWithQueryImportSupport<TQuery extends SchemaDataQuery> {\n  importFromAbstractQueries(labelBasedQuery: AbstractQuery[]): Promise<TQuery[]>;\n}\n\n/**\n * @internal\n */\nexport interface DataSourceWithQueryExportSupport<TQuery extends SchemaDataQuery> {\n  exportToAbstractQueries(query: TQuery[]): Promise<AbstractQuery[]>;\n}\n\n/**\n * @internal\n */\nexport const hasQueryImportSupport = <TQuery extends SchemaDataQuery>(\n  datasource: unknown\n): datasource is DataSourceWithQueryImportSupport<TQuery> => {\n  if (!datasource || typeof datasource !== 'object') {\n    return false;\n  }\n\n  return 'importFromAbstractQueries' in datasource;\n};\n\n/**\n * @internal\n */\nexport const hasQueryExportSupport = <TQuery extends SchemaDataQuery>(\n  datasource: unknown\n): datasource is DataSourceWithQueryExportSupport<TQuery> => {\n  if (!datasource || typeof datasource !== 'object') {\n    return false;\n  }\n  return 'exportToAbstractQueries' in datasource;\n};\n"],"names":["AbstractLabelOperator"],"mappings":";;AAkCY,IAAA,qBAAA,qBAAAA,sBAAL,KAAA;AACL,EAAAA,uBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,uBAAA,UAAW,CAAA,GAAA,UAAA,CAAA;AACX,EAAAA,uBAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AACb,EAAAA,uBAAA,eAAgB,CAAA,GAAA,eAAA,CAAA;AAJN,EAAAA,OAAAA,sBAAAA,CAAAA;AAAA,CAAA,EAAA,qBAAA,IAAA,EAAA,EAAA;AAiCC,MAAA,qBAAA,GAAwB,CACnC,UAC2D,KAAA;AAC3D,EAAA,IAAI,CAAC,UAAA,IAAc,OAAO,UAAA,KAAe,QAAU,EAAA;AACjD,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAEA,EAAA,OAAO,2BAA+B,IAAA,UAAA,CAAA;AACxC,EAAA;AAKa,MAAA,qBAAA,GAAwB,CACnC,UAC2D,KAAA;AAC3D,EAAA,IAAI,CAAC,UAAA,IAAc,OAAO,UAAA,KAAe,QAAU,EAAA;AACjD,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AACA,EAAA,OAAO,yBAA6B,IAAA,UAAA,CAAA;AACtC;;;;"}