{"version":3,"file":"scopes.js","sources":["../../../src/types/scopes.ts"],"sourcesContent":["export interface ScopeDashboardBindingSpec {\n  dashboard: string;\n  dashboardTitle: string;\n  scope: string;\n}\n\n// TODO: Use Resource from apiserver when we export the types\nexport interface ScopeDashboardBinding {\n  metadata: {\n    name: string;\n  };\n  spec: ScopeDashboardBindingSpec;\n}\n\nexport type ScopeFilterOperator = 'equals' | 'not-equals' | 'regex-match' | 'regex-not-match';\n\nexport const scopeFilterOperatorMap: Record<string, ScopeFilterOperator> = {\n  '=': 'equals',\n  '!=': 'not-equals',\n  '=~': 'regex-match',\n  '!~': 'regex-not-match',\n};\n\nexport interface ScopeSpecFilter {\n  key: string;\n  value: string;\n  operator: ScopeFilterOperator;\n}\n\nexport interface ScopeSpec {\n  title: string;\n  type: string;\n  description: string;\n  category: string;\n  filters: ScopeSpecFilter[];\n}\n\n// TODO: Use Resource from apiserver when we export the types\nexport interface Scope {\n  metadata: {\n    name: string;\n  };\n  spec: ScopeSpec;\n}\n\nexport type ScopeNodeNodeType = 'container' | 'leaf';\nexport type ScopeNodeLinkType = 'scope';\n\nexport interface ScopeNodeSpec {\n  nodeType: ScopeNodeNodeType;\n  title: string;\n\n  description?: string;\n  disableMultiSelect?: boolean;\n  linkId?: string;\n  linkType?: ScopeNodeLinkType;\n}\n\n// TODO: Use Resource from apiserver when we export the types\nexport interface ScopeNode {\n  metadata: {\n    name: string;\n  };\n  spec: ScopeNodeSpec;\n}\n"],"names":[],"mappings":"AAgBO,MAAM,sBAA8D,GAAA;AAAA,EACzE,GAAK,EAAA,QAAA;AAAA,EACL,IAAM,EAAA,YAAA;AAAA,EACN,IAAM,EAAA,aAAA;AAAA,EACN,IAAM,EAAA,iBAAA;AACR;;;;"}