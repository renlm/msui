{"version":3,"file":"legacyEvents.js","sources":["../../../src/types/legacyEvents.ts"],"sourcesContent":["import { DataHoverPayload } from '../events';\nimport { eventFactory } from '../events/eventFactory';\nimport { BusEventBase, BusEventWithPayload } from '../events/types';\n\nimport { DataFrame } from './dataFrame';\nimport { DataQueryError, DataQueryResponseData } from './datasource';\nimport { AngularPanelMenuItem } from './panel';\n\nexport type AlertPayload = [string, string?, string?];\nexport type AlertErrorPayload = [string, (string | Error)?, string?];\n\nexport const AppEvents = {\n  alertSuccess: eventFactory<AlertPayload>('alert-success'),\n  alertWarning: eventFactory<AlertPayload>('alert-warning'),\n  alertError: eventFactory<AlertErrorPayload>('alert-error'),\n};\n\nexport const PanelEvents = {\n  refresh: eventFactory('refresh'),\n  componentDidMount: eventFactory('component-did-mount'),\n  dataReceived: eventFactory<DataQueryResponseData[]>('data-received'),\n  dataError: eventFactory<DataQueryError>('data-error'),\n  dataFramesReceived: eventFactory<DataFrame[]>('data-frames-received'),\n  dataSnapshotLoad: eventFactory<DataQueryResponseData[]>('data-snapshot-load'),\n  editModeInitialized: eventFactory('init-edit-mode'),\n  initPanelActions: eventFactory<AngularPanelMenuItem[]>('init-panel-actions'),\n  initialized: eventFactory('panel-initialized'),\n  panelTeardown: eventFactory('panel-teardown'),\n  render: eventFactory<any>('render'),\n};\n\n/** @public */\nexport interface LegacyGraphHoverEventPayload extends DataHoverPayload {\n  pos: any;\n  panel: {\n    id: number;\n  };\n}\n\n/** @alpha */\nexport class LegacyGraphHoverEvent extends BusEventWithPayload<LegacyGraphHoverEventPayload> {\n  static type = 'graph-hover';\n}\n\n/** @alpha */\nexport class LegacyGraphHoverClearEvent extends BusEventBase {\n  static type = 'graph-hover-clear';\n  payload: DataHoverPayload = { point: {} };\n}\n"],"names":[],"mappings":";;;;;;;;;AAWO,MAAM,SAAY,GAAA;AAAA,EACvB,YAAA,EAAc,aAA2B,eAAe,CAAA;AAAA,EACxD,YAAA,EAAc,aAA2B,eAAe,CAAA;AAAA,EACxD,UAAA,EAAY,aAAgC,aAAa,CAAA;AAC3D,EAAA;AAEO,MAAM,WAAc,GAAA;AAAA,EACzB,OAAA,EAAS,aAAa,SAAS,CAAA;AAAA,EAC/B,iBAAA,EAAmB,aAAa,qBAAqB,CAAA;AAAA,EACrD,YAAA,EAAc,aAAsC,eAAe,CAAA;AAAA,EACnE,SAAA,EAAW,aAA6B,YAAY,CAAA;AAAA,EACpD,kBAAA,EAAoB,aAA0B,sBAAsB,CAAA;AAAA,EACpE,gBAAA,EAAkB,aAAsC,oBAAoB,CAAA;AAAA,EAC5E,mBAAA,EAAqB,aAAa,gBAAgB,CAAA;AAAA,EAClD,gBAAA,EAAkB,aAAqC,oBAAoB,CAAA;AAAA,EAC3E,WAAA,EAAa,aAAa,mBAAmB,CAAA;AAAA,EAC7C,aAAA,EAAe,aAAa,gBAAgB,CAAA;AAAA,EAC5C,MAAA,EAAQ,aAAkB,QAAQ,CAAA;AACpC,EAAA;AAWO,MAAM,8BAA8B,mBAAkD,CAAA;AAE7F,CAAA;AADE,aAAA,CADW,uBACJ,MAAO,EAAA,aAAA,CAAA,CAAA;AAIT,MAAM,mCAAmC,YAAa,CAAA;AAAA,EAAtD,WAAA,GAAA;AAAA,IAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA;AAEL,IAA4B,aAAA,CAAA,IAAA,EAAA,SAAA,EAAA,EAAE,KAAO,EAAA,EAAG,EAAA,CAAA,CAAA;AAAA,GAAA;AAC1C,CAAA;AAFE,aAAA,CADW,4BACJ,MAAO,EAAA,mBAAA,CAAA;;;;"}