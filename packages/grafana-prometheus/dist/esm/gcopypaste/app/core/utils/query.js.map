{"version":3,"file":"query.js","sources":["../../../../../../src/gcopypaste/app/core/utils/query.ts"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/core/utils/query.ts\nimport { DataQuery } from '@grafana/data';\n\nexport const getNextRefIdChar = (queries: DataQuery[]): string => {\n  for (let num = 0; ; num++) {\n    const refId = getRefId(num);\n    if (!queries.some((query) => query.refId === refId)) {\n      return refId;\n    }\n  }\n};\n\nfunction getRefId(num: number): string {\n  const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  if (num < letters.length) {\n    return letters[num];\n  } else {\n    return getRefId(Math.floor(num / letters.length) - 1) + letters[num % letters.length];\n  }\n}\n"],"names":[],"mappings":"AAGa,MAAA,gBAAA,GAAmB,CAAC,OAAiC,KAAA;AAChE,EAAS,KAAA,IAAA,GAAA,GAAM,KAAK,GAAO,EAAA,EAAA;AACzB,IAAM,MAAA,KAAA,GAAQ,SAAS,GAAG,CAAA,CAAA;AAC1B,IAAI,IAAA,CAAC,QAAQ,IAAK,CAAA,CAAC,UAAU,KAAM,CAAA,KAAA,KAAU,KAAK,CAAG,EAAA;AACnD,MAAO,OAAA,KAAA,CAAA;AAAA,KACT;AAAA,GACF;AACF,EAAA;AAEA,SAAS,SAAS,GAAqB,EAAA;AACrC,EAAA,MAAM,OAAU,GAAA,4BAAA,CAAA;AAEhB,EAAI,IAAA,GAAA,GAAM,QAAQ,MAAQ,EAAA;AACxB,IAAA,OAAO,QAAQ,GAAG,CAAA,CAAA;AAAA,GACb,MAAA;AACL,IAAA,OAAO,QAAS,CAAA,IAAA,CAAK,KAAM,CAAA,GAAA,GAAM,OAAQ,CAAA,MAAM,CAAI,GAAA,CAAC,CAAI,GAAA,OAAA,CAAQ,GAAM,GAAA,OAAA,CAAQ,MAAM,CAAA,CAAA;AAAA,GACtF;AACF;;;;"}