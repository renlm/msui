{"version":3,"file":"CancelablePromise.js","sources":["../../../../../../src/gcopypaste/app/core/utils/CancelablePromise.ts"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/core/utils/CancelablePromise.ts\n// https://github.com/facebook/react/issues/5465\n\nexport interface CancelablePromise<T> {\n  promise: Promise<T>;\n  cancel: () => void;\n}\n\nexport interface CancelablePromiseRejection {\n  isCanceled: boolean;\n}\n\nexport function isCancelablePromiseRejection(promise: unknown): promise is CancelablePromiseRejection {\n  return typeof promise === 'object' && promise !== null && 'isCanceled' in promise;\n}\n\nexport const makePromiseCancelable = <T>(promise: Promise<T>): CancelablePromise<T> => {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise<T>((resolve, reject) => {\n    const canceledPromiseRejection: CancelablePromiseRejection = { isCanceled: true };\n    promise.then((val) => (hasCanceled_ ? reject(canceledPromiseRejection) : resolve(val)));\n    promise.catch((error) => (hasCanceled_ ? reject(canceledPromiseRejection) : reject(error)));\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    },\n  };\n};\n"],"names":[],"mappings":"AAYO,SAAS,6BAA6B,OAAyD,EAAA;AACpG,EAAA,OAAO,OAAO,OAAA,KAAY,QAAY,IAAA,OAAA,KAAY,QAAQ,YAAgB,IAAA,OAAA,CAAA;AAC5E,CAAA;AAEa,MAAA,qBAAA,GAAwB,CAAI,OAA8C,KAAA;AACrF,EAAA,IAAI,YAAe,GAAA,KAAA,CAAA;AAEnB,EAAA,MAAM,cAAiB,GAAA,IAAI,OAAW,CAAA,CAAC,SAAS,MAAW,KAAA;AACzD,IAAM,MAAA,wBAAA,GAAuD,EAAE,UAAA,EAAY,IAAK,EAAA,CAAA;AAChF,IAAQ,OAAA,CAAA,IAAA,CAAK,CAAC,GAAS,KAAA,YAAA,GAAe,OAAO,wBAAwB,CAAA,GAAI,OAAQ,CAAA,GAAG,CAAE,CAAA,CAAA;AACtF,IAAQ,OAAA,CAAA,KAAA,CAAM,CAAC,KAAW,KAAA,YAAA,GAAe,OAAO,wBAAwB,CAAA,GAAI,MAAO,CAAA,KAAK,CAAE,CAAA,CAAA;AAAA,GAC3F,CAAA,CAAA;AAED,EAAO,OAAA;AAAA,IACL,OAAS,EAAA,cAAA;AAAA,IACT,MAAS,GAAA;AACP,MAAe,YAAA,GAAA,IAAA,CAAA;AAAA,KACjB;AAAA,GACF,CAAA;AACF;;;;"}