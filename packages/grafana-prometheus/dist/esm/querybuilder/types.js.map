{"version":3,"file":"types.js","sources":["../../../src/querybuilder/types.ts"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/querybuilder/types.ts\nimport { VisualQueryBinary } from './shared/LokiAndPromQueryModellerBase';\nimport { QueryBuilderLabelFilter, QueryBuilderOperation } from './shared/types';\n\n/**\n * Visual query model\n */\nexport interface PromVisualQuery {\n  metric: string;\n  labels: QueryBuilderLabelFilter[];\n  operations: QueryBuilderOperation[];\n  binaryQueries?: PromVisualQueryBinary[];\n  // metrics explorer additional settings\n  useBackend?: boolean;\n  disableTextWrap?: boolean;\n  includeNullMetadata?: boolean;\n  fullMetaSearch?: boolean;\n}\n\nexport type PromVisualQueryBinary = VisualQueryBinary<PromVisualQuery>;\n\nexport enum PromVisualQueryOperationCategory {\n  Aggregations = 'Aggregations',\n  RangeFunctions = 'Range functions',\n  Functions = 'Functions',\n  BinaryOps = 'Binary operations',\n  Trigonometric = 'Trigonometric',\n  Time = 'Time Functions',\n}\n\nexport enum PromOperationId {\n  Abs = 'abs',\n  Absent = 'absent',\n  AbsentOverTime = 'absent_over_time',\n  Acos = 'acos',\n  Acosh = 'acosh',\n  Asin = 'asin',\n  Asinh = 'asinh',\n  Atan = 'atan',\n  Atanh = 'atanh',\n  Avg = 'avg',\n  AvgOverTime = 'avg_over_time',\n  BottomK = 'bottomk',\n  Ceil = 'ceil',\n  Changes = 'changes',\n  Clamp = 'clamp',\n  ClampMax = 'clamp_max',\n  ClampMin = 'clamp_min',\n  Cos = 'cos',\n  Cosh = 'cosh',\n  Count = 'count',\n  CountOverTime = 'count_over_time',\n  CountScalar = 'count_scalar',\n  CountValues = 'count_values',\n  DayOfMonth = 'day_of_month',\n  DayOfWeek = 'day_of_week',\n  DayOfYear = 'day_of_year',\n  DaysInMonth = 'days_in_month',\n  Deg = 'deg',\n  Delta = 'delta',\n  Deriv = 'deriv',\n  DropCommonLabels = 'drop_common_labels',\n  Exp = 'exp',\n  Floor = 'floor',\n  Group = 'group',\n  HistogramQuantile = 'histogram_quantile',\n  HistogramAvg = 'histogram_avg',\n  HistogramCount = 'histogram_count',\n  HistogramSum = 'histogram_sum',\n  HistogramFraction = 'histogram_fraction',\n  HistogramStddev = 'histogram_stddev',\n  HistogramStdvar = 'histogram_stdvar',\n  HoltWinters = 'holt_winters',\n  Hour = 'hour',\n  Idelta = 'idelta',\n  Increase = 'increase',\n  Irate = 'irate',\n  LabelJoin = 'label_join',\n  LabelReplace = 'label_replace',\n  Last = 'last',\n  LastOverTime = 'last_over_time',\n  Ln = 'ln',\n  Log10 = 'log10',\n  Log2 = 'log2',\n  Max = 'max',\n  MaxOverTime = 'max_over_time',\n  Min = 'min',\n  MinOverTime = 'min_over_time',\n  Minute = 'minute',\n  Month = 'month',\n  Pi = 'pi',\n  PredictLinear = 'predict_linear',\n  Present = 'present',\n  PresentOverTime = 'present_over_time',\n  Quantile = 'quantile',\n  QuantileOverTime = 'quantile_over_time',\n  Rad = 'rad',\n  Rate = 'rate',\n  Resets = 'resets',\n  Round = 'round',\n  Scalar = 'scalar',\n  Sgn = 'sgn',\n  Sin = 'sin',\n  Sinh = 'sinh',\n  Sort = 'sort',\n  SortDesc = 'sort_desc',\n  Sqrt = 'sqrt',\n  Stddev = 'stddev',\n  StddevOverTime = 'stddev_over_time',\n  Sum = 'sum',\n  SumOverTime = 'sum_over_time',\n  Tan = 'tan',\n  Tanh = 'tanh',\n  Time = 'time',\n  Timestamp = 'timestamp',\n  TopK = 'topk',\n  Vector = 'vector',\n  Year = 'year',\n  // Binary ops\n  Addition = '__addition',\n  Subtraction = '__subtraction',\n  MultiplyBy = '__multiply_by',\n  DivideBy = '__divide_by',\n  Modulo = '__modulo',\n  Exponent = '__exponent',\n  NestedQuery = '__nested_query',\n  EqualTo = '__equal_to',\n  NotEqualTo = '__not_equal_to',\n  GreaterThan = '__greater_than',\n  LessThan = '__less_than',\n  GreaterOrEqual = '__greater_or_equal',\n  LessOrEqual = '__less_or_equal',\n}\n\nexport enum PromQueryPatternType {\n  Rate = 'rate',\n  Histogram = 'histogram',\n  Binary = 'binary',\n}\n\nexport interface PromQueryPattern {\n  name: string;\n  operations: QueryBuilderOperation[];\n  type: PromQueryPatternType;\n  binaryQueries?: PromVisualQueryBinary[];\n}\n"],"names":["PromVisualQueryOperationCategory","PromOperationId","PromQueryPatternType"],"mappings":"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"}