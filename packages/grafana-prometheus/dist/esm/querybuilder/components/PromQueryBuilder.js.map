{"version":3,"file":"PromQueryBuilder.js","sources":["../../../../src/querybuilder/components/PromQueryBuilder.tsx"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/querybuilder/components/PromQueryBuilder.tsx\nimport { css } from '@emotion/css';\nimport React, { useEffect, useState } from 'react';\n\nimport { DataSourceApi, PanelData } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { EditorRow } from '@grafana/experimental';\nimport { config } from '@grafana/runtime';\nimport { Drawer } from '@grafana/ui';\n\nimport { PrometheusDatasource } from '../../datasource';\nimport promqlGrammar from '../../promql';\nimport { promQueryModeller } from '../PromQueryModeller';\nimport { buildVisualQueryFromString } from '../parsing';\nimport { OperationExplainedBox } from '../shared/OperationExplainedBox';\nimport { OperationList } from '../shared/OperationList';\nimport { OperationListExplained } from '../shared/OperationListExplained';\nimport { OperationsEditorRow } from '../shared/OperationsEditorRow';\nimport { QueryBuilderHints } from '../shared/QueryBuilderHints';\nimport { RawQuery } from '../shared/RawQuery';\nimport { QueryBuilderOperation } from '../shared/types';\nimport { PromVisualQuery } from '../types';\n\nimport { MetricsLabelsSection } from './MetricsLabelsSection';\nimport { NestedQueryList } from './NestedQueryList';\nimport { EXPLAIN_LABEL_FILTER_CONTENT } from './PromQueryBuilderExplained';\nimport { PromQail } from './promQail/PromQail';\nimport { QueryAssistantButton } from './promQail/QueryAssistantButton';\nimport { isLLMPluginEnabled } from './promQail/state/helpers';\n\nexport interface PromQueryBuilderProps {\n  query: PromVisualQuery;\n  datasource: PrometheusDatasource;\n  onChange: (update: PromVisualQuery) => void;\n  onRunQuery: () => void;\n  data?: PanelData;\n  showExplain: boolean;\n}\n\nexport const PromQueryBuilder = React.memo<PromQueryBuilderProps>((props) => {\n  const { datasource, query, onChange, onRunQuery, data, showExplain } = props;\n  const [highlightedOp, setHighlightedOp] = useState<QueryBuilderOperation | undefined>();\n  const [showDrawer, setShowDrawer] = useState<boolean>(false);\n  const [llmAppEnabled, updateLlmAppEnabled] = useState<boolean>(false);\n  const { prometheusPromQAIL } = config.featureToggles; // AI/ML + Prometheus\n\n  const lang = { grammar: promqlGrammar, name: 'promql' };\n\n  const initHints = datasource.getInitHints();\n\n  useEffect(() => {\n    async function checkLlms() {\n      const check = await isLLMPluginEnabled();\n      updateLlmAppEnabled(check);\n    }\n\n    if (prometheusPromQAIL) {\n      checkLlms();\n    }\n  }, [prometheusPromQAIL]);\n\n  return (\n    <>\n      {prometheusPromQAIL && showDrawer && (\n        <Drawer closeOnMaskClick={false} onClose={() => setShowDrawer(false)}>\n          <PromQail\n            query={query}\n            closeDrawer={() => setShowDrawer(false)}\n            onChange={onChange}\n            datasource={datasource}\n          />\n        </Drawer>\n      )}\n      <EditorRow>\n        <MetricsLabelsSection query={query} onChange={onChange} datasource={datasource} />\n      </EditorRow>\n      {initHints.length ? (\n        <div className=\"query-row-break\">\n          <div className=\"prom-query-field-info text-warning\">\n            {initHints[0].label}{' '}\n            {initHints[0].fix ? (\n              <button type=\"button\" className={'text-warning'}>\n                {initHints[0].fix.label}\n              </button>\n            ) : null}\n          </div>\n        </div>\n      ) : null}\n      {showExplain && (\n        <OperationExplainedBox\n          stepNumber={1}\n          title={<RawQuery query={`${query.metric} ${promQueryModeller.renderLabels(query.labels)}`} lang={lang} />}\n        >\n          {EXPLAIN_LABEL_FILTER_CONTENT}\n        </OperationExplainedBox>\n      )}\n      <OperationsEditorRow>\n        <OperationList<PromVisualQuery>\n          queryModeller={promQueryModeller}\n          // eslint-ignore\n          datasource={datasource as DataSourceApi}\n          query={query}\n          onChange={onChange}\n          onRunQuery={onRunQuery}\n          highlightedOp={highlightedOp}\n        />\n        {prometheusPromQAIL && (\n          <div\n            className={css({\n              padding: '0 0 0 6px',\n            })}\n          >\n            <QueryAssistantButton llmAppEnabled={llmAppEnabled} metric={query.metric} setShowDrawer={setShowDrawer} />\n          </div>\n        )}\n        <div data-testid={selectors.components.DataSource.Prometheus.queryEditor.builder.hints}>\n          <QueryBuilderHints<PromVisualQuery>\n            datasource={datasource}\n            query={query}\n            onChange={onChange}\n            data={data}\n            queryModeller={promQueryModeller}\n            buildVisualQueryFromString={buildVisualQueryFromString}\n          />\n        </div>\n      </OperationsEditorRow>\n      {showExplain && (\n        <OperationListExplained<PromVisualQuery>\n          lang={lang}\n          query={query}\n          stepNumber={2}\n          queryModeller={promQueryModeller}\n          onMouseEnter={(op) => setHighlightedOp(op)}\n          onMouseLeave={() => setHighlightedOp(undefined)}\n        />\n      )}\n      {query.binaryQueries && query.binaryQueries.length > 0 && (\n        <NestedQueryList\n          query={query}\n          datasource={datasource}\n          onChange={onChange}\n          onRunQuery={onRunQuery}\n          showExplain={showExplain}\n        />\n      )}\n    </>\n  );\n});\n\nPromQueryBuilder.displayName = 'PromQueryBuilder';\n"],"names":[],"mappings":"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"}