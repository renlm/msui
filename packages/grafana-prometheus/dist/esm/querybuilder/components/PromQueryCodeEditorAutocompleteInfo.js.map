{"version":3,"file":"PromQueryCodeEditorAutocompleteInfo.js","sources":["../../../../src/querybuilder/components/PromQueryCodeEditorAutocompleteInfo.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { config } from '@grafana/runtime';\nimport { IconButton, Text, Stack } from '@grafana/ui';\n\nimport {\n  CODE_MODE_SUGGESTIONS_INCOMPLETE_EVENT,\n  isSuggestionsIncompleteEvent,\n} from '../../components/monaco-query-field/monaco-completion-provider/data_provider';\nimport { PromQueryEditorProps } from '../../components/types';\nimport { QueryEditorMode } from '../shared/types';\n\ninterface Props {\n  datasourceUid: PromQueryEditorProps['datasource']['uid'];\n  editorMode: QueryEditorMode;\n}\n\nexport function PromQueryCodeEditorAutocompleteInfo(props: Readonly<Props>) {\n  const [autocompleteLimit, setAutocompleteLimit] = useState('n');\n  const [autocompleteLimitExceeded, setAutocompleteLimitExceeded] = useState(false);\n  const handleSuggestionsIncompleteEvent = useCallback(\n    (e: Event) => {\n      if (!isSuggestionsIncompleteEvent(e)) {\n        return;\n      }\n\n      if (e.detail.datasourceUid === props.datasourceUid) {\n        setAutocompleteLimitExceeded(true);\n        setAutocompleteLimit(e.detail.limit.toString());\n      }\n    },\n    [props.datasourceUid]\n  );\n\n  useEffect(() => {\n    addEventListener(CODE_MODE_SUGGESTIONS_INCOMPLETE_EVENT, handleSuggestionsIncompleteEvent);\n\n    return () => {\n      removeEventListener(CODE_MODE_SUGGESTIONS_INCOMPLETE_EVENT, handleSuggestionsIncompleteEvent);\n    };\n  }, [handleSuggestionsIncompleteEvent]);\n\n  const showCodeModeAutocompleteDisclaimer = (): boolean => {\n    return (\n      Boolean(config.featureToggles.prometheusCodeModeMetricNamesSearch) &&\n      props.editorMode === QueryEditorMode.Code &&\n      autocompleteLimitExceeded\n    );\n  };\n\n  if (!showCodeModeAutocompleteDisclaimer()) {\n    return null;\n  }\n\n  return (\n    <div data-testid={selectors.components.DataSource.Prometheus.queryEditor.code.metricsCountInfo}>\n      <Stack direction=\"row\" gap={1}>\n        <Text color=\"secondary\" element=\"p\" italic={true}>\n          Autocomplete suggestions limited\n        </Text>\n        <IconButton\n          name=\"info-circle\"\n          tooltip={`The number of metric names exceeds the autocomplete limit. Only the ${autocompleteLimit}-most relevant metrics are displayed. You can adjust the threshold in the data source settings.`}\n        />\n      </Stack>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAkBO,SAAS,oCAAoC,KAAwB,EAAA;AAC1E,EAAA,MAAM,CAAC,iBAAA,EAAmB,oBAAoB,CAAA,GAAI,SAAS,GAAG,CAAA,CAAA;AAC9D,EAAA,MAAM,CAAC,yBAAA,EAA2B,4BAA4B,CAAA,GAAI,SAAS,KAAK,CAAA,CAAA;AAChF,EAAA,MAAM,gCAAmC,GAAA,WAAA;AAAA,IACvC,CAAC,CAAa,KAAA;AACZ,MAAI,IAAA,CAAC,4BAA6B,CAAA,CAAC,CAAG,EAAA;AACpC,QAAA,OAAA;AAAA,OACF;AAEA,MAAA,IAAI,CAAE,CAAA,MAAA,CAAO,aAAkB,KAAA,KAAA,CAAM,aAAe,EAAA;AAClD,QAAA,4BAAA,CAA6B,IAAI,CAAA,CAAA;AACjC,QAAA,oBAAA,CAAqB,CAAE,CAAA,MAAA,CAAO,KAAM,CAAA,QAAA,EAAU,CAAA,CAAA;AAAA,OAChD;AAAA,KACF;AAAA,IACA,CAAC,MAAM,aAAa,CAAA;AAAA,GACtB,CAAA;AAEA,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,gBAAA,CAAiB,wCAAwC,gCAAgC,CAAA,CAAA;AAEzF,IAAA,OAAO,MAAM;AACX,MAAA,mBAAA,CAAoB,wCAAwC,gCAAgC,CAAA,CAAA;AAAA,KAC9F,CAAA;AAAA,GACF,EAAG,CAAC,gCAAgC,CAAC,CAAA,CAAA;AAErC,EAAA,MAAM,qCAAqC,MAAe;AACxD,IACE,OAAA,OAAA,CAAQ,OAAO,cAAe,CAAA,mCAAmC,KACjE,KAAM,CAAA,UAAA,KAAe,gBAAgB,IACrC,IAAA,yBAAA,CAAA;AAAA,GAEJ,CAAA;AAEA,EAAI,IAAA,CAAC,oCAAsC,EAAA;AACzC,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,KAAI,EAAA,EAAA,aAAA,EAAa,SAAU,CAAA,UAAA,CAAW,WAAW,UAAW,CAAA,WAAA,CAAY,IAAK,CAAA,gBAAA,EAAA,kBAC3E,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAM,WAAU,KAAM,EAAA,GAAA,EAAK,CAC1B,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,IAAK,EAAA,EAAA,KAAA,EAAM,WAAY,EAAA,OAAA,EAAQ,GAAI,EAAA,MAAA,EAAQ,IAAM,EAAA,EAAA,kCAElD,CACA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,UAAA;AAAA,IAAA;AAAA,MACC,IAAK,EAAA,aAAA;AAAA,MACL,OAAA,EAAS,uEAAuE,iBAAiB,CAAA,+FAAA,CAAA;AAAA,KAAA;AAAA,GAErG,CACF,CAAA,CAAA;AAEJ;;;;"}