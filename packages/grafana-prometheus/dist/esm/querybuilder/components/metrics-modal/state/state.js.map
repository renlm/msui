{"version":3,"file":"state.js","sources":["../../../../../../src/querybuilder/components/metrics-modal/state/state.ts"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/querybuilder/components/metrics-modal/state/state.ts\nimport { SelectableValue } from '@grafana/data';\n\nimport { PromVisualQuery } from '../../../types';\nimport { HaystackDictionary, MetricsData } from '../types';\n\nexport const DEFAULT_RESULTS_PER_PAGE = 100;\nexport const MAXIMUM_RESULTS_PER_PAGE = 1000;\n\n/**\n * Initial state for the metrics explorer\n * @returns\n */\nexport function initialState(query?: PromVisualQuery): MetricsModalState {\n  return {\n    isLoading: true,\n    metrics: [],\n    hasMetadata: true,\n    metaHaystackDictionary: {},\n    metaHaystackMatches: [],\n    metaHaystackOrder: [],\n    nameHaystackDictionary: {},\n    nameHaystackOrder: [],\n    nameHaystackMatches: [],\n    totalMetricCount: 0,\n    filteredMetricCount: null,\n    resultsPerPage: DEFAULT_RESULTS_PER_PAGE,\n    pageNum: 1,\n    fuzzySearchQuery: '',\n    fullMetaSearch: query?.fullMetaSearch ?? false,\n    includeNullMetadata: query?.includeNullMetadata ?? true,\n    selectedTypes: [],\n    useBackend: query?.useBackend ?? false,\n    disableTextWrap: query?.disableTextWrap ?? false,\n    showAdditionalSettings: false,\n  };\n}\n\n/**\n * The metrics explorer state object\n */\nexport interface MetricsModalState {\n  /** Used for the loading spinner */\n  isLoading: boolean;\n  /**\n   * Initial collection of metrics.\n   * The frontend filters do not impact this, but\n   * it is reduced by the backend search.\n   */\n  metrics: MetricsData;\n  /** Field for disabling type select and switches that rely on metadata */\n  hasMetadata: boolean;\n  /** Used to display metrics and help with fuzzy order */\n  nameHaystackDictionary: HaystackDictionary;\n  /** Used to sort name fuzzy search by relevance */\n  nameHaystackOrder: string[];\n  /** Used to highlight text in fuzzy matches */\n  nameHaystackMatches: string[];\n  /** Used to display metrics and help with fuzzy order for search across all metadata */\n  metaHaystackDictionary: HaystackDictionary;\n  /** Used to sort meta fuzzy search by relevance */\n  metaHaystackOrder: string[];\n  /** Used to highlight text in fuzzy matches */\n  metaHaystackMatches: string[];\n  /** Total results computed on initialization */\n  totalMetricCount: number;\n  /** Set after filtering metrics */\n  filteredMetricCount: number | null;\n  /** Pagination field for showing results in table */\n  resultsPerPage: number;\n  /** Pagination field */\n  pageNum: number;\n  /** The text query used to match metrics */\n  fuzzySearchQuery: string;\n  /** Enables the fuzzy meatadata search */\n  fullMetaSearch: boolean;\n  /** Includes results that are missing type and description */\n  includeNullMetadata: boolean;\n  /** Filter by prometheus type */\n  selectedTypes: Array<SelectableValue<string>>;\n  /** Filter by the series match endpoint instead of the fuzzy search */\n  useBackend: boolean;\n  /** Disable text wrap for descriptions in the results table */\n  disableTextWrap: boolean;\n  /** Display toggle switches for settings */\n  showAdditionalSettings: boolean;\n}\n\n/**\n * Type for the useEffect get metadata function\n */\nexport type MetricsModalMetadata = {\n  isLoading: boolean;\n  metrics: MetricsData;\n  hasMetadata: boolean;\n  metaHaystackDictionary: HaystackDictionary;\n  nameHaystackDictionary: HaystackDictionary;\n  totalMetricCount: number;\n  filteredMetricCount: number | null;\n};\n\n// for updating the settings in the PromQuery model\nexport function getSettings(visQuery: PromVisualQuery): MetricsModalSettings {\n  return {\n    useBackend: visQuery?.useBackend ?? false,\n    disableTextWrap: visQuery?.disableTextWrap ?? false,\n    fullMetaSearch: visQuery?.fullMetaSearch ?? false,\n    includeNullMetadata: visQuery.includeNullMetadata ?? false,\n  };\n}\n\nexport type MetricsModalSettings = {\n  useBackend?: boolean;\n  disableTextWrap?: boolean;\n  fullMetaSearch?: boolean;\n  includeNullMetadata?: boolean;\n};\n"],"names":[],"mappings":"AAMO,MAAM,wBAA2B,GAAA,IAAA;AACjC,MAAM,wBAA2B,GAAA,IAAA;AAMjC,SAAS,aAAa,KAA4C,EAAA;AAbzE,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAcE,EAAO,OAAA;AAAA,IACL,SAAW,EAAA,IAAA;AAAA,IACX,SAAS,EAAC;AAAA,IACV,WAAa,EAAA,IAAA;AAAA,IACb,wBAAwB,EAAC;AAAA,IACzB,qBAAqB,EAAC;AAAA,IACtB,mBAAmB,EAAC;AAAA,IACpB,wBAAwB,EAAC;AAAA,IACzB,mBAAmB,EAAC;AAAA,IACpB,qBAAqB,EAAC;AAAA,IACtB,gBAAkB,EAAA,CAAA;AAAA,IAClB,mBAAqB,EAAA,IAAA;AAAA,IACrB,cAAgB,EAAA,wBAAA;AAAA,IAChB,OAAS,EAAA,CAAA;AAAA,IACT,gBAAkB,EAAA,EAAA;AAAA,IAClB,cAAA,EAAA,CAAgB,EAAO,GAAA,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,cAAA,KAAP,IAAyB,GAAA,EAAA,GAAA,KAAA;AAAA,IACzC,mBAAA,EAAA,CAAqB,EAAO,GAAA,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,mBAAA,KAAP,IAA8B,GAAA,EAAA,GAAA,IAAA;AAAA,IACnD,eAAe,EAAC;AAAA,IAChB,UAAA,EAAA,CAAY,EAAO,GAAA,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,UAAA,KAAP,IAAqB,GAAA,EAAA,GAAA,KAAA;AAAA,IACjC,eAAA,EAAA,CAAiB,EAAO,GAAA,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,eAAA,KAAP,IAA0B,GAAA,EAAA,GAAA,KAAA;AAAA,IAC3C,sBAAwB,EAAA,KAAA;AAAA,GAC1B,CAAA;AACF,CAAA;AAkEO,SAAS,YAAY,QAAiD,EAAA;AAtG7E,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAuGE,EAAO,OAAA;AAAA,IACL,UAAA,EAAA,CAAY,EAAU,GAAA,QAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAA,UAAA,KAAV,IAAwB,GAAA,EAAA,GAAA,KAAA;AAAA,IACpC,eAAA,EAAA,CAAiB,EAAU,GAAA,QAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAA,eAAA,KAAV,IAA6B,GAAA,EAAA,GAAA,KAAA;AAAA,IAC9C,cAAA,EAAA,CAAgB,EAAU,GAAA,QAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAA,cAAA,KAAV,IAA4B,GAAA,EAAA,GAAA,KAAA;AAAA,IAC5C,mBAAA,EAAA,CAAqB,EAAS,GAAA,QAAA,CAAA,mBAAA,KAAT,IAAgC,GAAA,EAAA,GAAA,KAAA;AAAA,GACvD,CAAA;AACF;;;;"}