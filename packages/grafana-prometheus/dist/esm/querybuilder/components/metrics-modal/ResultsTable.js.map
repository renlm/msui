{"version":3,"file":"ResultsTable.js","sources":["../../../../../src/querybuilder/components/metrics-modal/ResultsTable.tsx"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/querybuilder/components/metrics-modal/ResultsTable.tsx\nimport { css } from '@emotion/css';\nimport React, { ReactElement } from 'react';\nimport Highlighter from 'react-highlight-words';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, Icon, Tooltip, useTheme2 } from '@grafana/ui';\n\nimport { docsTip } from '../../../configuration/ConfigEditor';\nimport { PromVisualQuery } from '../../types';\n\nimport { tracking } from './state/helpers';\nimport { MetricsModalState } from './state/state';\nimport { MetricData, MetricsData } from './types';\n\ntype ResultsTableProps = {\n  metrics: MetricsData;\n  onChange: (query: PromVisualQuery) => void;\n  onClose: () => void;\n  query: PromVisualQuery;\n  state: MetricsModalState;\n  disableTextWrap: boolean;\n};\n\nexport function ResultsTable(props: ResultsTableProps) {\n  const { metrics, onChange, onClose, query, state, disableTextWrap } = props;\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, disableTextWrap);\n\n  function selectMetric(metric: MetricData) {\n    if (metric.value) {\n      onChange({ ...query, metric: metric.value });\n      tracking('grafana_prom_metric_encycopedia_tracking', state, metric.value);\n      onClose();\n    }\n  }\n\n  function metaRows(metric: MetricData) {\n    if (state.fullMetaSearch && metric) {\n      return (\n        <>\n          <td>{displayType(metric.type ?? '')}</td>\n          <td>\n            <Highlighter\n              textToHighlight={metric.description ?? ''}\n              searchWords={state.metaHaystackMatches}\n              autoEscape\n              highlightClassName={styles.matchHighLight}\n            />\n          </td>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <td>{displayType(metric.type ?? '')}</td>\n          <td>{metric.description ?? ''}</td>\n        </>\n      );\n    }\n  }\n\n  function addHelpIcon(fullType: string, descriptiveType: string, link: string) {\n    return (\n      <>\n        {fullType}\n        <span className={styles.tooltipSpace}>\n          <Tooltip\n            content={\n              <>\n                When creating a {descriptiveType}, Prometheus exposes multiple series with the type counter.{' '}\n                {docsTip(link)}\n              </>\n            }\n            placement=\"bottom-start\"\n            interactive={true}\n          >\n            <Icon name=\"info-circle\" size=\"xs\" />\n          </Tooltip>\n        </span>\n      </>\n    );\n  }\n\n  function displayType(type: string | null) {\n    if (!type) {\n      return '';\n    }\n\n    if (type.includes('(summary)')) {\n      return addHelpIcon(type, 'summary', 'https://prometheus.io/docs/concepts/metric_types/#summary');\n    }\n\n    if (type.includes('(histogram)')) {\n      return addHelpIcon(type, 'histogram', 'https://prometheus.io/docs/concepts/metric_types/#histogram');\n    }\n\n    return type;\n  }\n\n  function noMetricsMessages(): ReactElement {\n    let message;\n\n    if (!state.fuzzySearchQuery) {\n      message = 'There are no metrics found in the data source.';\n    }\n\n    if (query.labels.length > 0) {\n      message = 'There are no metrics found. Try to expand your label filters.';\n    }\n\n    if (state.fuzzySearchQuery || state.selectedTypes.length > 0) {\n      message = 'There are no metrics found. Try to expand your search and filters.';\n    }\n\n    return (\n      <tr className={styles.noResults}>\n        <td colSpan={3}>{message}</td>\n      </tr>\n    );\n  }\n\n  function textHighlight(state: MetricsModalState) {\n    if (state.useBackend) {\n      // highlight the input only for the backend search\n      // this highlight is equivalent to how the metric select highlights\n      // look into matching on regex input\n      return [state.fuzzySearchQuery];\n    } else if (state.fullMetaSearch) {\n      // highlight the matches in the ufuzzy metaHaystack\n      return state.metaHaystackMatches;\n    } else {\n      // highlight the ufuzzy name matches\n      return state.nameHaystackMatches;\n    }\n  }\n\n  return (\n    <table className={styles.table}>\n      <thead className={styles.stickyHeader}>\n        <tr>\n          <th className={`${styles.nameWidth} ${styles.tableHeaderPadding}`}>Name</th>\n          {state.hasMetadata && (\n            <>\n              <th className={`${styles.typeWidth} ${styles.tableHeaderPadding}`}>Type</th>\n              <th className={`${styles.descriptionWidth} ${styles.tableHeaderPadding}`}>Description</th>\n            </>\n          )}\n          <th className={styles.selectButtonWidth}> </th>\n        </tr>\n      </thead>\n      <tbody>\n        <>\n          {metrics.length > 0 &&\n            metrics.map((metric: MetricData, idx: number) => {\n              return (\n                <tr key={metric?.value ?? idx} className={styles.row}>\n                  <td className={styles.nameOverflow}>\n                    <Highlighter\n                      textToHighlight={metric?.value ?? ''}\n                      searchWords={textHighlight(state)}\n                      autoEscape\n                      highlightClassName={styles.matchHighLight}\n                    />\n                  </td>\n                  {state.hasMetadata && metaRows(metric)}\n                  <td>\n                    <Button\n                      size=\"md\"\n                      variant=\"secondary\"\n                      onClick={() => selectMetric(metric)}\n                      className={styles.centerButton}\n                    >\n                      Select\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          {metrics.length === 0 && !state.isLoading && noMetricsMessages()}\n        </>\n      </tbody>\n    </table>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, disableTextWrap: boolean) => {\n  return {\n    table: css({\n      tableLayout: disableTextWrap ? undefined : 'fixed',\n      borderRadius: theme.shape.radius.default,\n      width: '100%',\n      whiteSpace: disableTextWrap ? 'nowrap' : 'normal',\n      td: {\n        padding: theme.spacing(1),\n      },\n      'td,th': {\n        minWidth: theme.spacing(3),\n        borderBottom: `1px solid ${theme.colors.border.weak}`,\n      },\n    }),\n    row: css({\n      label: 'row',\n      borderBottom: `1px solid ${theme.colors.border.weak}`,\n      '&:last-child': {\n        borderBottom: 0,\n      },\n    }),\n    tableHeaderPadding: css({\n      padding: '8px',\n    }),\n    matchHighLight: css({\n      background: 'inherit',\n      color: theme.components.textHighlight.text,\n      backgroundColor: theme.components.textHighlight.background,\n    }),\n    nameWidth: css({\n      width: disableTextWrap ? undefined : '37.5%',\n    }),\n    nameOverflow: css({\n      overflowWrap: disableTextWrap ? undefined : 'anywhere',\n    }),\n    typeWidth: css({\n      width: disableTextWrap ? undefined : '15%',\n    }),\n    descriptionWidth: css({\n      width: disableTextWrap ? undefined : '35%',\n    }),\n    selectButtonWidth: css({\n      width: disableTextWrap ? undefined : '12.5%',\n    }),\n    stickyHeader: css({\n      position: 'sticky',\n      top: 0,\n      backgroundColor: theme.colors.background.primary,\n    }),\n    noResults: css({\n      textAlign: 'center',\n      color: theme.colors.text.secondary,\n    }),\n    tooltipSpace: css({\n      marginLeft: '4px',\n    }),\n    centerButton: css({\n      display: 'block',\n      margin: 'auto',\n      border: 'none',\n    }),\n  };\n};\n"],"names":["state"],"mappings":"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"}