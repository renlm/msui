{"version":3,"file":"QuerySuggestionContainer.js","sources":["../../../../../src/querybuilder/components/promQail/QuerySuggestionContainer.tsx"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/querybuilder/components/promQail/QuerySuggestionContainer.tsx\nimport { cx } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { Button, useTheme2 } from '@grafana/ui';\n\nimport { PromVisualQuery } from '../../types';\n\nimport { getStyles, queryAssistanttestIds } from './PromQail';\nimport { QuerySuggestionItem } from './QuerySuggestionItem';\nimport { QuerySuggestion, SuggestionType } from './types';\n\nexport type Props = {\n  querySuggestions: QuerySuggestion[];\n  suggestionType: SuggestionType;\n  closeDrawer: () => void;\n  nextInteraction: () => void;\n  queryExplain: (idx: number) => void;\n  onChange: (query: PromVisualQuery) => void;\n  prompt: string;\n};\n\nexport function QuerySuggestionContainer(props: Props) {\n  const { suggestionType, querySuggestions, closeDrawer, nextInteraction, queryExplain, onChange, prompt } = props;\n\n  const [hasNextInteraction, updateHasNextInteraction] = useState<boolean>(false);\n\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  let text, secondaryText, refineText;\n\n  if (suggestionType === SuggestionType.Historical) {\n    text = `Here are ${querySuggestions.length} query suggestions:`;\n    refineText = 'I want to write a prompt';\n  } else if (suggestionType === SuggestionType.AI) {\n    text = text = 'Here is your query suggestion:';\n    secondaryText =\n      'This query is based off of natural language descriptions of the most commonly used PromQL queries.';\n    refineText = 'Refine prompt';\n  }\n\n  return (\n    <>\n      {suggestionType === SuggestionType.Historical ? (\n        <div className={styles.bottomMargin}>{text}</div>\n      ) : (\n        <>\n          <div className={styles.textPadding}>{text}</div>\n          <div className={cx(styles.secondaryText, styles.bottomMargin)}>{secondaryText}</div>\n        </>\n      )}\n\n      <div className={styles.infoContainerWrapper}>\n        <div className={styles.infoContainer}>\n          {querySuggestions.map((qs: QuerySuggestion, idx: number) => {\n            return (\n              <QuerySuggestionItem\n                historical={suggestionType === SuggestionType.Historical}\n                querySuggestion={qs}\n                key={idx}\n                order={idx + 1}\n                queryExplain={queryExplain}\n                onChange={onChange}\n                closeDrawer={closeDrawer}\n                last={idx === querySuggestions.length - 1}\n                // for feedback rudderstack events\n                allSuggestions={querySuggestions.reduce((acc: string, qs: QuerySuggestion) => {\n                  return acc + '$$' + qs.query;\n                }, '')}\n                prompt={prompt ?? ''}\n              />\n            );\n          })}\n        </div>\n      </div>\n      {!hasNextInteraction && (\n        <div className={styles.nextInteractionHeight}>\n          <div className={cx(styles.afterButtons, styles.textPadding)}>\n            <Button\n              onClick={() => {\n                updateHasNextInteraction(true);\n                nextInteraction();\n              }}\n              data-testid={queryAssistanttestIds.refinePrompt}\n              fill=\"outline\"\n              variant=\"secondary\"\n              size=\"md\"\n            >\n              {refineText}\n            </Button>\n          </div>\n          <div className={cx(styles.textPadding, styles.floatRight)}>\n            <Button fill=\"outline\" variant=\"secondary\" size=\"md\" onClick={closeDrawer}>\n              Cancel\n            </Button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["qs"],"mappings":"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"}