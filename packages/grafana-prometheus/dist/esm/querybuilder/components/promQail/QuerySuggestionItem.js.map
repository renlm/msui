{"version":3,"file":"QuerySuggestionItem.js","sources":["../../../../../src/querybuilder/components/promQail/QuerySuggestionItem.tsx"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/querybuilder/components/promQail/QuerySuggestionItem.tsx\nimport { cx } from '@emotion/css';\nimport React, { FormEvent, useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, RadioButtonList, Spinner, TextArea, Toggletip, useTheme2 } from '@grafana/ui';\n\nimport { buildVisualQueryFromString } from '../../parsing';\nimport { PromVisualQuery } from '../../types';\n\nimport { getStyles } from './PromQail';\nimport { QuerySuggestion } from './types';\n\nexport type Props = {\n  querySuggestion: QuerySuggestion;\n  order: number;\n  queryExplain: (idx: number) => void;\n  historical: boolean;\n  onChange: (query: PromVisualQuery) => void;\n  closeDrawer: () => void;\n  last: boolean;\n  prompt: string;\n  allSuggestions: string | undefined;\n};\n\nconst suggestionOptions: SelectableValue[] = [\n  { label: 'Yes', value: 'yes' },\n  { label: 'No', value: 'no' },\n];\nconst explationOptions: SelectableValue[] = [\n  { label: 'Too vague', value: 'too vague' },\n  { label: 'Too technical', value: 'too technical' },\n  { label: 'Inaccurate', value: 'inaccurate' },\n  { label: 'Other', value: 'other' },\n];\n\nexport function QuerySuggestionItem(props: Props) {\n  const { querySuggestion, order, queryExplain, historical, onChange, closeDrawer, last, allSuggestions, prompt } =\n    props;\n  const [showExp, updShowExp] = useState<boolean>(false);\n\n  const [gaveExplanationFeedback, updateGaveExplanationFeedback] = useState<boolean>(false);\n  const [gaveSuggestionFeedback, updateGaveSuggestionFeedback] = useState<boolean>(false);\n\n  const [suggestionFeedback, setSuggestionFeedback] = useState({\n    radioInput: '',\n    text: '',\n  });\n\n  const [explanationFeedback, setExplanationFeedback] = useState({\n    radioInput: '',\n    text: '',\n  });\n\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  const { query, explanation } = querySuggestion;\n\n  const feedbackToggleTip = (type: string) => {\n    const updateRadioFeedback = (value: string) => {\n      if (type === 'explanation') {\n        setExplanationFeedback({\n          ...explanationFeedback,\n          radioInput: value,\n        });\n      } else {\n        setSuggestionFeedback({\n          ...suggestionFeedback,\n          radioInput: value,\n        });\n      }\n    };\n\n    const updateTextFeedback = (e: FormEvent<HTMLTextAreaElement>) => {\n      if (type === 'explanation') {\n        setExplanationFeedback({\n          ...explanationFeedback,\n          text: e.currentTarget.value,\n        });\n      } else {\n        setSuggestionFeedback({\n          ...suggestionFeedback,\n          text: e.currentTarget.value,\n        });\n      }\n    };\n\n    const disabledButton = () =>\n      type === 'explanation' ? !explanationFeedback.radioInput : !suggestionFeedback.radioInput;\n\n    const questionOne =\n      type === 'explanation' ? 'Why was the explanation not helpful?' : 'Were the query suggestions helpful?';\n\n    return (\n      <div className={styles.suggestionFeedback}>\n        <div>\n          <div className={styles.feedbackQuestion}>\n            <h6>{questionOne}</h6>\n            <i>(Required)</i>\n          </div>\n          <RadioButtonList\n            name=\"default\"\n            options={type === 'explanation' ? explationOptions : suggestionOptions}\n            value={type === 'explanation' ? explanationFeedback.radioInput : suggestionFeedback.radioInput}\n            onChange={updateRadioFeedback}\n          />\n        </div>\n        <div className={cx(type === 'explanation' && styles.explationTextInput)}>\n          {type !== 'explanation' && (\n            <div className={styles.feedbackQuestion}>\n              <h6>How can we improve the query suggestions?</h6>\n            </div>\n          )}\n          <TextArea\n            type=\"text\"\n            aria-label=\"Promqail suggestion text\"\n            placeholder=\"Enter your feedback\"\n            value={type === 'explanation' ? explanationFeedback.text : suggestionFeedback.text}\n            onChange={updateTextFeedback}\n            cols={100}\n          />\n        </div>\n\n        <div className={styles.submitFeedback}>\n          <Button\n            variant=\"primary\"\n            size=\"sm\"\n            disabled={disabledButton()}\n            onClick={() => {\n              // submit the rudderstack event\n              if (type === 'explanation') {\n                explanationFeedbackEvent(\n                  explanationFeedback.radioInput,\n                  explanationFeedback.text,\n                  querySuggestion,\n                  historical,\n                  prompt\n                );\n                updateGaveExplanationFeedback(true);\n              } else {\n                suggestionFeedbackEvent(\n                  suggestionFeedback.radioInput,\n                  suggestionFeedback.text,\n                  allSuggestions ?? '',\n                  historical,\n                  prompt\n                );\n                updateGaveSuggestionFeedback(true);\n              }\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={styles.querySuggestion}>\n        <div title={query} className={cx(styles.codeText, styles.longCode)}>\n          {`${order}.  ${query}`}\n        </div>\n        <div className={styles.useButton}>\n          <Button\n            variant=\"primary\"\n            size=\"sm\"\n            onClick={() => {\n              reportInteraction('grafana_prometheus_promqail_use_query_button_clicked', {\n                query: querySuggestion.query,\n              });\n              const pvq = buildVisualQueryFromString(querySuggestion.query);\n              // check for errors!\n              onChange(pvq.query);\n              closeDrawer();\n            }}\n          >\n            Use\n          </Button>\n        </div>\n      </div>\n      <div>\n        <Button\n          fill=\"text\"\n          variant=\"secondary\"\n          icon={showExp ? 'angle-up' : 'angle-down'}\n          onClick={() => {\n            updShowExp(!showExp);\n            queryExplain(order - 1);\n          }}\n          className={cx(styles.bodySmall)}\n          size=\"sm\"\n        >\n          Explainer\n        </Button>\n        {!showExp && order !== 5 && <div className={styles.textPadding}></div>}\n\n        {showExp && !querySuggestion.explanation && (\n          <div className={styles.center}>\n            <Spinner />\n          </div>\n        )}\n        {showExp && querySuggestion.explanation && (\n          <>\n            <div className={cx(styles.bodySmall, styles.explainPadding)}>\n              <div className={styles.textPadding}>This query is trying to answer the question:</div>\n              <div className={styles.textPadding}>{explanation}</div>\n              <div className={styles.textPadding}>\n                Learn more with this{' '}\n                <a\n                  className={styles.doc}\n                  href={'https://prometheus.io/docs/prometheus/latest/querying/examples/#query-examples'}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Prometheus doc\n                </a>\n              </div>\n\n              <div className={cx(styles.rightButtons, styles.secondaryText)}>\n                Was this explanation helpful?\n                <div className={styles.floatRight}>\n                  {!gaveExplanationFeedback ? (\n                    <>\n                      <Button\n                        fill=\"outline\"\n                        variant=\"secondary\"\n                        size=\"sm\"\n                        className={styles.leftButton}\n                        onClick={() => {\n                          explanationFeedbackEvent('Yes', '', querySuggestion, historical, prompt);\n                          updateGaveExplanationFeedback(true);\n                        }}\n                      >\n                        Yes\n                      </Button>\n                      <Toggletip\n                        aria-label=\"Suggestion feedback\"\n                        content={feedbackToggleTip('explanation')}\n                        placement=\"bottom-end\"\n                        closeButton={true}\n                      >\n                        <Button fill=\"outline\" variant=\"secondary\" size=\"sm\">\n                          No\n                        </Button>\n                      </Toggletip>\n                    </>\n                  ) : (\n                    'Thank you for your feedback!'\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {!last && <hr />}\n          </>\n        )}\n        {last && (\n          <div className={cx(styles.feedbackStyle)}>\n            {!gaveSuggestionFeedback ? (\n              <Toggletip\n                aria-label=\"Suggestion feedback\"\n                content={feedbackToggleTip('suggestion')}\n                placement=\"bottom-end\"\n                closeButton={true}\n              >\n                <Button fill=\"outline\" variant=\"secondary\" size=\"sm\">\n                  Give feedback on suggestions\n                </Button>\n              </Toggletip>\n            ) : (\n              // do this weird thing because the toggle tip doesn't allow an extra close function\n              <Button fill=\"outline\" variant=\"secondary\" size=\"sm\" disabled={true}>\n                Thank you for your feedback!\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction explanationFeedbackEvent(\n  radioInputFeedback: string,\n  textFeedback: string,\n  querySuggestion: QuerySuggestion,\n  historical: boolean,\n  prompt: string\n) {\n  const event = 'grafana_prometheus_promqail_explanation_feedback';\n\n  reportInteraction(event, {\n    helpful: radioInputFeedback,\n    textFeedback: textFeedback,\n    suggestionType: historical ? 'historical' : 'AI',\n    query: querySuggestion.query,\n    explanation: querySuggestion.explanation,\n    prompt: prompt,\n  });\n}\n\nfunction suggestionFeedbackEvent(\n  radioInputFeedback: string,\n  textFeedback: string,\n  allSuggestions: string,\n  historical: boolean,\n  prompt: string\n) {\n  const event = 'grafana_prometheus_promqail_suggestion_feedback';\n\n  reportInteraction(event, {\n    helpful: radioInputFeedback,\n    textFeedback: textFeedback,\n    suggestionType: historical ? 'historical' : 'AI',\n    allSuggestions: allSuggestions,\n    prompt: prompt,\n  });\n}\n"],"names":[],"mappings":"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"}