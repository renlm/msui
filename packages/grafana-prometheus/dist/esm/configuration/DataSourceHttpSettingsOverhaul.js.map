{"version":3,"file":"DataSourceHttpSettingsOverhaul.js","sources":["../../../src/configuration/DataSourceHttpSettingsOverhaul.tsx"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/configuration/DataSourceHttpSettingsOverhaul.tsx\nimport React from 'react';\n\nimport { DataSourceSettings } from '@grafana/data';\nimport { Auth, AuthMethod, ConnectionSettings, convertLegacyAuthProps } from '@grafana/experimental';\nimport { SecureSocksProxySettings, useTheme2 } from '@grafana/ui';\n\nimport { PromOptions } from '../types';\n\nimport { docsTip, overhaulStyles } from './ConfigEditor';\n\nexport type DataSourceHttpSettingsProps = {\n  options: DataSourceSettings<PromOptions, {}>;\n  onOptionsChange: (options: DataSourceSettings<PromOptions, {}>) => void;\n  secureSocksDSProxyEnabled: boolean;\n};\n\nexport const DataSourceHttpSettingsOverhaul = (props: DataSourceHttpSettingsProps) => {\n  const { options, onOptionsChange, secureSocksDSProxyEnabled } = props;\n\n  const newAuthProps = convertLegacyAuthProps({\n    config: options,\n    onChange: onOptionsChange,\n  });\n\n  const theme = useTheme2();\n  const styles = overhaulStyles(theme);\n\n  function returnSelectedMethod() {\n    return newAuthProps.selectedMethod;\n  }\n\n  // Do we need this switch anymore? Update the language.\n  let urlTooltip;\n  switch (options.access) {\n    case 'direct':\n      urlTooltip = (\n        <>\n          Your access method is <em>Browser</em>, this means the URL needs to be accessible from the browser.\n          {docsTip()}\n        </>\n      );\n      break;\n    case 'proxy':\n      urlTooltip = (\n        <>\n          Your access method is <em>Server</em>, this means the URL needs to be accessible from the grafana\n          backend/server.\n          {docsTip()}\n        </>\n      );\n      break;\n    default:\n      urlTooltip = <>Specify a complete HTTP URL (for example http://your_server:8080) {docsTip()}</>;\n  }\n\n  return (\n    <>\n      <ConnectionSettings\n        urlPlaceholder=\"http://localhost:9090\"\n        config={options}\n        onChange={onOptionsChange}\n        urlLabel=\"Prometheus server URL\"\n        urlTooltip={urlTooltip}\n      />\n      <hr className={`${styles.hrTopSpace} ${styles.hrBottomSpace}`} />\n      <Auth\n        // Reshaped legacy props\n        {...newAuthProps}\n        // Still need to call `onAuthMethodSelect` function from\n        // `newAuthProps` to store the legacy data correctly.\n        // Also make sure to store the data about your component\n        // being selected/unselected.\n        onAuthMethodSelect={(method) => {\n          onOptionsChange({\n            ...options,\n            basicAuth: method === AuthMethod.BasicAuth,\n            withCredentials: method === AuthMethod.CrossSiteCredentials,\n            jsonData: {\n              ...options.jsonData,\n              oauthPassThru: method === AuthMethod.OAuthForward,\n            },\n          });\n        }}\n        // If your method is selected pass its id to `selectedMethod`,\n        // otherwise pass the id from converted legacy data\n        selectedMethod={returnSelectedMethod()}\n      />\n      <div className={styles.sectionBottomPadding} />\n      {secureSocksDSProxyEnabled && (\n        <>\n          <SecureSocksProxySettings options={options} onOptionsChange={onOptionsChange} />\n          <div className={styles.sectionBottomPadding} />\n        </>\n      )}\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}