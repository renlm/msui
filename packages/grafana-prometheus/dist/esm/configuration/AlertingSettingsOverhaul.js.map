{"version":3,"file":"AlertingSettingsOverhaul.js","sources":["../../../src/configuration/AlertingSettingsOverhaul.tsx"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/configuration/AlertingSettingsOverhaul.tsx\nimport { cx } from '@emotion/css';\nimport React from 'react';\n\nimport { DataSourceJsonData, DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { ConfigSubSection } from '@grafana/experimental';\nimport { InlineField, Switch, useTheme2 } from '@grafana/ui';\n\nimport { docsTip, overhaulStyles } from './ConfigEditor';\n\ninterface Props<T extends DataSourceJsonData>\n  extends Pick<DataSourcePluginOptionsEditorProps<T>, 'options' | 'onOptionsChange'> {}\n\ninterface AlertingConfig extends DataSourceJsonData {\n  manageAlerts?: boolean;\n}\n\nexport function AlertingSettingsOverhaul<T extends AlertingConfig>({\n  options,\n  onOptionsChange,\n}: Props<T>): JSX.Element {\n  const theme = useTheme2();\n  // imported GrafanaTheme2 from @grafana/data does not match type of same from @grafana/ui\n  // @ts-ignore\n  const styles = overhaulStyles(theme);\n\n  return (\n    <ConfigSubSection title=\"Alerting\" className={cx(styles.container, styles.alertingTop)}>\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineField\n              labelWidth={30}\n              label=\"Manage alerts via Alerting UI\"\n              disabled={options.readOnly}\n              tooltip={\n                <>\n                  Manage alert rules for this data source. To manage other alerting resources, add an Alertmanager data\n                  source. {docsTip()}\n                </>\n              }\n              interactive={true}\n              className={styles.switchField}\n            >\n              <Switch\n                value={options.jsonData.manageAlerts !== false}\n                onChange={(event) =>\n                  onOptionsChange({\n                    ...options,\n                    jsonData: { ...options.jsonData, manageAlerts: event!.currentTarget.checked },\n                  })\n                }\n                id={selectors.components.DataSource.Prometheus.configPage.manageAlerts}\n              />\n            </InlineField>\n          </div>\n        </div>\n      </div>\n    </ConfigSubSection>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAkBO,SAAS,wBAAmD,CAAA;AAAA,EACjE,OAAA;AAAA,EACA,eAAA;AACF,CAA0B,EAAA;AACxB,EAAA,MAAM,QAAQ,SAAU,EAAA,CAAA;AAGxB,EAAM,MAAA,MAAA,GAAS,eAAe,KAAK,CAAA,CAAA;AAEnC,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,oBAAiB,KAAM,EAAA,UAAA,EAAW,WAAW,EAAG,CAAA,MAAA,CAAO,SAAW,EAAA,MAAA,CAAO,WAAW,CAAA,EAAA,sCAClF,KAAI,EAAA,EAAA,SAAA,EAAU,mCACZ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAI,WAAU,gBACb,EAAA,kBAAA,KAAA,CAAA,aAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,SACb,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,UAAY,EAAA,EAAA;AAAA,MACZ,KAAM,EAAA,+BAAA;AAAA,MACN,UAAU,OAAQ,CAAA,QAAA;AAAA,MAClB,OACE,kBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAE,gHAES,EAAA,OAAA,EACX,CAAA;AAAA,MAEF,WAAa,EAAA,IAAA;AAAA,MACb,WAAW,MAAO,CAAA,WAAA;AAAA,KAAA;AAAA,oBAElB,KAAA,CAAA,aAAA;AAAA,MAAC,MAAA;AAAA,MAAA;AAAA,QACC,KAAA,EAAO,OAAQ,CAAA,QAAA,CAAS,YAAiB,KAAA,KAAA;AAAA,QACzC,QAAU,EAAA,CAAC,KACT,KAAA,eAAA,CAAgB,iCACX,OADW,CAAA,EAAA;AAAA,UAEd,QAAA,EAAU,iCAAK,OAAQ,CAAA,QAAA,CAAA,EAAb,EAAuB,YAAc,EAAA,KAAA,CAAO,cAAc,OAAQ,EAAA,CAAA;AAAA,SAC7E,CAAA,CAAA;AAAA,QAEH,EAAI,EAAA,SAAA,CAAU,UAAW,CAAA,UAAA,CAAW,WAAW,UAAW,CAAA,YAAA;AAAA,OAAA;AAAA,KAC5D;AAAA,GAEJ,CACF,CACF,CACF,CAAA,CAAA;AAEJ;;;;"}