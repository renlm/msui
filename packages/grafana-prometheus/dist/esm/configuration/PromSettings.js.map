{"version":3,"file":"PromSettings.js","sources":["../../../src/configuration/PromSettings.tsx"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/configuration/PromSettings.tsx\nimport React, { SyntheticEvent, useState } from 'react';\n\nimport {\n  DataSourcePluginOptionsEditorProps,\n  onUpdateDatasourceJsonDataOptionChecked,\n  SelectableValue,\n  updateDatasourcePluginJsonDataOption,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { ConfigSubSection } from '@grafana/experimental';\nimport { config } from '@grafana/runtime';\nimport { InlineField, Input, Select, Switch, useTheme2 } from '@grafana/ui';\n\nimport { SUGGESTIONS_LIMIT } from '../language_provider';\nimport { QueryEditorMode } from '../querybuilder/shared/types';\nimport { defaultPrometheusQueryOverlapWindow } from '../querycache/QueryCache';\nimport { PromApplication, PrometheusCacheLevel, PromOptions } from '../types';\n\nimport { docsTip, overhaulStyles, PROM_CONFIG_LABEL_WIDTH, validateInput } from './ConfigEditor';\nimport { ExemplarsSettings } from './ExemplarsSettings';\nimport { PromFlavorVersions } from './PromFlavorVersions';\n\nconst httpOptions = [\n  { value: 'POST', label: 'POST' },\n  { value: 'GET', label: 'GET' },\n];\n\nconst editorOptions = [\n  { value: QueryEditorMode.Builder, label: 'Builder' },\n  { value: QueryEditorMode.Code, label: 'Code' },\n];\n\nconst cacheValueOptions = [\n  { value: PrometheusCacheLevel.Low, label: 'Low' },\n  { value: PrometheusCacheLevel.Medium, label: 'Medium' },\n  { value: PrometheusCacheLevel.High, label: 'High' },\n  { value: PrometheusCacheLevel.None, label: 'None' },\n];\n\ntype PrometheusSelectItemsType = Array<{ value: PromApplication; label: PromApplication }>;\n\nconst prometheusFlavorSelectItems: PrometheusSelectItemsType = [\n  { value: PromApplication.Prometheus, label: PromApplication.Prometheus },\n  { value: PromApplication.Cortex, label: PromApplication.Cortex },\n  { value: PromApplication.Mimir, label: PromApplication.Mimir },\n  { value: PromApplication.Thanos, label: PromApplication.Thanos },\n];\n\ntype Props = Pick<DataSourcePluginOptionsEditorProps<PromOptions>, 'options' | 'onOptionsChange'>;\n\n// single duration input\nexport const DURATION_REGEX = /^$|^\\d+(ms|[Mwdhmsy])$/;\n\n// multiple duration input\nexport const MULTIPLE_DURATION_REGEX = /(\\d+)(.+)/;\n\nexport const NON_NEGATIVE_INTEGER_REGEX = /^(0|[1-9]\\d*)(\\.\\d+)?(e\\+?\\d+)?$/; // non-negative integers, including scientific notation\n\nconst durationError = 'Value is not valid, you can use number with time unit specifier: y, M, w, d, h, m, s';\nexport const countError = 'Value is not valid, you can use non-negative integers, including scientific notation';\n\nexport const PromSettings = (props: Props) => {\n  const { options, onOptionsChange } = props;\n\n  // We are explicitly adding httpMethod so, it is correctly displayed in dropdown.\n  // This way, it is more predictable for users.\n  if (!options.jsonData.httpMethod) {\n    options.jsonData.httpMethod = 'POST';\n  }\n\n  const theme = useTheme2();\n  const styles = overhaulStyles(theme);\n\n  type ValidDuration = {\n    timeInterval: string;\n    queryTimeout: string;\n    incrementalQueryOverlapWindow: string;\n  };\n\n  const [validDuration, updateValidDuration] = useState<ValidDuration>({\n    timeInterval: '',\n    queryTimeout: '',\n    incrementalQueryOverlapWindow: '',\n  });\n\n  type ValidCount = {\n    codeModeMetricNamesSuggestionLimit: string;\n  };\n\n  const [validCount, updateValidCount] = useState<ValidCount>({\n    codeModeMetricNamesSuggestionLimit: '',\n  });\n\n  return (\n    <>\n      <ConfigSubSection title=\"Interval behaviour\" className={styles.container}>\n        <div className=\"gf-form-group\">\n          {/* Scrape interval */}\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <InlineField\n                label=\"Scrape interval\"\n                labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                tooltip={\n                  <>\n                    This interval is how frequently Prometheus scrapes targets. Set this to the typical scrape and\n                    evaluation interval configured in your Prometheus config file. If you set this to a greater value\n                    than your Prometheus config file interval, Grafana will evaluate the data according to this interval\n                    and you will see less data points. Defaults to 15s. {docsTip()}\n                  </>\n                }\n                interactive={true}\n                disabled={options.readOnly}\n              >\n                <>\n                  <Input\n                    className=\"width-20\"\n                    value={options.jsonData.timeInterval}\n                    spellCheck={false}\n                    placeholder=\"15s\"\n                    onChange={onChangeHandler('timeInterval', options, onOptionsChange)}\n                    onBlur={(e) =>\n                      updateValidDuration({\n                        ...validDuration,\n                        timeInterval: e.currentTarget.value,\n                      })\n                    }\n                    data-testid={selectors.components.DataSource.Prometheus.configPage.scrapeInterval}\n                  />\n                  {validateInput(validDuration.timeInterval, DURATION_REGEX, durationError)}\n                </>\n              </InlineField>\n            </div>\n          </div>\n          {/* Query Timeout */}\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <InlineField\n                label=\"Query timeout\"\n                labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                tooltip={<>Set the Prometheus query timeout. {docsTip()}</>}\n                interactive={true}\n                disabled={options.readOnly}\n              >\n                <>\n                  <Input\n                    className=\"width-20\"\n                    value={options.jsonData.queryTimeout}\n                    onChange={onChangeHandler('queryTimeout', options, onOptionsChange)}\n                    spellCheck={false}\n                    placeholder=\"60s\"\n                    onBlur={(e) =>\n                      updateValidDuration({\n                        ...validDuration,\n                        queryTimeout: e.currentTarget.value,\n                      })\n                    }\n                    data-testid={selectors.components.DataSource.Prometheus.configPage.queryTimeout}\n                  />\n                  {validateInput(validDuration.queryTimeout, DURATION_REGEX, durationError)}\n                </>\n              </InlineField>\n            </div>\n          </div>\n        </div>\n      </ConfigSubSection>\n\n      <ConfigSubSection title=\"Query editor\" className={styles.container}>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form\">\n            <InlineField\n              label=\"Default editor\"\n              labelWidth={PROM_CONFIG_LABEL_WIDTH}\n              tooltip={<>Set default editor option for all users of this data source. {docsTip()}</>}\n              interactive={true}\n              disabled={options.readOnly}\n            >\n              <Select\n                aria-label={`Default Editor (Code or Builder)`}\n                options={editorOptions}\n                value={\n                  editorOptions.find((o) => o.value === options.jsonData.defaultEditor) ??\n                  editorOptions.find((o) => o.value === QueryEditorMode.Builder)\n                }\n                onChange={onChangeHandler('defaultEditor', options, onOptionsChange)}\n                width={40}\n                data-testid={selectors.components.DataSource.Prometheus.configPage.defaultEditor}\n              />\n            </InlineField>\n          </div>\n          <div className=\"gf-form\">\n            <InlineField\n              labelWidth={PROM_CONFIG_LABEL_WIDTH}\n              label=\"Disable metrics lookup\"\n              tooltip={\n                <>\n                  Checking this option will disable the metrics chooser and metric/label support in the query\n                  field&apos;s autocomplete. This helps if you have performance issues with bigger Prometheus instances.{' '}\n                  {docsTip()}\n                </>\n              }\n              interactive={true}\n              disabled={options.readOnly}\n              className={styles.switchField}\n            >\n              <Switch\n                value={options.jsonData.disableMetricsLookup ?? false}\n                onChange={onUpdateDatasourceJsonDataOptionChecked(props, 'disableMetricsLookup')}\n                id={selectors.components.DataSource.Prometheus.configPage.disableMetricLookup}\n              />\n            </InlineField>\n          </div>\n        </div>\n      </ConfigSubSection>\n\n      <ConfigSubSection title=\"Performance\" className={styles.container}>\n        {!options.jsonData.prometheusType && !options.jsonData.prometheusVersion && options.readOnly && (\n          <div className={styles.versionMargin}>\n            For more information on configuring prometheus type and version in data sources, see the{' '}\n            <a\n              className={styles.textUnderline}\n              href=\"https://grafana.com/docs/grafana/latest/administration/provisioning/\"\n            >\n              provisioning documentation\n            </a>\n            .\n          </div>\n        )}\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <InlineField\n                label=\"Prometheus type\"\n                labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                tooltip={\n                  <>\n                    {/* , and attempt to detect the version */}\n                    Set this to the type of your prometheus database, e.g. Prometheus, Cortex, Mimir or Thanos. Changing\n                    this field will save your current settings. Certain types of Prometheus supports or does not support\n                    various APIs. For example, some types support regex matching for label queries to improve\n                    performance. Some types have an API for metadata. If you set this incorrectly you may experience odd\n                    behavior when querying metrics and labels. Please check your Prometheus documentation to ensure you\n                    enter the correct type. {docsTip()}\n                  </>\n                }\n                interactive={true}\n                disabled={options.readOnly}\n              >\n                <Select\n                  aria-label=\"Prometheus type\"\n                  options={prometheusFlavorSelectItems}\n                  value={prometheusFlavorSelectItems.find((o) => o.value === options.jsonData.prometheusType)}\n                  onChange={onChangeHandler('prometheusType', options, onOptionsChange)}\n                  width={40}\n                  data-testid={selectors.components.DataSource.Prometheus.configPage.prometheusType}\n                />\n              </InlineField>\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            {options.jsonData.prometheusType && (\n              <div className=\"gf-form\">\n                <InlineField\n                  label={`${options.jsonData.prometheusType} version`}\n                  labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                  tooltip={\n                    <>\n                      Use this to set the version of your {options.jsonData.prometheusType} instance if it is not\n                      automatically configured. {docsTip()}\n                    </>\n                  }\n                  interactive={true}\n                  disabled={options.readOnly}\n                >\n                  <Select\n                    aria-label={`${options.jsonData.prometheusType} type`}\n                    options={PromFlavorVersions[options.jsonData.prometheusType]}\n                    value={PromFlavorVersions[options.jsonData.prometheusType]?.find(\n                      (o) => o.value === options.jsonData.prometheusVersion\n                    )}\n                    onChange={onChangeHandler('prometheusVersion', options, onOptionsChange)}\n                    width={40}\n                    data-testid={selectors.components.DataSource.Prometheus.configPage.prometheusVersion}\n                  />\n                </InlineField>\n              </div>\n            )}\n          </div>\n\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-30\">\n              <InlineField\n                label=\"Cache level\"\n                labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                tooltip={\n                  <>\n                    Sets the browser caching level for editor queries. Higher cache settings are recommended for high\n                    cardinality data sources.\n                  </>\n                }\n                interactive={true}\n                disabled={options.readOnly}\n              >\n                <Select\n                  width={40}\n                  onChange={onChangeHandler('cacheLevel', options, onOptionsChange)}\n                  options={cacheValueOptions}\n                  value={\n                    cacheValueOptions.find((o) => o.value === options.jsonData.cacheLevel) ?? PrometheusCacheLevel.Low\n                  }\n                  data-testid={selectors.components.DataSource.Prometheus.configPage.cacheLevel}\n                />\n              </InlineField>\n            </div>\n          </div>\n\n          {config.featureToggles.prometheusCodeModeMetricNamesSearch && (\n            <div className=\"gf-form-inline\">\n              <div className=\"gf-form\">\n                <InlineField\n                  label=\"Metric names suggestion limit\"\n                  labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                  tooltip={\n                    <>\n                      The maximum number of metric names that may appear as autocomplete suggestions in the query\n                      editor&apos;s Code mode.\n                    </>\n                  }\n                  interactive={true}\n                  disabled={options.readOnly}\n                >\n                  <>\n                    <Input\n                      className=\"width-20\"\n                      value={options.jsonData.codeModeMetricNamesSuggestionLimit}\n                      onChange={onChangeHandler('codeModeMetricNamesSuggestionLimit', options, onOptionsChange)}\n                      spellCheck={false}\n                      placeholder={SUGGESTIONS_LIMIT.toString()}\n                      onBlur={(e) =>\n                        updateValidCount({\n                          ...validCount,\n                          codeModeMetricNamesSuggestionLimit: e.currentTarget.value,\n                        })\n                      }\n                      data-testid={\n                        selectors.components.DataSource.Prometheus.configPage.codeModeMetricNamesSuggestionLimit\n                      }\n                    />\n                    {validateInput(\n                      validCount.codeModeMetricNamesSuggestionLimit,\n                      NON_NEGATIVE_INTEGER_REGEX,\n                      countError\n                    )}\n                  </>\n                </InlineField>\n              </div>\n            </div>\n          )}\n\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-30\">\n              <InlineField\n                label=\"Incremental querying (beta)\"\n                labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                tooltip={\n                  <>\n                    This feature will change the default behavior of relative queries to always request fresh data from\n                    the prometheus instance, instead query results will be cached, and only new records are requested.\n                    Turn this on to decrease database and network load.\n                  </>\n                }\n                interactive={true}\n                className={styles.switchField}\n                disabled={options.readOnly}\n              >\n                <Switch\n                  value={options.jsonData.incrementalQuerying ?? false}\n                  onChange={onUpdateDatasourceJsonDataOptionChecked(props, 'incrementalQuerying')}\n                  id={selectors.components.DataSource.Prometheus.configPage.incrementalQuerying}\n                />\n              </InlineField>\n            </div>\n          </div>\n\n          <div className=\"gf-form-inline\">\n            {options.jsonData.incrementalQuerying && (\n              <InlineField\n                label=\"Query overlap window\"\n                labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                tooltip={\n                  <>\n                    Set a duration like 10m or 120s or 0s. Default of 10 minutes. This duration will be added to the\n                    duration of each incremental request.\n                  </>\n                }\n                interactive={true}\n                disabled={options.readOnly}\n              >\n                <>\n                  <Input\n                    onBlur={(e) =>\n                      updateValidDuration({\n                        ...validDuration,\n                        incrementalQueryOverlapWindow: e.currentTarget.value,\n                      })\n                    }\n                    className=\"width-20\"\n                    value={options.jsonData.incrementalQueryOverlapWindow ?? defaultPrometheusQueryOverlapWindow}\n                    onChange={onChangeHandler('incrementalQueryOverlapWindow', options, onOptionsChange)}\n                    spellCheck={false}\n                    data-testid={selectors.components.DataSource.Prometheus.configPage.queryOverlapWindow}\n                  />\n                  {validateInput(validDuration.incrementalQueryOverlapWindow, MULTIPLE_DURATION_REGEX, durationError)}\n                </>\n              </InlineField>\n            )}\n          </div>\n\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-30\">\n              <InlineField\n                label=\"Disable recording rules (beta)\"\n                labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                tooltip={<>This feature will disable recording rules Turn this on to improve dashboard performance</>}\n                interactive={true}\n                className={styles.switchField}\n                disabled={options.readOnly}\n              >\n                <Switch\n                  value={options.jsonData.disableRecordingRules ?? false}\n                  onChange={onUpdateDatasourceJsonDataOptionChecked(props, 'disableRecordingRules')}\n                  id={selectors.components.DataSource.Prometheus.configPage.disableRecordingRules}\n                />\n              </InlineField>\n            </div>\n          </div>\n        </div>\n      </ConfigSubSection>\n\n      <ConfigSubSection title=\"Other\" className={styles.container}>\n        <div className=\"gf-form-group\">\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form max-width-30\">\n              <InlineField\n                label=\"Custom query parameters\"\n                labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                tooltip={\n                  <>\n                    Add custom parameters to the Prometheus query URL. For example timeout, partial_response, dedup, or\n                    max_source_resolution. Multiple parameters should be concatenated together with an ‘&’. {docsTip()}\n                  </>\n                }\n                interactive={true}\n                disabled={options.readOnly}\n              >\n                <Input\n                  className=\"width-20\"\n                  value={options.jsonData.customQueryParameters}\n                  onChange={onChangeHandler('customQueryParameters', options, onOptionsChange)}\n                  spellCheck={false}\n                  placeholder=\"Example: max_source_resolution=5m&timeout=10\"\n                  data-testid={selectors.components.DataSource.Prometheus.configPage.customQueryParameters}\n                />\n              </InlineField>\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            {/* HTTP Method */}\n            <div className=\"gf-form\">\n              <InlineField\n                labelWidth={PROM_CONFIG_LABEL_WIDTH}\n                tooltip={\n                  <>\n                    You can use either POST or GET HTTP method to query your Prometheus data source. POST is the\n                    recommended method as it allows bigger queries. Change this to GET if you have a Prometheus version\n                    older than 2.1 or if POST requests are restricted in your network. {docsTip()}\n                  </>\n                }\n                interactive={true}\n                label=\"HTTP method\"\n                disabled={options.readOnly}\n              >\n                <Select\n                  width={40}\n                  aria-label=\"Select HTTP method\"\n                  options={httpOptions}\n                  value={httpOptions.find((o) => o.value === options.jsonData.httpMethod)}\n                  onChange={onChangeHandler('httpMethod', options, onOptionsChange)}\n                  data-testid={selectors.components.DataSource.Prometheus.configPage.httpMethod}\n                />\n              </InlineField>\n            </div>\n          </div>\n        </div>\n      </ConfigSubSection>\n\n      <ExemplarsSettings\n        options={options.jsonData.exemplarTraceIdDestinations}\n        onChange={(exemplarOptions) =>\n          updateDatasourcePluginJsonDataOption(\n            { onOptionsChange, options },\n            'exemplarTraceIdDestinations',\n            exemplarOptions\n          )\n        }\n        disabled={options.readOnly}\n      />\n    </>\n  );\n};\n\nexport const getValueFromEventItem = (eventItem: SyntheticEvent<HTMLInputElement> | SelectableValue<string>) => {\n  if (!eventItem) {\n    return '';\n  }\n\n  if ('currentTarget' in eventItem) {\n    return eventItem.currentTarget.value;\n  }\n\n  return eventItem.value;\n};\n\nconst onChangeHandler =\n  (key: keyof PromOptions, options: Props['options'], onOptionsChange: Props['onOptionsChange']) =>\n  (eventItem: SyntheticEvent<HTMLInputElement> | SelectableValue<string>) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [key]: getValueFromEventItem(eventItem),\n      },\n    });\n  };\n"],"names":[],"mappings":"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"}