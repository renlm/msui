{"version":3,"file":"types.js","sources":["../../src/types.ts"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/types.ts\nimport { DataSourceJsonData } from '@grafana/data';\nimport { DataQuery } from '@grafana/schema';\n\nimport { Prometheus as GenPromQuery } from './dataquery';\nimport { QueryBuilderLabelFilter, QueryEditorMode } from './querybuilder/shared/types';\n\nexport interface PromQuery extends GenPromQuery, DataQuery {\n  /**\n   * Timezone offset to align start & end time on backend\n   */\n  utcOffsetSec?: number;\n  valueWithRefId?: boolean;\n  showingGraph?: boolean;\n  showingTable?: boolean;\n  hinting?: boolean;\n  interval?: string;\n  // store the metrics explorer additional settings\n  useBackend?: boolean;\n  disableTextWrap?: boolean;\n  fullMetaSearch?: boolean;\n  includeNullMetadata?: boolean;\n}\n\nexport enum PrometheusCacheLevel {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High',\n  None = 'None',\n}\n\nexport enum PromApplication {\n  Cortex = 'Cortex',\n  Mimir = 'Mimir',\n  Prometheus = 'Prometheus',\n  Thanos = 'Thanos',\n}\n\nexport interface PromOptions extends DataSourceJsonData {\n  timeInterval?: string;\n  queryTimeout?: string;\n  httpMethod?: string;\n  customQueryParameters?: string;\n  disableMetricsLookup?: boolean;\n  exemplarTraceIdDestinations?: ExemplarTraceIdDestination[];\n  prometheusType?: PromApplication;\n  prometheusVersion?: string;\n  cacheLevel?: PrometheusCacheLevel;\n  defaultEditor?: QueryEditorMode;\n  incrementalQuerying?: boolean;\n  incrementalQueryOverlapWindow?: string;\n  disableRecordingRules?: boolean;\n  sigV4Auth?: boolean;\n  oauthPassThru?: boolean;\n  codeModeMetricNamesSuggestionLimit?: number;\n}\n\nexport type ExemplarTraceIdDestination = {\n  name: string;\n  url?: string;\n  urlDisplayLabel?: string;\n  datasourceUid?: string;\n};\n\nexport interface PromQueryRequest extends PromQuery {\n  step?: number;\n  requestId?: string;\n  start: number;\n  end: number;\n  headers?: any;\n}\n\nexport interface PromMetricsMetadataItem {\n  type: string;\n  help: string;\n  unit?: string;\n}\n\nexport interface PromMetricsMetadata {\n  [metric: string]: PromMetricsMetadataItem;\n}\n\nexport type PromValue = [number, any];\n\nexport interface PromMetric {\n  __name__?: string;\n\n  [index: string]: any;\n}\n\nexport interface PromBuildInfoResponse {\n  data: {\n    application?: string;\n    version: string;\n    revision: string;\n    features?: {\n      ruler_config_api?: 'true' | 'false';\n      alertmanager_config_api?: 'true' | 'false';\n      query_sharding?: 'true' | 'false';\n      federated_rules?: 'true' | 'false';\n    };\n    [key: string]: unknown;\n  };\n  status: 'success';\n}\n\n/**\n * Auto = query.legendFormat == '__auto'\n * Verbose = query.legendFormat == null/undefined/''\n * Custom query.legendFormat.length > 0 && query.legendFormat !== '__auto'\n */\nexport enum LegendFormatMode {\n  Auto = '__auto',\n  Verbose = '__verbose',\n  Custom = '__custom',\n}\n\nexport enum PromVariableQueryType {\n  LabelNames,\n  LabelValues,\n  MetricNames,\n  VarQueryResult,\n  SeriesQuery,\n  ClassicQuery,\n}\n\nexport interface PromVariableQuery extends DataQuery {\n  query?: string;\n  expr?: string;\n  qryType?: PromVariableQueryType;\n  label?: string;\n  metric?: string;\n  varQuery?: string;\n  seriesQuery?: string;\n  labelFilters?: QueryBuilderLabelFilter[];\n  match?: string;\n  classicQuery?: string;\n}\n\nexport type StandardPromVariableQuery = {\n  query: string;\n  refId: string;\n};\n"],"names":["PrometheusCacheLevel","PromApplication","LegendFormatMode","PromVariableQueryType"],"mappings":"AAwBY,IAAA,oBAAA,qBAAAA,qBAAL,KAAA;AACL,EAAAA,sBAAA,KAAM,CAAA,GAAA,KAAA,CAAA;AACN,EAAAA,sBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,sBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,sBAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AAJG,EAAAA,OAAAA,qBAAAA,CAAAA;AAAA,CAAA,EAAA,oBAAA,IAAA,EAAA,EAAA;AAOA,IAAA,eAAA,qBAAAC,gBAAL,KAAA;AACL,EAAAA,iBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AACT,EAAAA,iBAAA,OAAQ,CAAA,GAAA,OAAA,CAAA;AACR,EAAAA,iBAAA,YAAa,CAAA,GAAA,YAAA,CAAA;AACb,EAAAA,iBAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAJC,EAAAA,OAAAA,gBAAAA,CAAAA;AAAA,CAAA,EAAA,eAAA,IAAA,EAAA,EAAA;AAgFA,IAAA,gBAAA,qBAAAC,iBAAL,KAAA;AACL,EAAAA,kBAAA,MAAO,CAAA,GAAA,QAAA,CAAA;AACP,EAAAA,kBAAA,SAAU,CAAA,GAAA,WAAA,CAAA;AACV,EAAAA,kBAAA,QAAS,CAAA,GAAA,UAAA,CAAA;AAHC,EAAAA,OAAAA,iBAAAA,CAAAA;AAAA,CAAA,EAAA,gBAAA,IAAA,EAAA,EAAA;AAMA,IAAA,qBAAA,qBAAAC,sBAAL,KAAA;AACL,EAAAA,sBAAA,CAAA,sBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA,CAAA;AACA,EAAAA,sBAAA,CAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA,CAAA;AACA,EAAAA,sBAAA,CAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA,CAAA;AACA,EAAAA,sBAAA,CAAA,sBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAA,CAAA;AACA,EAAAA,sBAAA,CAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA,CAAA;AACA,EAAAA,sBAAA,CAAA,sBAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAA,CAAA;AANU,EAAAA,OAAAA,sBAAAA,CAAAA;AAAA,CAAA,EAAA,qBAAA,IAAA,EAAA;;;;"}