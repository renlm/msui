{"version":3,"file":"tracking.js","sources":["../../src/tracking.ts"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/tracking.ts\nimport { CoreApp, DataQueryRequest, DataQueryResponse } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\n\nimport { PromQuery } from './types';\n\nexport function trackQuery(\n  response: DataQueryResponse,\n  request: DataQueryRequest<PromQuery> & { targets: PromQuery[] },\n  startTime: Date\n): void {\n  const { app, targets: queries } = request;\n  // We only track queries run in Explore.\n  // We do not want to track queries from the dashboard, viewing a panel,\n  // cloud-alerting, unified-alerting, scenes and unknown\n  if (app !== CoreApp.Explore) {\n    return;\n  }\n\n  for (const query of queries) {\n    reportInteraction('grafana_prometheus_query_executed', {\n      app,\n      grafana_version: config.buildInfo.version,\n      has_data: response.data.some((frame) => frame.length > 0),\n      has_error: response.error !== undefined,\n      expr: query.expr,\n      format: query.format,\n      instant: query.instant,\n      range: query.range,\n      exemplar: query.exemplar,\n      hinting: query.hinting,\n      interval: query.interval,\n      intervalFactor: query.intervalFactor,\n      utcOffsetSec: query.utcOffsetSec,\n      legend: query.legendFormat,\n      valueWithRefId: query.valueWithRefId,\n      requestId: request.requestId,\n      showingGraph: query.showingGraph,\n      showingTable: query.showingTable,\n      editor_mode: query.editorMode,\n      simultaneously_sent_query_count: queries.length,\n      time_range_from: request?.range?.from?.toISOString(),\n      time_range_to: request?.range?.to?.toISOString(),\n      time_taken: Date.now() - startTime.getTime(),\n    });\n  }\n}\n"],"names":[],"mappings":";;;AAMgB,SAAA,UAAA,CACd,QACA,EAAA,OAAA,EACA,SACM,EAAA;AAVR,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAWE,EAAA,MAAM,EAAE,GAAA,EAAK,OAAS,EAAA,OAAA,EAAY,GAAA,OAAA,CAAA;AAIlC,EAAI,IAAA,GAAA,KAAQ,QAAQ,OAAS,EAAA;AAC3B,IAAA,OAAA;AAAA,GACF;AAEA,EAAA,KAAA,MAAW,SAAS,OAAS,EAAA;AAC3B,IAAA,iBAAA,CAAkB,mCAAqC,EAAA;AAAA,MACrD,GAAA;AAAA,MACA,eAAA,EAAiB,OAAO,SAAU,CAAA,OAAA;AAAA,MAClC,QAAA,EAAU,SAAS,IAAK,CAAA,IAAA,CAAK,CAAC,KAAU,KAAA,KAAA,CAAM,SAAS,CAAC,CAAA;AAAA,MACxD,SAAA,EAAW,SAAS,KAAU,KAAA,KAAA,CAAA;AAAA,MAC9B,MAAM,KAAM,CAAA,IAAA;AAAA,MACZ,QAAQ,KAAM,CAAA,MAAA;AAAA,MACd,SAAS,KAAM,CAAA,OAAA;AAAA,MACf,OAAO,KAAM,CAAA,KAAA;AAAA,MACb,UAAU,KAAM,CAAA,QAAA;AAAA,MAChB,SAAS,KAAM,CAAA,OAAA;AAAA,MACf,UAAU,KAAM,CAAA,QAAA;AAAA,MAChB,gBAAgB,KAAM,CAAA,cAAA;AAAA,MACtB,cAAc,KAAM,CAAA,YAAA;AAAA,MACpB,QAAQ,KAAM,CAAA,YAAA;AAAA,MACd,gBAAgB,KAAM,CAAA,cAAA;AAAA,MACtB,WAAW,OAAQ,CAAA,SAAA;AAAA,MACnB,cAAc,KAAM,CAAA,YAAA;AAAA,MACpB,cAAc,KAAM,CAAA,YAAA;AAAA,MACpB,aAAa,KAAM,CAAA,UAAA;AAAA,MACnB,iCAAiC,OAAQ,CAAA,MAAA;AAAA,MACzC,eAAiB,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,KAAT,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAgB,SAAhB,IAAsB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAA,EAAA;AAAA,MACvC,aAAe,EAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAS,KAAT,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAgB,OAAhB,IAAoB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAA,EAAA;AAAA,MACnC,UAAY,EAAA,IAAA,CAAK,GAAI,EAAA,GAAI,UAAU,OAAQ,EAAA;AAAA,KAC5C,CAAA,CAAA;AAAA,GACH;AACF;;;;"}