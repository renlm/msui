{"version":3,"file":"MonacoQueryFieldWrapper.js","sources":["../../../../src/components/monaco-query-field/MonacoQueryFieldWrapper.tsx"],"sourcesContent":["// Core Grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/components/monaco-query-field/MonacoQueryFieldWrapper.tsx\nimport React, { useRef } from 'react';\n\nimport { MonacoQueryFieldLazy } from './MonacoQueryFieldLazy';\nimport { Props as MonacoProps } from './MonacoQueryFieldProps';\n\ntype Props = Omit<MonacoProps, 'onRunQuery' | 'onBlur'> & {\n  onChange: (query: string) => void;\n  onRunQuery: () => void;\n};\n\nexport const MonacoQueryFieldWrapper = (props: Props) => {\n  const lastRunValueRef = useRef<string | null>(null);\n  const { onRunQuery, onChange, ...rest } = props;\n\n  const handleRunQuery = (value: string) => {\n    lastRunValueRef.current = value;\n    onChange(value);\n    onRunQuery();\n  };\n\n  const handleBlur = (value: string) => {\n    onChange(value);\n  };\n\n  /**\n   * Handles changes without running any queries\n   * @param value\n   */\n  const handleChange = (value: string) => {\n    onChange(value);\n  };\n\n  return <MonacoQueryFieldLazy onChange={handleChange} onRunQuery={handleRunQuery} onBlur={handleBlur} {...rest} />;\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWa,MAAA,uBAAA,GAA0B,CAAC,KAAiB,KAAA;AACvD,EAAM,MAAA,eAAA,GAAkB,OAAsB,IAAI,CAAA,CAAA;AAClD,EAA0C,MAAA,EAAA,GAAA,KAAA,EAAlC,cAAY,QAbtB,EAAA,GAa4C,IAAT,IAAS,GAAA,SAAA,CAAA,EAAA,EAAT,CAAzB,YAAY,EAAA,UAAA,CAAA,CAAA,CAAA;AAEpB,EAAM,MAAA,cAAA,GAAiB,CAAC,KAAkB,KAAA;AACxC,IAAA,eAAA,CAAgB,OAAU,GAAA,KAAA,CAAA;AAC1B,IAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AACd,IAAW,UAAA,EAAA,CAAA;AAAA,GACb,CAAA;AAEA,EAAM,MAAA,UAAA,GAAa,CAAC,KAAkB,KAAA;AACpC,IAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AAAA,GAChB,CAAA;AAMA,EAAM,MAAA,YAAA,GAAe,CAAC,KAAkB,KAAA;AACtC,IAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AAAA,GAChB,CAAA;AAEA,EAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,uCAAqB,QAAU,EAAA,YAAA,EAAc,YAAY,cAAgB,EAAA,MAAA,EAAQ,cAAgB,IAAM,CAAA,CAAA,CAAA;AACjH;;;;"}