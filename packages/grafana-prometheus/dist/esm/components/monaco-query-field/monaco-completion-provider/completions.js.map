{"version":3,"file":"completions.js","sources":["../../../../../src/components/monaco-query-field/monaco-completion-provider/completions.ts"],"sourcesContent":["// Core grafana history https://github.com/grafana/grafana/blob/v11.0.0-preview/public/app/plugins/datasource/prometheus/components/monaco-query-field/monaco-completion-provider/completions.ts\nimport UFuzzy from '@leeoniya/ufuzzy';\n\nimport { config } from '@grafana/runtime';\n\nimport { escapeLabelValueInExactSelector } from '../../../language_utils';\nimport { FUNCTIONS } from '../../../promql';\n\nimport { DataProvider } from './data_provider';\nimport type { Label, Situation } from './situation';\nimport { NeverCaseError } from './util';\n// FIXME: we should not load this from the \"outside\", but we cannot do that while we have the \"old\" query-field too\n\nexport type CompletionType = 'HISTORY' | 'FUNCTION' | 'METRIC_NAME' | 'DURATION' | 'LABEL_NAME' | 'LABEL_VALUE';\n\ntype Completion = {\n  type: CompletionType;\n  label: string;\n  insertText: string;\n  detail?: string;\n  documentation?: string;\n  triggerOnInsert?: boolean;\n};\n\nconst metricNamesSearchClient = new UFuzzy({ intraMode: 1 });\n\n// we order items like: history, functions, metrics\nfunction getAllMetricNamesCompletions(dataProvider: DataProvider): Completion[] {\n  let metricNames = dataProvider.getAllMetricNames();\n\n  if (\n    config.featureToggles.prometheusCodeModeMetricNamesSearch &&\n    metricNames.length > dataProvider.metricNamesSuggestionLimit\n  ) {\n    const { monacoSettings } = dataProvider;\n    monacoSettings.enableAutocompleteSuggestionsUpdate();\n\n    if (monacoSettings.inputInRange) {\n      metricNames =\n        metricNamesSearchClient\n          .filter(metricNames, monacoSettings.inputInRange)\n          ?.slice(0, dataProvider.metricNamesSuggestionLimit)\n          .map((idx) => metricNames[idx]) ?? [];\n    } else {\n      metricNames = metricNames.slice(0, dataProvider.metricNamesSuggestionLimit);\n    }\n  }\n\n  return dataProvider.metricNamesToMetrics(metricNames).map((metric) => ({\n    type: 'METRIC_NAME',\n    label: metric.name,\n    insertText: metric.name,\n    detail: `${metric.name} : ${metric.type}`,\n    documentation: metric.help,\n  }));\n}\n\nconst FUNCTION_COMPLETIONS: Completion[] = FUNCTIONS.map((f) => ({\n  type: 'FUNCTION',\n  label: f.label,\n  insertText: f.insertText ?? '', // i don't know what to do when this is nullish. it should not be.\n  detail: f.detail,\n  documentation: f.documentation,\n}));\n\nasync function getAllFunctionsAndMetricNamesCompletions(dataProvider: DataProvider): Promise<Completion[]> {\n  const metricNames = getAllMetricNamesCompletions(dataProvider);\n\n  return [...FUNCTION_COMPLETIONS, ...metricNames];\n}\n\nconst DURATION_COMPLETIONS: Completion[] = [\n  '$__interval',\n  '$__range',\n  '$__rate_interval',\n  '1m',\n  '5m',\n  '10m',\n  '30m',\n  '1h',\n  '1d',\n].map((text) => ({\n  type: 'DURATION',\n  label: text,\n  insertText: text,\n}));\n\nfunction getAllHistoryCompletions(dataProvider: DataProvider): Completion[] {\n  // function getAllHistoryCompletions(queryHistory: PromHistoryItem[]): Completion[] {\n  // NOTE: the typescript types are wrong. historyItem.query.expr can be undefined\n  const allHistory = dataProvider.getHistory();\n  // FIXME: find a better history-limit\n  return allHistory.slice(0, 10).map((expr) => ({\n    type: 'HISTORY',\n    label: expr,\n    insertText: expr,\n  }));\n}\n\nfunction makeSelector(metricName: string | undefined, labels: Label[]): string {\n  const allLabels = [...labels];\n\n  // we transform the metricName to a label, if it exists\n  if (metricName !== undefined) {\n    allLabels.push({ name: '__name__', value: metricName, op: '=' });\n  }\n\n  const allLabelTexts = allLabels.map(\n    (label) => `${label.name}${label.op}\"${escapeLabelValueInExactSelector(label.value)}\"`\n  );\n\n  return `{${allLabelTexts.join(',')}}`;\n}\n\nasync function getLabelNames(\n  metric: string | undefined,\n  otherLabels: Label[],\n  dataProvider: DataProvider\n): Promise<string[]> {\n  if (metric === undefined && otherLabels.length === 0) {\n    // if there is no filtering, we have to use a special endpoint\n    return Promise.resolve(dataProvider.getAllLabelNames());\n  } else {\n    const selector = makeSelector(metric, otherLabels);\n    return await dataProvider.getSeriesLabels(selector, otherLabels);\n  }\n}\n\nasync function getLabelNamesForCompletions(\n  metric: string | undefined,\n  suffix: string,\n  triggerOnInsert: boolean,\n  otherLabels: Label[],\n  dataProvider: DataProvider\n): Promise<Completion[]> {\n  const labelNames = await getLabelNames(metric, otherLabels, dataProvider);\n  return labelNames.map((text) => ({\n    type: 'LABEL_NAME',\n    label: text,\n    insertText: `${text}${suffix}`,\n    triggerOnInsert,\n  }));\n}\n\nasync function getLabelNamesForSelectorCompletions(\n  metric: string | undefined,\n  otherLabels: Label[],\n  dataProvider: DataProvider\n): Promise<Completion[]> {\n  return getLabelNamesForCompletions(metric, '=', true, otherLabels, dataProvider);\n}\n\nasync function getLabelNamesForByCompletions(\n  metric: string | undefined,\n  otherLabels: Label[],\n  dataProvider: DataProvider\n): Promise<Completion[]> {\n  return getLabelNamesForCompletions(metric, '', false, otherLabels, dataProvider);\n}\n\nasync function getLabelValues(\n  metric: string | undefined,\n  labelName: string,\n  otherLabels: Label[],\n  dataProvider: DataProvider\n): Promise<string[]> {\n  if (metric === undefined && otherLabels.length === 0) {\n    // if there is no filtering, we have to use a special endpoint\n    return dataProvider.getLabelValues(labelName);\n  } else {\n    const selector = makeSelector(metric, otherLabels);\n    return await dataProvider.getSeriesValues(labelName, selector);\n  }\n}\n\nasync function getLabelValuesForMetricCompletions(\n  metric: string | undefined,\n  labelName: string,\n  betweenQuotes: boolean,\n  otherLabels: Label[],\n  dataProvider: DataProvider\n): Promise<Completion[]> {\n  const values = await getLabelValues(metric, labelName, otherLabels, dataProvider);\n  return values.map((text) => ({\n    type: 'LABEL_VALUE',\n    label: text,\n    insertText: betweenQuotes ? text : `\"${text}\"`, // FIXME: escaping strange characters?\n  }));\n}\n\nexport function getCompletions(situation: Situation, dataProvider: DataProvider): Promise<Completion[]> {\n  switch (situation.type) {\n    case 'IN_DURATION':\n      return Promise.resolve(DURATION_COMPLETIONS);\n    case 'IN_FUNCTION':\n      return getAllFunctionsAndMetricNamesCompletions(dataProvider);\n    case 'AT_ROOT': {\n      return getAllFunctionsAndMetricNamesCompletions(dataProvider);\n    }\n    case 'EMPTY': {\n      const metricNames = getAllMetricNamesCompletions(dataProvider);\n      const historyCompletions = getAllHistoryCompletions(dataProvider);\n      return Promise.resolve([...historyCompletions, ...FUNCTION_COMPLETIONS, ...metricNames]);\n    }\n    case 'IN_LABEL_SELECTOR_NO_LABEL_NAME':\n      return getLabelNamesForSelectorCompletions(situation.metricName, situation.otherLabels, dataProvider);\n    case 'IN_GROUPING':\n      return getLabelNamesForByCompletions(situation.metricName, situation.otherLabels, dataProvider);\n    case 'IN_LABEL_SELECTOR_WITH_LABEL_NAME':\n      return getLabelValuesForMetricCompletions(\n        situation.metricName,\n        situation.labelName,\n        situation.betweenQuotes,\n        situation.otherLabels,\n        dataProvider\n      );\n    default:\n      throw new NeverCaseError(situation);\n  }\n}\n"],"names":["UFuzzy"],"mappings":"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"}