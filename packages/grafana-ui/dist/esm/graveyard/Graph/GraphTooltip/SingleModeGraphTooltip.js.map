{"version":3,"file":"SingleModeGraphTooltip.js","sources":["../../../../../src/graveyard/Graph/GraphTooltip/SingleModeGraphTooltip.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  getValueFromDimension,\n  getColumnFromDimension,\n  formattedValueToString,\n  getFieldDisplayName,\n} from '@grafana/data';\n\nimport { SeriesTable } from '../../../components/VizTooltip';\n\nimport { GraphTooltipContentProps } from './types';\n\n/** @deprecated */\nexport const SingleModeGraphTooltip = ({ dimensions, activeDimensions, timeZone }: GraphTooltipContentProps) => {\n  // not hovering over a point, skip rendering\n  if (\n    activeDimensions.yAxis === null ||\n    activeDimensions.yAxis[1] === undefined ||\n    activeDimensions.xAxis === null ||\n    activeDimensions.xAxis[1] === undefined\n  ) {\n    return null;\n  }\n  const time = getValueFromDimension(dimensions.xAxis, activeDimensions.xAxis[0], activeDimensions.xAxis[1]);\n  const timeField = getColumnFromDimension(dimensions.xAxis, activeDimensions.xAxis[0]);\n  const processedTime = timeField.display ? formattedValueToString(timeField.display(time)) : time;\n\n  const valueField = getColumnFromDimension(dimensions.yAxis, activeDimensions.yAxis[0]);\n  const value = getValueFromDimension(dimensions.yAxis, activeDimensions.yAxis[0], activeDimensions.yAxis[1]);\n  const display = valueField.display!;\n  const disp = display(value);\n\n  return (\n    <SeriesTable\n      series={[\n        {\n          color: disp.color,\n          label: getFieldDisplayName(valueField),\n          value: formattedValueToString(disp),\n        },\n      ]}\n      timestamp={processedTime}\n    />\n  );\n};\n\nSingleModeGraphTooltip.displayName = 'SingleModeGraphTooltip';\n"],"names":["React"],"mappings":";;;;;;AAcO,MAAM,yBAAyB,CAAC,EAAE,UAAY,EAAA,gBAAA,EAAkB,UAAyC,KAAA;AAE9G,EAAA,IACE,gBAAiB,CAAA,KAAA,KAAU,IAC3B,IAAA,gBAAA,CAAiB,MAAM,CAAC,CAAA,KAAM,KAC9B,CAAA,IAAA,gBAAA,CAAiB,UAAU,IAC3B,IAAA,gBAAA,CAAiB,KAAM,CAAA,CAAC,MAAM,KAC9B,CAAA,EAAA;AACA,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AACA,EAAM,MAAA,IAAA,GAAO,qBAAsB,CAAA,UAAA,CAAW,KAAO,EAAA,gBAAA,CAAiB,KAAM,CAAA,CAAC,CAAG,EAAA,gBAAA,CAAiB,KAAM,CAAA,CAAC,CAAC,CAAA,CAAA;AACzG,EAAA,MAAM,YAAY,sBAAuB,CAAA,UAAA,CAAW,OAAO,gBAAiB,CAAA,KAAA,CAAM,CAAC,CAAC,CAAA,CAAA;AACpF,EAAM,MAAA,aAAA,GAAgB,UAAU,OAAU,GAAA,sBAAA,CAAuB,UAAU,OAAQ,CAAA,IAAI,CAAC,CAAI,GAAA,IAAA,CAAA;AAE5F,EAAA,MAAM,aAAa,sBAAuB,CAAA,UAAA,CAAW,OAAO,gBAAiB,CAAA,KAAA,CAAM,CAAC,CAAC,CAAA,CAAA;AACrF,EAAM,MAAA,KAAA,GAAQ,qBAAsB,CAAA,UAAA,CAAW,KAAO,EAAA,gBAAA,CAAiB,KAAM,CAAA,CAAC,CAAG,EAAA,gBAAA,CAAiB,KAAM,CAAA,CAAC,CAAC,CAAA,CAAA;AAC1G,EAAA,MAAM,UAAU,UAAW,CAAA,OAAA,CAAA;AAC3B,EAAM,MAAA,IAAA,GAAO,QAAQ,KAAK,CAAA,CAAA;AAE1B,EACE,uBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,MAAQ,EAAA;AAAA,QACN;AAAA,UACE,OAAO,IAAK,CAAA,KAAA;AAAA,UACZ,KAAA,EAAO,oBAAoB,UAAU,CAAA;AAAA,UACrC,KAAA,EAAO,uBAAuB,IAAI,CAAA;AAAA,SACpC;AAAA,OACF;AAAA,MACA,SAAW,EAAA,aAAA;AAAA,KAAA;AAAA,GACb,CAAA;AAEJ,EAAA;AAEA,sBAAA,CAAuB,WAAc,GAAA,wBAAA;;;;"}