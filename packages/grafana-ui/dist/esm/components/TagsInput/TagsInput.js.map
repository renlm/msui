{"version":3,"file":"TagsInput.js","sources":["../../../../src/components/TagsInput/TagsInput.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes/ThemeContext';\nimport { Button } from '../Button';\nimport { Input } from '../Input/Input';\n\nimport { TagItem } from './TagItem';\n\nexport interface Props {\n  placeholder?: string;\n  /** Array of selected tags */\n  tags?: string[];\n  onChange: (tags: string[]) => void;\n  width?: number;\n  id?: string;\n  className?: string;\n  /** Toggle disabled state */\n  disabled?: boolean;\n  /** Enable adding new tags when input loses focus */\n  addOnBlur?: boolean;\n  /** Toggle invalid state */\n  invalid?: boolean;\n}\n\nexport const TagsInput = ({\n  placeholder = 'New tag (enter key to add)',\n  tags = [],\n  onChange,\n  width,\n  className,\n  disabled,\n  addOnBlur,\n  invalid,\n  id,\n}: Props) => {\n  const [newTagName, setNewTagName] = useState('');\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n\n  const onNameChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTagName(event.target.value);\n  }, []);\n\n  const onRemove = (tagToRemove: string) => {\n    onChange(tags.filter((x) => x !== tagToRemove));\n  };\n\n  const onAdd = (event?: React.MouseEvent | React.KeyboardEvent) => {\n    event?.preventDefault();\n    if (!tags.includes(newTagName)) {\n      onChange(tags.concat(newTagName));\n    }\n    setNewTagName('');\n  };\n\n  const onBlur = () => {\n    if (addOnBlur && newTagName) {\n      onAdd();\n    }\n  };\n\n  const onKeyboardAdd = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter' && newTagName !== '') {\n      onAdd(event);\n    }\n  };\n\n  return (\n    <div className={cx(styles.wrapper, className, width ? css({ width: theme.spacing(width) }) : '')}>\n      <Input\n        id={id}\n        disabled={disabled}\n        placeholder={placeholder}\n        onChange={onNameChange}\n        value={newTagName}\n        onKeyDown={onKeyboardAdd}\n        onBlur={onBlur}\n        invalid={invalid}\n        suffix={\n          <Button\n            fill=\"text\"\n            className={styles.addButtonStyle}\n            onClick={onAdd}\n            size=\"md\"\n            disabled={newTagName.length <= 0}\n          >\n            Add\n          </Button>\n        }\n      />\n      {tags?.length > 0 && (\n        <ul className={styles.tags}>\n          {tags.map((tag) => (\n            <TagItem key={tag} name={tag} onRemove={onRemove} disabled={disabled} />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css({\n    minHeight: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(1),\n    flexWrap: 'wrap',\n  }),\n  tags: css({\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexWrap: 'wrap',\n    gap: theme.spacing(0.5),\n  }),\n  addButtonStyle: css({\n    margin: `0 -${theme.spacing(1)}`,\n  }),\n});\n"],"names":["React"],"mappings":"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"}