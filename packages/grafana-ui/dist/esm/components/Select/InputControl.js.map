{"version":3,"file":"InputControl.js","sources":["../../../../src/components/Select/InputControl.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { inputPadding } from '../Forms/commonStyles';\nimport { getInputStyles } from '../Input/Input';\n\ninterface InputControlProps {\n  /** Show an icon as a prefix in the input */\n  prefix?: JSX.Element | string | null;\n  focused: boolean;\n  invalid: boolean;\n  disabled: boolean;\n  innerProps: JSX.IntrinsicElements['div'];\n}\n\nexport const InputControl = React.forwardRef<HTMLDivElement, React.PropsWithChildren<InputControlProps>>(\n  function InputControl({ focused, invalid, disabled, children, innerProps, prefix, ...otherProps }, ref) {\n    const styles = useStyles2(getInputControlStyles, invalid, !!prefix);\n\n    return (\n      <div className={styles.input} {...innerProps} ref={ref}>\n        {prefix && <div className={cx(styles.prefix)}>{prefix}</div>}\n        {children}\n      </div>\n    );\n  }\n);\n\nconst getInputControlStyles = (theme: GrafanaTheme2, invalid: boolean, withPrefix: boolean) => {\n  const styles = getInputStyles({ theme, invalid });\n\n  return {\n    input: cx(\n      inputPadding(theme),\n      css({\n        width: '100%',\n        maxWidth: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        paddingRight: 0,\n        position: 'relative',\n        boxSizing: 'border-box',\n      }),\n      withPrefix &&\n        css({\n          paddingLeft: 0,\n        })\n    ),\n    prefix: cx(\n      styles.prefix,\n      css({\n        position: 'relative',\n      })\n    ),\n  };\n};\n"],"names":["React","InputControl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBO,MAAM,eAAeA,cAAM,CAAA,UAAA;AAAA,EAChC,SAASC,aAAa,CAAA,EAAA,EAA6E,GAAK,EAAA;AAAlF,IAAA,IAAA,EAAA,GAAA,EAAA,CAAA,CAAE,EAAS,OAAA,EAAA,OAAA,EAAS,QAAU,EAAA,QAAA,EAAU,YAAY,MAnB5E,EAAA,GAmBwB,EAA+D,CAAA,CAAA,SAAA,CAA/D,IAA+D,CAA7D,SAAA,EAAS,SAAS,EAAA,UAAA,EAAU,YAAU,YAAY,EAAA,QAAA,CAAA,EAAA;AACxE,IAAA,MAAM,SAAS,UAAW,CAAA,qBAAA,EAAuB,OAAS,EAAA,CAAC,CAAC,MAAM,CAAA,CAAA;AAElE,IAAA,oDACG,KAAI,EAAA,aAAA,CAAA,cAAA,CAAA,EAAA,SAAA,EAAW,OAAO,KAAW,EAAA,EAAA,UAAA,CAAA,EAAjC,EAA6C,GAC3C,EAAA,CAAA,EAAA,MAAA,oBAAWD,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAI,WAAW,EAAG,CAAA,MAAA,CAAO,MAAM,CAAI,EAAA,EAAA,MAAO,GACrD,QACH,CAAA,CAAA;AAAA,GAEJ;AACF,EAAA;AAEA,MAAM,qBAAwB,GAAA,CAAC,KAAsB,EAAA,OAAA,EAAkB,UAAwB,KAAA;AAC7F,EAAA,MAAM,MAAS,GAAA,cAAA,CAAe,EAAE,KAAA,EAAO,SAAS,CAAA,CAAA;AAEhD,EAAO,OAAA;AAAA,IACL,KAAO,EAAA,EAAA;AAAA,MACL,aAAa,KAAK,CAAA;AAAA,MAClB,GAAI,CAAA;AAAA,QACF,KAAO,EAAA,MAAA;AAAA,QACP,QAAU,EAAA,MAAA;AAAA,QACV,OAAS,EAAA,MAAA;AAAA,QACT,aAAe,EAAA,KAAA;AAAA,QACf,UAAY,EAAA,QAAA;AAAA,QACZ,QAAU,EAAA,MAAA;AAAA,QACV,cAAgB,EAAA,eAAA;AAAA,QAChB,YAAc,EAAA,CAAA;AAAA,QACd,QAAU,EAAA,UAAA;AAAA,QACV,SAAW,EAAA,YAAA;AAAA,OACZ,CAAA;AAAA,MACD,cACE,GAAI,CAAA;AAAA,QACF,WAAa,EAAA,CAAA;AAAA,OACd,CAAA;AAAA,KACL;AAAA,IACA,MAAQ,EAAA,EAAA;AAAA,MACN,MAAO,CAAA,MAAA;AAAA,MACP,GAAI,CAAA;AAAA,QACF,QAAU,EAAA,UAAA;AAAA,OACX,CAAA;AAAA,KACH;AAAA,GACF,CAAA;AACF,CAAA;;;;"}