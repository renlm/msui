{"version":3,"file":"Card.js","sources":["../../../../src/components/Card/Card.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { memo, cloneElement, FC, useMemo, useContext, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes';\nimport { getFocusStyles } from '../../themes/mixins';\n\nimport { CardContainer, CardContainerProps, getCardContainerStyles } from './CardContainer';\n\n/**\n * @public\n */\nexport interface Props extends Omit<CardContainerProps, 'disableEvents' | 'disableHover'> {\n  /** Indicates if the card and all its actions can be interacted with */\n  disabled?: boolean;\n  /** Link to redirect to on card click. If provided, the Card inner content will be rendered inside `a` */\n  href?: string;\n  /** On click handler for the Card */\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\n  /** @deprecated Use `Card.Heading` instead */\n  heading?: ReactNode;\n  /** @deprecated Use `Card.Description` instead */\n  description?: string;\n  isSelected?: boolean;\n  /** If true, the padding of the Card will be smaller */\n  isCompact?: boolean;\n}\n\nexport interface CardInterface extends FC<Props> {\n  Heading: typeof Heading;\n  Tags: typeof Tags;\n  Figure: typeof Figure;\n  Meta: typeof Meta;\n  Actions: typeof Actions;\n  SecondaryActions: typeof SecondaryActions;\n  Description: typeof Description;\n}\n\nconst CardContext = React.createContext<{\n  href?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\n  disabled?: boolean;\n  isSelected?: boolean;\n} | null>(null);\n\n/**\n * Generic card component\n *\n * @public\n */\nexport const Card: CardInterface = ({\n  disabled,\n  href,\n  onClick,\n  children,\n  isSelected,\n  isCompact,\n  className,\n  ...htmlProps\n}) => {\n  const hasHeadingComponent = useMemo(\n    () => React.Children.toArray(children).some((c) => React.isValidElement(c) && c.type === Heading),\n    [children]\n  );\n\n  const disableHover = disabled || (!onClick && !href);\n  const onCardClick = onClick && !disabled ? onClick : undefined;\n  const styles = useStyles2(getCardContainerStyles, disabled, disableHover, isSelected, isCompact);\n\n  return (\n    <CardContainer\n      disableEvents={disabled}\n      disableHover={disableHover}\n      isSelected={isSelected}\n      className={cx(styles.container, className)}\n      {...htmlProps}\n    >\n      <CardContext.Provider value={{ href, onClick: onCardClick, disabled, isSelected }}>\n        {!hasHeadingComponent && <Heading />}\n        {children}\n      </CardContext.Provider>\n    </CardContainer>\n  );\n};\n\ninterface ChildProps {\n  className?: string;\n  disabled?: boolean;\n  children?: React.ReactNode;\n}\n\n/** Main heading for the card */\nconst Heading = ({ children, className, 'aria-label': ariaLabel }: ChildProps & { 'aria-label'?: string }) => {\n  const context = useContext(CardContext);\n  const styles = useStyles2(getHeadingStyles);\n\n  const { href, onClick, isSelected } = context ?? {\n    href: undefined,\n    onClick: undefined,\n    isSelected: undefined,\n  };\n\n  return (\n    <h2 className={cx(styles.heading, className)}>\n      {href ? (\n        <a href={href} className={styles.linkHack} aria-label={ariaLabel} onClick={onClick}>\n          {children}\n        </a>\n      ) : onClick ? (\n        <button onClick={onClick} className={styles.linkHack} aria-label={ariaLabel} type=\"button\">\n          {children}\n        </button>\n      ) : (\n        <>{children}</>\n      )}\n      {/* Input must be readonly because we are providing a value for the checked prop with no onChange handler */}\n      {isSelected !== undefined && <input aria-label=\"option\" type=\"radio\" checked={isSelected} readOnly />}\n    </h2>\n  );\n};\nHeading.displayName = 'Heading';\n\nconst getHeadingStyles = (theme: GrafanaTheme2) => ({\n  heading: css({\n    gridArea: 'Heading',\n    justifySelf: 'start',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 0,\n    fontSize: theme.typography.size.md,\n    letterSpacing: 'inherit',\n    lineHeight: theme.typography.body.lineHeight,\n    color: theme.colors.text.primary,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& input[readonly]': {\n      cursor: 'inherit',\n    },\n  }),\n  linkHack: css({\n    all: 'unset',\n    '&::after': {\n      position: 'absolute',\n      content: '\"\"',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      borderRadius: theme.shape.radius.default,\n    },\n\n    '&:focus-visible': {\n      outline: 'none',\n      outlineOffset: 0,\n      boxShadow: 'none',\n\n      '&::after': {\n        ...getFocusStyles(theme),\n        zIndex: 1,\n      },\n    },\n  }),\n});\n\nconst Tags = ({ children, className }: ChildProps) => {\n  const styles = useStyles2(getTagStyles);\n  return <div className={cx(styles.tagList, className)}>{children}</div>;\n};\nTags.displayName = 'Tags';\n\nconst getTagStyles = (theme: GrafanaTheme2) => ({\n  tagList: css({\n    position: 'relative',\n    gridArea: 'Tags',\n    alignSelf: 'center',\n  }),\n});\n\n/** Card description text */\nconst Description = ({ children, className }: ChildProps) => {\n  const styles = useStyles2(getDescriptionStyles);\n  return <p className={cx(styles.description, className)}>{children}</p>;\n};\nDescription.displayName = 'Description';\n\nconst getDescriptionStyles = (theme: GrafanaTheme2) => ({\n  description: css({\n    width: '100%',\n    gridArea: 'Description',\n    margin: theme.spacing(1, 0, 0),\n    color: theme.colors.text.secondary,\n    lineHeight: theme.typography.body.lineHeight,\n  }),\n});\n\nconst Figure = ({ children, align = 'start', className }: ChildProps & { align?: 'start' | 'center' }) => {\n  const styles = useStyles2(getFigureStyles);\n  return (\n    <div\n      className={cx(\n        styles.media,\n        className,\n        css({\n          alignSelf: align,\n        })\n      )}\n    >\n      {children}\n    </div>\n  );\n};\nFigure.displayName = 'Figure';\n\nconst getFigureStyles = (theme: GrafanaTheme2) => ({\n  media: css({\n    position: 'relative',\n    gridArea: 'Figure',\n\n    marginRight: theme.spacing(2),\n    width: '40px',\n\n    '> img': {\n      width: '100%',\n    },\n\n    '&:empty': {\n      display: 'none',\n    },\n  }),\n});\n\nconst Meta = memo(({ children, className, separator = '|' }: ChildProps & { separator?: string }) => {\n  const styles = useStyles2(getMetaStyles);\n  let meta = children;\n\n  const filtered = React.Children.toArray(children).filter(Boolean);\n  if (!filtered.length) {\n    return null;\n  }\n  meta = filtered.map((element, i) => (\n    <div key={`element_${i}`} className={styles.metadataItem}>\n      {element}\n    </div>\n  ));\n  // Join meta data elements by separator\n  if (filtered.length > 1 && separator) {\n    meta = filtered.reduce((prev, curr, i) => [\n      prev,\n      <span key={`separator_${i}`} className={styles.separator}>\n        {separator}\n      </span>,\n      curr,\n    ]);\n  }\n  return <div className={cx(styles.metadata, className)}>{meta}</div>;\n});\nMeta.displayName = 'Meta';\n\nconst getMetaStyles = (theme: GrafanaTheme2) => ({\n  metadata: css({\n    gridArea: 'Meta',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    fontSize: theme.typography.size.sm,\n    color: theme.colors.text.secondary,\n    margin: theme.spacing(0.5, 0, 0),\n    lineHeight: theme.typography.bodySmall.lineHeight,\n    overflowWrap: 'anywhere',\n  }),\n  metadataItem: css({\n    // Needed to allow for clickable children in metadata\n    zIndex: 0,\n  }),\n  separator: css({\n    margin: `0 ${theme.spacing(1)}`,\n  }),\n});\n\ninterface ActionsProps extends ChildProps {\n  children?: React.ReactNode;\n  variant?: 'primary' | 'secondary';\n}\n\nconst BaseActions = ({ children, disabled, variant, className }: ActionsProps) => {\n  const styles = useStyles2(getActionStyles);\n  const context = useContext(CardContext);\n  const isDisabled = context?.disabled || disabled;\n\n  const css = variant === 'primary' ? styles.actions : styles.secondaryActions;\n  return (\n    <div className={cx(css, className)}>\n      {React.Children.map(children, (child) => {\n        return React.isValidElement(child) ? cloneElement(child, { disabled: isDisabled, ...child.props }) : null;\n      })}\n    </div>\n  );\n};\n\nconst getActionStyles = (theme: GrafanaTheme2) => ({\n  actions: css({\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: theme.spacing(1),\n    gridArea: 'Actions',\n    marginTop: theme.spacing(2),\n  }),\n  secondaryActions: css({\n    alignSelf: 'center',\n    color: theme.colors.text.secondary,\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: theme.spacing(1),\n    gridArea: 'Secondary',\n    marginTop: theme.spacing(2),\n  }),\n});\n\nconst Actions = ({ children, disabled, className }: ChildProps) => {\n  return (\n    <BaseActions variant=\"primary\" disabled={disabled} className={className}>\n      {children}\n    </BaseActions>\n  );\n};\nActions.displayName = 'Actions';\n\nconst SecondaryActions = ({ children, disabled, className }: ChildProps) => {\n  return (\n    <BaseActions variant=\"secondary\" disabled={disabled} className={className}>\n      {children}\n    </BaseActions>\n  );\n};\nSecondaryActions.displayName = 'SecondaryActions';\n\n/**\n * @public\n * @deprecated Use `className` on respective components to modify styles\n */\nexport const getCardStyles = (theme: GrafanaTheme2) => {\n  return {\n    inner: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '100%',\n      flexWrap: 'wrap',\n    }),\n    ...getHeadingStyles(theme),\n    ...getMetaStyles(theme),\n    ...getDescriptionStyles(theme),\n    ...getFigureStyles(theme),\n    ...getActionStyles(theme),\n    ...getTagStyles(theme),\n  };\n};\n\nCard.Heading = Heading;\nCard.Tags = Tags;\nCard.Figure = Figure;\nCard.Meta = Meta;\nCard.Actions = Actions;\nCard.SecondaryActions = SecondaryActions;\nCard.Description = Description;\n"],"names":["React","css"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,MAAM,WAAA,GAAcA,cAAM,CAAA,aAAA,CAKhB,IAAI,CAAA,CAAA;AAOD,MAAA,IAAA,GAAsB,CAAC,EAS9B,KAAA;AAT8B,EAClC,IAAA,EAAA,GAAA,EAAA,EAAA;AAAA,IAAA,QAAA;AAAA,IACA,IAAA;AAAA,IACA,OAAA;AAAA,IACA,QAAA;AAAA,IACA,UAAA;AAAA,IACA,SAAA;AAAA,IACA,SAAA;AAAA,GA1DF,GAmDoC,EAQ/B,EAAA,SAAA,GAAA,SAAA,CAR+B,EAQ/B,EAAA;AAAA,IAPH,UAAA;AAAA,IACA,MAAA;AAAA,IACA,SAAA;AAAA,IACA,UAAA;AAAA,IACA,YAAA;AAAA,IACA,WAAA;AAAA,IACA,WAAA;AAAA,GAAA,CAAA,CAAA;AAGA,EAAA,MAAM,mBAAsB,GAAA,OAAA;AAAA,IAC1B,MAAMA,cAAA,CAAM,QAAS,CAAA,OAAA,CAAQ,QAAQ,CAAE,CAAA,IAAA,CAAK,CAAC,CAAA,KAAMA,eAAM,cAAe,CAAA,CAAC,CAAK,IAAA,CAAA,CAAE,SAAS,OAAO,CAAA;AAAA,IAChG,CAAC,QAAQ,CAAA;AAAA,GACX,CAAA;AAEA,EAAA,MAAM,YAAe,GAAA,QAAA,IAAa,CAAC,OAAA,IAAW,CAAC,IAAA,CAAA;AAC/C,EAAA,MAAM,WAAc,GAAA,OAAA,IAAW,CAAC,QAAA,GAAW,OAAU,GAAA,KAAA,CAAA,CAAA;AACrD,EAAA,MAAM,SAAS,UAAW,CAAA,sBAAA,EAAwB,QAAU,EAAA,YAAA,EAAc,YAAY,SAAS,CAAA,CAAA;AAE/F,EACE,uBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,aAAA;AAAA,IAAA,cAAA,CAAA;AAAA,MACC,aAAe,EAAA,QAAA;AAAA,MACf,YAAA;AAAA,MACA,UAAA;AAAA,MACA,SAAW,EAAA,EAAA,CAAG,MAAO,CAAA,SAAA,EAAW,SAAS,CAAA;AAAA,KACrC,EAAA,SAAA,CAAA;AAAA,iDAEH,WAAY,CAAA,QAAA,EAAZ,EAAqB,KAAA,EAAO,EAAE,IAAM,EAAA,OAAA,EAAS,WAAa,EAAA,QAAA,EAAU,YAClE,EAAA,EAAA,CAAC,uCAAwBA,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAQ,GACjC,QACH,CAAA;AAAA,GACF,CAAA;AAEJ,EAAA;AASA,MAAM,UAAU,CAAC,EAAE,UAAU,SAAW,EAAA,YAAA,EAAc,WAAwD,KAAA;AAC5G,EAAM,MAAA,OAAA,GAAU,WAAW,WAAW,CAAA,CAAA;AACtC,EAAM,MAAA,MAAA,GAAS,WAAW,gBAAgB,CAAA,CAAA;AAE1C,EAAA,MAAM,EAAE,IAAA,EAAM,OAAS,EAAA,UAAA,KAAe,OAAW,IAAA,IAAA,GAAA,OAAA,GAAA;AAAA,IAC/C,IAAM,EAAA,KAAA,CAAA;AAAA,IACN,OAAS,EAAA,KAAA,CAAA;AAAA,IACT,UAAY,EAAA,KAAA,CAAA;AAAA,GACd,CAAA;AAEA,EACE,uBAAAA,cAAA,CAAA,aAAA,CAAC,QAAG,SAAW,EAAA,EAAA,CAAG,OAAO,OAAS,EAAA,SAAS,CACxC,EAAA,EAAA,IAAA,mBACEA,cAAA,CAAA,aAAA,CAAA,GAAA,EAAA,EAAE,MAAY,SAAW,EAAA,MAAA,CAAO,UAAU,YAAY,EAAA,SAAA,EAAW,WAC/D,QACH,CAAA,GACE,OACF,mBAAAA,cAAA,CAAA,aAAA,CAAC,QAAO,EAAA,EAAA,OAAA,EAAkB,WAAW,MAAO,CAAA,QAAA,EAAU,cAAY,SAAW,EAAA,IAAA,EAAK,YAC/E,QACH,CAAA,mBAEGA,cAAA,CAAA,aAAA,CAAAA,cAAA,CAAA,QAAA,EAAA,IAAA,EAAA,QAAS,CAGb,EAAA,UAAA,KAAe,0BAAcA,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA,EAAM,cAAW,QAAS,EAAA,IAAA,EAAK,SAAQ,OAAS,EAAA,UAAA,EAAY,QAAQ,EAAA,IAAA,EAAC,CACrG,CAAA,CAAA;AAEJ,CAAA,CAAA;AACA,OAAA,CAAQ,WAAc,GAAA,SAAA,CAAA;AAEtB,MAAM,gBAAA,GAAmB,CAAC,KAA0B,MAAA;AAAA,EAClD,SAAS,GAAI,CAAA;AAAA,IACX,QAAU,EAAA,SAAA;AAAA,IACV,WAAa,EAAA,OAAA;AAAA,IACb,OAAS,EAAA,MAAA;AAAA,IACT,cAAgB,EAAA,eAAA;AAAA,IAChB,UAAY,EAAA,QAAA;AAAA,IACZ,KAAO,EAAA,MAAA;AAAA,IACP,YAAc,EAAA,CAAA;AAAA,IACd,QAAA,EAAU,KAAM,CAAA,UAAA,CAAW,IAAK,CAAA,EAAA;AAAA,IAChC,aAAe,EAAA,SAAA;AAAA,IACf,UAAA,EAAY,KAAM,CAAA,UAAA,CAAW,IAAK,CAAA,UAAA;AAAA,IAClC,KAAA,EAAO,KAAM,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA;AAAA,IACzB,UAAA,EAAY,MAAM,UAAW,CAAA,gBAAA;AAAA,IAC7B,mBAAqB,EAAA;AAAA,MACnB,MAAQ,EAAA,SAAA;AAAA,KACV;AAAA,GACD,CAAA;AAAA,EACD,UAAU,GAAI,CAAA;AAAA,IACZ,GAAK,EAAA,OAAA;AAAA,IACL,UAAY,EAAA;AAAA,MACV,QAAU,EAAA,UAAA;AAAA,MACV,OAAS,EAAA,IAAA;AAAA,MACT,GAAK,EAAA,CAAA;AAAA,MACL,MAAQ,EAAA,CAAA;AAAA,MACR,IAAM,EAAA,CAAA;AAAA,MACN,KAAO,EAAA,CAAA;AAAA,MACP,YAAA,EAAc,KAAM,CAAA,KAAA,CAAM,MAAO,CAAA,OAAA;AAAA,KACnC;AAAA,IAEA,iBAAmB,EAAA;AAAA,MACjB,OAAS,EAAA,MAAA;AAAA,MACT,aAAe,EAAA,CAAA;AAAA,MACf,SAAW,EAAA,MAAA;AAAA,MAEX,UAAY,EAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EACP,cAAe,CAAA,KAAK,CADb,CAAA,EAAA;AAAA,QAEV,MAAQ,EAAA,CAAA;AAAA,OACV,CAAA;AAAA,KACF;AAAA,GACD,CAAA;AACH,CAAA,CAAA,CAAA;AAEA,MAAM,IAAO,GAAA,CAAC,EAAE,QAAA,EAAU,WAA4B,KAAA;AACpD,EAAM,MAAA,MAAA,GAAS,WAAW,YAAY,CAAA,CAAA;AACtC,EAAO,uBAAAA,cAAA,CAAA,aAAA,CAAC,SAAI,SAAW,EAAA,EAAA,CAAG,OAAO,OAAS,EAAA,SAAS,KAAI,QAAS,CAAA,CAAA;AAClE,CAAA,CAAA;AACA,IAAA,CAAK,WAAc,GAAA,MAAA,CAAA;AAEnB,MAAM,YAAA,GAAe,CAAC,KAA0B,MAAA;AAAA,EAC9C,SAAS,GAAI,CAAA;AAAA,IACX,QAAU,EAAA,UAAA;AAAA,IACV,QAAU,EAAA,MAAA;AAAA,IACV,SAAW,EAAA,QAAA;AAAA,GACZ,CAAA;AACH,CAAA,CAAA,CAAA;AAGA,MAAM,WAAc,GAAA,CAAC,EAAE,QAAA,EAAU,WAA4B,KAAA;AAC3D,EAAM,MAAA,MAAA,GAAS,WAAW,oBAAoB,CAAA,CAAA;AAC9C,EAAO,uBAAAA,cAAA,CAAA,aAAA,CAAC,OAAE,SAAW,EAAA,EAAA,CAAG,OAAO,WAAa,EAAA,SAAS,KAAI,QAAS,CAAA,CAAA;AACpE,CAAA,CAAA;AACA,WAAA,CAAY,WAAc,GAAA,aAAA,CAAA;AAE1B,MAAM,oBAAA,GAAuB,CAAC,KAA0B,MAAA;AAAA,EACtD,aAAa,GAAI,CAAA;AAAA,IACf,KAAO,EAAA,MAAA;AAAA,IACP,QAAU,EAAA,aAAA;AAAA,IACV,MAAQ,EAAA,KAAA,CAAM,OAAQ,CAAA,CAAA,EAAG,GAAG,CAAC,CAAA;AAAA,IAC7B,KAAA,EAAO,KAAM,CAAA,MAAA,CAAO,IAAK,CAAA,SAAA;AAAA,IACzB,UAAA,EAAY,KAAM,CAAA,UAAA,CAAW,IAAK,CAAA,UAAA;AAAA,GACnC,CAAA;AACH,CAAA,CAAA,CAAA;AAEA,MAAM,SAAS,CAAC,EAAE,UAAU,KAAQ,GAAA,OAAA,EAAS,WAA6D,KAAA;AACxG,EAAM,MAAA,MAAA,GAAS,WAAW,eAAe,CAAA,CAAA;AACzC,EACE,uBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,SAAW,EAAA,EAAA;AAAA,QACT,MAAO,CAAA,KAAA;AAAA,QACP,SAAA;AAAA,QACA,GAAI,CAAA;AAAA,UACF,SAAW,EAAA,KAAA;AAAA,SACZ,CAAA;AAAA,OACH;AAAA,KAAA;AAAA,IAEC,QAAA;AAAA,GACH,CAAA;AAEJ,CAAA,CAAA;AACA,MAAA,CAAO,WAAc,GAAA,QAAA,CAAA;AAErB,MAAM,eAAA,GAAkB,CAAC,KAA0B,MAAA;AAAA,EACjD,OAAO,GAAI,CAAA;AAAA,IACT,QAAU,EAAA,UAAA;AAAA,IACV,QAAU,EAAA,QAAA;AAAA,IAEV,WAAA,EAAa,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,IAC5B,KAAO,EAAA,MAAA;AAAA,IAEP,OAAS,EAAA;AAAA,MACP,KAAO,EAAA,MAAA;AAAA,KACT;AAAA,IAEA,SAAW,EAAA;AAAA,MACT,OAAS,EAAA,MAAA;AAAA,KACX;AAAA,GACD,CAAA;AACH,CAAA,CAAA,CAAA;AAEA,MAAM,IAAA,GAAO,KAAK,CAAC,EAAE,UAAU,SAAW,EAAA,SAAA,GAAY,KAA+C,KAAA;AACnG,EAAM,MAAA,MAAA,GAAS,WAAW,aAAa,CAAA,CAAA;AACvC,EAAA,IAAI,IAAO,GAAA,QAAA,CAAA;AAEX,EAAA,MAAM,WAAWA,cAAM,CAAA,QAAA,CAAS,QAAQ,QAAQ,CAAA,CAAE,OAAO,OAAO,CAAA,CAAA;AAChE,EAAI,IAAA,CAAC,SAAS,MAAQ,EAAA;AACpB,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AACA,EAAA,IAAA,GAAO,QAAS,CAAA,GAAA,CAAI,CAAC,OAAA,EAAS,sBAC3BA,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAI,GAAK,EAAA,CAAA,QAAA,EAAW,CAAC,CAAI,CAAA,EAAA,SAAA,EAAW,MAAO,CAAA,YAAA,EAAA,EACzC,OACH,CACD,CAAA,CAAA;AAED,EAAI,IAAA,QAAA,CAAS,MAAS,GAAA,CAAA,IAAK,SAAW,EAAA;AACpC,IAAA,IAAA,GAAO,QAAS,CAAA,MAAA,CAAO,CAAC,IAAA,EAAM,MAAM,CAAM,KAAA;AAAA,MACxC,IAAA;AAAA,sBACAA,cAAA,CAAA,aAAA,CAAC,UAAK,GAAK,EAAA,CAAA,UAAA,EAAa,CAAC,CAAI,CAAA,EAAA,SAAA,EAAW,MAAO,CAAA,SAAA,EAAA,EAC5C,SACH,CAAA;AAAA,MACA,IAAA;AAAA,KACD,CAAA,CAAA;AAAA,GACH;AACA,EAAO,uBAAAA,cAAA,CAAA,aAAA,CAAC,SAAI,SAAW,EAAA,EAAA,CAAG,OAAO,QAAU,EAAA,SAAS,KAAI,IAAK,CAAA,CAAA;AAC/D,CAAC,CAAA,CAAA;AACD,IAAA,CAAK,WAAc,GAAA,MAAA,CAAA;AAEnB,MAAM,aAAA,GAAgB,CAAC,KAA0B,MAAA;AAAA,EAC/C,UAAU,GAAI,CAAA;AAAA,IACZ,QAAU,EAAA,MAAA;AAAA,IACV,OAAS,EAAA,MAAA;AAAA,IACT,UAAY,EAAA,QAAA;AAAA,IACZ,KAAO,EAAA,MAAA;AAAA,IACP,QAAA,EAAU,KAAM,CAAA,UAAA,CAAW,IAAK,CAAA,EAAA;AAAA,IAChC,KAAA,EAAO,KAAM,CAAA,MAAA,CAAO,IAAK,CAAA,SAAA;AAAA,IACzB,MAAQ,EAAA,KAAA,CAAM,OAAQ,CAAA,GAAA,EAAK,GAAG,CAAC,CAAA;AAAA,IAC/B,UAAA,EAAY,KAAM,CAAA,UAAA,CAAW,SAAU,CAAA,UAAA;AAAA,IACvC,YAAc,EAAA,UAAA;AAAA,GACf,CAAA;AAAA,EACD,cAAc,GAAI,CAAA;AAAA;AAAA,IAEhB,MAAQ,EAAA,CAAA;AAAA,GACT,CAAA;AAAA,EACD,WAAW,GAAI,CAAA;AAAA,IACb,MAAQ,EAAA,CAAA,EAAA,EAAK,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAC,CAAA,CAAA;AAAA,GAC9B,CAAA;AACH,CAAA,CAAA,CAAA;AAOA,MAAM,cAAc,CAAC,EAAE,UAAU,QAAU,EAAA,OAAA,EAAS,WAA8B,KAAA;AAChF,EAAM,MAAA,MAAA,GAAS,WAAW,eAAe,CAAA,CAAA;AACzC,EAAM,MAAA,OAAA,GAAU,WAAW,WAAW,CAAA,CAAA;AACtC,EAAM,MAAA,UAAA,GAAA,CAAa,mCAAS,QAAY,KAAA,QAAA,CAAA;AAExC,EAAA,MAAMC,IAAM,GAAA,OAAA,KAAY,SAAY,GAAA,MAAA,CAAO,UAAU,MAAO,CAAA,gBAAA,CAAA;AAC5D,EAAA,uBACGD,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAI,SAAW,EAAA,EAAA,CAAGC,IAAK,EAAA,SAAS,CAC9B,EAAA,EAAAD,cAAA,CAAM,QAAS,CAAA,GAAA,CAAI,QAAU,EAAA,CAAC,KAAU,KAAA;AACvC,IAAO,OAAAA,cAAA,CAAM,cAAe,CAAA,KAAK,CAAI,GAAA,YAAA,CAAa,KAAO,EAAA,cAAA,CAAA,EAAE,QAAU,EAAA,UAAA,EAAA,EAAe,KAAM,CAAA,KAAA,CAAO,CAAI,GAAA,IAAA,CAAA;AAAA,GACtG,CACH,CAAA,CAAA;AAEJ,CAAA,CAAA;AAEA,MAAM,eAAA,GAAkB,CAAC,KAA0B,MAAA;AAAA,EACjD,SAAS,GAAI,CAAA;AAAA,IACX,OAAS,EAAA,MAAA;AAAA,IACT,aAAe,EAAA,KAAA;AAAA,IACf,QAAU,EAAA,MAAA;AAAA,IACV,GAAA,EAAK,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,IACpB,QAAU,EAAA,SAAA;AAAA,IACV,SAAA,EAAW,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,GAC3B,CAAA;AAAA,EACD,kBAAkB,GAAI,CAAA;AAAA,IACpB,SAAW,EAAA,QAAA;AAAA,IACX,KAAA,EAAO,KAAM,CAAA,MAAA,CAAO,IAAK,CAAA,SAAA;AAAA,IACzB,OAAS,EAAA,MAAA;AAAA,IACT,aAAe,EAAA,KAAA;AAAA,IACf,QAAU,EAAA,MAAA;AAAA,IACV,GAAA,EAAK,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,IACpB,QAAU,EAAA,WAAA;AAAA,IACV,SAAA,EAAW,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,GAC3B,CAAA;AACH,CAAA,CAAA,CAAA;AAEA,MAAM,UAAU,CAAC,EAAE,QAAU,EAAA,QAAA,EAAU,WAA4B,KAAA;AACjE,EAAA,oDACG,WAAY,EAAA,EAAA,OAAA,EAAQ,SAAU,EAAA,QAAA,EAAoB,aAChD,QACH,CAAA,CAAA;AAEJ,CAAA,CAAA;AACA,OAAA,CAAQ,WAAc,GAAA,SAAA,CAAA;AAEtB,MAAM,mBAAmB,CAAC,EAAE,QAAU,EAAA,QAAA,EAAU,WAA4B,KAAA;AAC1E,EAAA,oDACG,WAAY,EAAA,EAAA,OAAA,EAAQ,WAAY,EAAA,QAAA,EAAoB,aAClD,QACH,CAAA,CAAA;AAEJ,CAAA,CAAA;AACA,gBAAA,CAAiB,WAAc,GAAA,kBAAA,CAAA;AAMlB,MAAA,aAAA,GAAgB,CAAC,KAAyB,KAAA;AACrD,EAAO,OAAA,cAAA,CAAA,cAAA,CAAA,cAAA,CAAA,cAAA,CAAA,cAAA,CAAA,cAAA,CAAA;AAAA,IACL,OAAO,GAAI,CAAA;AAAA,MACT,OAAS,EAAA,MAAA;AAAA,MACT,cAAgB,EAAA,eAAA;AAAA,MAChB,UAAY,EAAA,QAAA;AAAA,MACZ,KAAO,EAAA,MAAA;AAAA,MACP,QAAU,EAAA,MAAA;AAAA,KACX,CAAA;AAAA,GAAA,EACE,iBAAiB,KAAK,CAAA,CAAA,EACtB,aAAc,CAAA,KAAK,IACnB,oBAAqB,CAAA,KAAK,CAC1B,CAAA,EAAA,eAAA,CAAgB,KAAK,CACrB,CAAA,EAAA,eAAA,CAAgB,KAAK,CAAA,CAAA,EACrB,aAAkB,CAAA,CAAA,CAAA;AAEzB,EAAA;AAEA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AACf,IAAA,CAAK,IAAO,GAAA,IAAA,CAAA;AACZ,IAAA,CAAK,MAAS,GAAA,MAAA,CAAA;AACd,IAAA,CAAK,IAAO,GAAA,IAAA,CAAA;AACZ,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AACf,IAAA,CAAK,gBAAmB,GAAA,gBAAA,CAAA;AACxB,IAAA,CAAK,WAAc,GAAA,WAAA;;;;"}