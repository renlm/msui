{"version":3,"file":"XYCanvas.js","sources":["../../../../../src/components/uPlot/geometries/XYCanvas.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useMemo } from 'react';\n\ninterface XYCanvasProps {\n  top: number; // css pxls\n  left: number; // css pxls\n}\n\n/**\n * Renders absolutely positioned element on top of the uPlot's plotting area (axes are not included!).\n * Useful when you want to render some overlay with canvas-independent elements on top of the plot.\n */\nexport const XYCanvas = ({ children, left, top }: React.PropsWithChildren<XYCanvasProps>) => {\n  const className = useMemo(() => {\n    return css({\n      position: 'absolute',\n      overflow: 'visible',\n      left: `${left}px`,\n      top: `${top}px`,\n    });\n  }, [left, top]);\n\n  return <div className={className}>{children}</div>;\n};\n"],"names":["React"],"mappings":";;;AAYO,MAAM,WAAW,CAAC,EAAE,QAAU,EAAA,IAAA,EAAM,KAAkD,KAAA;AAC3F,EAAM,MAAA,SAAA,GAAY,QAAQ,MAAM;AAC9B,IAAA,OAAO,GAAI,CAAA;AAAA,MACT,QAAU,EAAA,UAAA;AAAA,MACV,QAAU,EAAA,SAAA;AAAA,MACV,IAAA,EAAM,GAAG,IAAI,CAAA,EAAA,CAAA;AAAA,MACb,GAAA,EAAK,GAAG,GAAG,CAAA,EAAA,CAAA;AAAA,KACZ,CAAA,CAAA;AAAA,GACA,EAAA,CAAC,IAAM,EAAA,GAAG,CAAC,CAAA,CAAA;AAEd,EAAO,uBAAAA,cAAA,CAAA,aAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAA,EAAuB,QAAS,CAAA,CAAA;AAC9C;;;;"}