{"version":3,"file":"optionMappings.js","sources":["../../../../src/components/Cascader/optionMappings.ts"],"sourcesContent":["import { BaseOptionType as RCCascaderOption, CascaderProps } from 'rc-cascader';\n\nimport { CascaderOption } from './Cascader';\n\ntype onChangeType = ((values: string[], options: CascaderOption[]) => void) | undefined;\n\nexport const onChangeCascader =\n  (onChanged: onChangeType): CascaderProps['onChange'] =>\n  (values, options) => {\n    if (onChanged) {\n      // map values to strings for backwards compatibility with Cascader components\n      onChanged(\n        values.map((value) => String(value)),\n        fromRCOptions(options)\n      );\n    }\n  };\n\ntype onLoadDataType = ((options: CascaderOption[]) => void) | undefined;\n\nexport const onLoadDataCascader = (onLoadData: onLoadDataType) => (options: RCCascaderOption[]) => {\n  if (onLoadData) {\n    onLoadData(fromRCOptions(options));\n  }\n};\n\nconst fromRCOptions = (options: RCCascaderOption[]): CascaderOption[] => {\n  return options.map(fromRCOption);\n};\n\nconst fromRCOption = (option: RCCascaderOption): CascaderOption => {\n  const value = option.value ? String(option.value) : '';\n  return {\n    value,\n    label: typeof option.label === 'string' ? option.label : value,\n  };\n};\n"],"names":[],"mappings":"AAMO,MAAM,gBACX,GAAA,CAAC,SACD,KAAA,CAAC,QAAQ,OAAY,KAAA;AACnB,EAAA,IAAI,SAAW,EAAA;AAEb,IAAA,SAAA;AAAA,MACE,OAAO,GAAI,CAAA,CAAC,KAAU,KAAA,MAAA,CAAO,KAAK,CAAC,CAAA;AAAA,MACnC,cAAc,OAAO,CAAA;AAAA,KACvB,CAAA;AAAA,GACF;AACF,EAAA;AAIK,MAAM,kBAAqB,GAAA,CAAC,UAA+B,KAAA,CAAC,OAAgC,KAAA;AACjG,EAAA,IAAI,UAAY,EAAA;AACd,IAAW,UAAA,CAAA,aAAA,CAAc,OAAO,CAAC,CAAA,CAAA;AAAA,GACnC;AACF,EAAA;AAEA,MAAM,aAAA,GAAgB,CAAC,OAAkD,KAAA;AACvE,EAAO,OAAA,OAAA,CAAQ,IAAI,YAAY,CAAA,CAAA;AACjC,CAAA,CAAA;AAEA,MAAM,YAAA,GAAe,CAAC,MAA6C,KAAA;AACjE,EAAA,MAAM,QAAQ,MAAO,CAAA,KAAA,GAAQ,MAAO,CAAA,MAAA,CAAO,KAAK,CAAI,GAAA,EAAA,CAAA;AACpD,EAAO,OAAA;AAAA,IACL,KAAA;AAAA,IACA,OAAO,OAAO,MAAA,CAAO,KAAU,KAAA,QAAA,GAAW,OAAO,KAAQ,GAAA,KAAA;AAAA,GAC3D,CAAA;AACF,CAAA;;;;"}