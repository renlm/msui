{"version":3,"file":"ReactMonacoEditor.js","sources":["../../../../src/components/Monaco/ReactMonacoEditor.tsx"],"sourcesContent":["import Editor, { loader as monacoEditorLoader, Monaco } from '@monaco-editor/react';\nimport * as monaco from 'monaco-editor';\nimport React, { useCallback } from 'react';\n\nimport { useTheme2 } from '../../themes';\n\nimport defineThemes from './theme';\nimport type { ReactMonacoEditorProps } from './types';\n\n// pass the monaco editor to the loader to bypass requirejs\nmonacoEditorLoader.config({ monaco });\n\nexport const ReactMonacoEditor = (props: ReactMonacoEditorProps) => {\n  const { beforeMount } = props;\n\n  const theme = useTheme2();\n  const onMonacoBeforeMount = useCallback(\n    (monaco: Monaco) => {\n      defineThemes(monaco, theme);\n      beforeMount?.(monaco);\n    },\n    [beforeMount, theme]\n  );\n\n  return (\n    <Editor {...props} theme={theme.isDark ? 'grafana-dark' : 'grafana-light'} beforeMount={onMonacoBeforeMount} />\n  );\n};\n"],"names":["monacoEditorLoader","monaco","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUAA,MAAmB,CAAA,MAAA,CAAO,EAAE,MAAA,EAAQ,CAAA,CAAA;AAEvB,MAAA,iBAAA,GAAoB,CAAC,KAAkC,KAAA;AAClE,EAAM,MAAA,EAAE,aAAgB,GAAA,KAAA,CAAA;AAExB,EAAA,MAAM,QAAQ,SAAU,EAAA,CAAA;AACxB,EAAA,MAAM,mBAAsB,GAAA,WAAA;AAAA,IAC1B,CAACC,OAAmB,KAAA;AAClB,MAAA,YAAA,CAAaA,SAAQ,KAAK,CAAA,CAAA;AAC1B,MAAcA,WAAAA,IAAAA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,WAAAA,CAAAA,OAAAA,CAAAA,CAAAA;AAAA,KAChB;AAAA,IACA,CAAC,aAAa,KAAK,CAAA;AAAA,GACrB,CAAA;AAEA,EACE,uBAAAC,cAAA,CAAA,aAAA,CAAC,MAAW,EAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAX,EAAkB,KAAA,EAAO,MAAM,MAAS,GAAA,cAAA,GAAiB,eAAiB,EAAA,WAAA,EAAa,mBAAqB,EAAA,CAAA,CAAA,CAAA;AAEjH;;;;"}