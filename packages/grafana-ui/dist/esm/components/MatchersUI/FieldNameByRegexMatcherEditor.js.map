{"version":3,"file":"FieldNameByRegexMatcherEditor.js","sources":["../../../../src/components/MatchersUI/FieldNameByRegexMatcherEditor.tsx"],"sourcesContent":["import React, { memo, useCallback } from 'react';\n\nimport { FieldMatcherID, fieldMatchers } from '@grafana/data';\n\nimport { Input } from '../Input/Input';\n\nimport { MatcherUIProps, FieldMatcherUIRegistryItem } from './types';\n\nexport const FieldNameByRegexMatcherEditor = memo<MatcherUIProps<string>>((props) => {\n  const { options, onChange } = props;\n\n  const onBlur = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      return onChange(e.target.value);\n    },\n    [onChange]\n  );\n\n  return <Input placeholder=\"Enter regular expression\" defaultValue={options} onBlur={onBlur} />;\n});\nFieldNameByRegexMatcherEditor.displayName = 'FieldNameByRegexMatcherEditor';\n\nexport const fieldNameByRegexMatcherItem: FieldMatcherUIRegistryItem<string> = {\n  id: FieldMatcherID.byRegexp,\n  component: FieldNameByRegexMatcherEditor,\n  matcher: fieldMatchers.get(FieldMatcherID.byRegexp),\n  name: 'Fields with name matching regex',\n  description: 'Set properties for fields with names matching a regex',\n  optionsToLabel: (options) => options,\n};\n"],"names":[],"mappings":";;;;AAQa,MAAA,6BAAA,GAAgC,IAA6B,CAAA,CAAC,KAAU,KAAA;AACnF,EAAM,MAAA,EAAE,OAAS,EAAA,QAAA,EAAa,GAAA,KAAA,CAAA;AAE9B,EAAA,MAAM,MAAS,GAAA,WAAA;AAAA,IACb,CAAC,CAA0C,KAAA;AACzC,MAAO,OAAA,QAAA,CAAS,CAAE,CAAA,MAAA,CAAO,KAAK,CAAA,CAAA;AAAA,KAChC;AAAA,IACA,CAAC,QAAQ,CAAA;AAAA,GACX,CAAA;AAEA,EAAA,oDAAQ,KAAM,EAAA,EAAA,WAAA,EAAY,0BAA2B,EAAA,YAAA,EAAc,SAAS,MAAgB,EAAA,CAAA,CAAA;AAC9F,CAAC,EAAA;AACD,6BAAA,CAA8B,WAAc,GAAA,+BAAA,CAAA;AAErC,MAAM,2BAAkE,GAAA;AAAA,EAC7E,IAAI,cAAe,CAAA,QAAA;AAAA,EACnB,SAAW,EAAA,6BAAA;AAAA,EACX,OAAS,EAAA,aAAA,CAAc,GAAI,CAAA,cAAA,CAAe,QAAQ,CAAA;AAAA,EAClD,IAAM,EAAA,iCAAA;AAAA,EACN,WAAa,EAAA,uDAAA;AAAA,EACb,cAAA,EAAgB,CAAC,OAAY,KAAA,OAAA;AAC/B;;;;"}