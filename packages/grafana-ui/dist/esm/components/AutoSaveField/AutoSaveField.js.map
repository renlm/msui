{"version":3,"file":"AutoSaveField.js","sources":["../../../../src/components/AutoSaveField/AutoSaveField.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { debounce } from 'lodash';\nimport React, { useCallback, useMemo, useRef } from 'react';\n\nimport { useStyles2 } from '../../themes';\nimport { Field, FieldProps } from '../Forms/Field';\nimport { InlineToast } from '../InlineToast/InlineToast';\n\nimport { EllipsisAnimated } from './EllipsisAnimated';\n\nconst SHOW_SUCCESS_DURATION = 2 * 1000;\n\nexport interface Props<T = string> extends Omit<FieldProps, 'children'> {\n  /** Saving request that will be triggered 600ms after changing the value */\n  onFinishChange: (inputValue: T) => Promise<void>;\n  /** Custom error message to display on saving */\n  saveErrorMessage?: string;\n  /** Input that will save its value on change  */\n  children: (onChange: (newValue: T) => void) => React.ReactElement;\n}\nexport function AutoSaveField<T = string>(props: Props<T>) {\n  const {\n    invalid,\n    loading,\n    onFinishChange,\n    saveErrorMessage = 'Error saving this value',\n    error,\n    children,\n    disabled,\n    ...restProps\n  } = props;\n\n  const [fieldState, setFieldState] = React.useState({\n    isLoading: false,\n    showSuccess: false,\n    showError: invalid,\n  });\n\n  const fieldRef = useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n    if (fieldState.showSuccess) {\n      const time = fieldState.showError ? 0 : SHOW_SUCCESS_DURATION;\n      timeoutId = setTimeout(() => {\n        setFieldState({ ...fieldState, showSuccess: false });\n      }, time);\n    }\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [fieldState]);\n\n  const handleChange = useCallback(\n    (nextValue: T) => {\n      if (invalid) {\n        return;\n      }\n      setFieldState({ ...fieldState, isLoading: true, showSuccess: false });\n      onFinishChange(nextValue)\n        .then(() => {\n          setFieldState({\n            isLoading: false,\n            showSuccess: true,\n            showError: false,\n          });\n        })\n        .catch(() => {\n          setFieldState({\n            ...fieldState,\n            isLoading: false,\n            showError: true,\n          });\n        });\n    },\n    [invalid, fieldState, onFinishChange]\n  );\n\n  const lodashDebounce = useMemo(() => debounce(handleChange, 600, { leading: false }), [handleChange]);\n  //We never want to pass false to field, because it won't be deleted with deleteUndefinedProps() being false\n  const isInvalid = invalid || fieldState.showError || undefined;\n  /**\n   * use Field around input to pass the error message\n   * use InlineToast.tsx to show the save message\n   */\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <Field\n        {...restProps}\n        loading={loading || undefined}\n        invalid={isInvalid}\n        disabled={disabled}\n        error={error || (fieldState.showError && saveErrorMessage)}\n        ref={fieldRef}\n        className={styles.widthFitContent}\n      >\n        {React.cloneElement(\n          children((newValue) => {\n            lodashDebounce(newValue);\n          })\n        )}\n      </Field>\n      {fieldState.isLoading && (\n        <InlineToast referenceElement={fieldRef.current} placement=\"right\">\n          Saving <EllipsisAnimated />\n        </InlineToast>\n      )}\n      {fieldState.showSuccess && (\n        <InlineToast suffixIcon={'check'} referenceElement={fieldRef.current} placement=\"right\">\n          Saved!\n        </InlineToast>\n      )}\n    </>\n  );\n}\n\nAutoSaveField.displayName = 'AutoSaveField';\n\nconst getStyles = () => {\n  return {\n    widthFitContent: css({\n      width: 'fit-content',\n    }),\n  };\n};\n"],"names":["React"],"mappings":"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"}