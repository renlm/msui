{"version":3,"file":"TagList.js","sources":["../../../../src/components/Tags/TagList.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { forwardRef, memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes';\nimport { IconName } from '../../types/icon';\nimport { SkeletonComponent, attachSkeleton } from '../../utils/skeleton';\n\nimport { OnTagClick, Tag } from './Tag';\n\nexport interface Props {\n  /** Maximum number of the tags to display */\n  displayMax?: number;\n  /** Names of the tags to display */\n  tags: string[];\n  /** Callback when the tag is clicked */\n  onClick?: OnTagClick;\n  /** Custom styles for the wrapper component */\n  className?: string;\n  /** aria-label for the `i`-th Tag component */\n  getAriaLabel?: (name: string, i: number) => string;\n  //** Should return an index of a color defined in the TAG_COLORS array */\n  getColorIndex?: (name: string, i: number) => number;\n  /** Icon to show next to tag label */\n  icon?: IconName;\n}\n\nconst TagListComponent = memo(\n  forwardRef<HTMLUListElement, Props>(\n    ({ displayMax, tags, icon, onClick, className, getAriaLabel, getColorIndex }, ref) => {\n      const theme = useTheme2();\n      const styles = getStyles(theme, Boolean(displayMax && displayMax > 0));\n      const numTags = tags.length;\n      const tagsToDisplay = displayMax ? tags.slice(0, displayMax) : tags;\n      return (\n        <ul className={cx(styles.wrapper, className)} aria-label=\"Tags\" ref={ref}>\n          {tagsToDisplay.map((tag, i) => (\n            <li className={styles.li} key={tag}>\n              <Tag\n                name={tag}\n                icon={icon}\n                onClick={onClick}\n                aria-label={getAriaLabel?.(tag, i)}\n                data-tag-id={i}\n                colorIndex={getColorIndex?.(tag, i)}\n              />\n            </li>\n          ))}\n          {displayMax && displayMax > 0 && numTags - displayMax > 0 && (\n            <span className={styles.moreTagsLabel}>+ {numTags - displayMax}</span>\n          )}\n        </ul>\n      );\n    }\n  )\n);\nTagListComponent.displayName = 'TagList';\n\nconst TagListSkeleton: SkeletonComponent = ({ rootProps }) => {\n  const styles = useStyles2(getSkeletonStyles);\n  return (\n    <div className={styles.container} {...rootProps}>\n      <Tag.Skeleton />\n      <Tag.Skeleton />\n    </div>\n  );\n};\n\nexport const TagList = attachSkeleton(TagListComponent, TagListSkeleton);\n\nconst getSkeletonStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    display: 'flex',\n    gap: theme.spacing(1),\n  }),\n});\n\nconst getStyles = (theme: GrafanaTheme2, isTruncated: boolean) => {\n  return {\n    wrapper: css({\n      position: 'relative',\n      alignItems: isTruncated ? 'center' : 'unset',\n      display: 'flex',\n      flex: '1 1 auto',\n      flexWrap: 'wrap',\n      flexShrink: isTruncated ? 0 : 1,\n      justifyContent: 'flex-end',\n      gap: '6px',\n    }),\n    moreTagsLabel: css({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.size.sm,\n    }),\n    li: css({\n      listStyle: 'none',\n    }),\n  };\n};\n"],"names":["React"],"mappings":"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"}