{"version":3,"file":"DateTimePicker.js","sources":["../../../../../src/components/DateTimePickers/DateTimePicker/DateTimePicker.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport { autoUpdate, flip, shift, useFloating } from '@floating-ui/react';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport React, { FormEvent, ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport Calendar from 'react-calendar';\nimport { useMedia } from 'react-use';\n\nimport {\n  dateTimeFormat,\n  DateTime,\n  dateTime,\n  GrafanaTheme2,\n  isDateTime,\n  dateTimeForTimeZone,\n  getTimeZone,\n} from '@grafana/data';\nimport { Components } from '@grafana/e2e-selectors';\n\nimport { useStyles2, useTheme2 } from '../../../themes';\nimport { Button } from '../../Button/Button';\nimport { InlineField } from '../../Forms/InlineField';\nimport { Icon } from '../../Icon/Icon';\nimport { Input } from '../../Input/Input';\nimport { Stack } from '../../Layout/Stack/Stack';\nimport { getModalStyles } from '../../Modal/getModalStyles';\nimport { Portal } from '../../Portal/Portal';\nimport { TimeOfDayPicker, POPUP_CLASS_NAME } from '../TimeOfDayPicker';\nimport { getBodyStyles } from '../TimeRangePicker/CalendarBody';\nimport { isValid } from '../utils';\nimport { adjustDateForReactCalendar } from '../utils/adjustDateForReactCalendar';\n\nexport interface Props {\n  /** Input date for the component */\n  date?: DateTime;\n  /** Callback for returning the selected date */\n  onChange: (date?: DateTime) => void;\n  /** label for the input field */\n  label?: ReactNode;\n  /** Set the latest selectable date */\n  maxDate?: Date;\n  /** Set the minimum selectable date */\n  minDate?: Date;\n  /** Display seconds on the time picker */\n  showSeconds?: boolean;\n  /** Set the hours that can't be selected */\n  disabledHours?: () => number[];\n  /** Set the minutes that can't be selected */\n  disabledMinutes?: () => number[];\n  /** Set the seconds that can't be selected */\n  disabledSeconds?: () => number[];\n  /** Can input be cleared/have empty values */\n  clearable?: boolean;\n}\n\nexport const DateTimePicker = ({\n  date,\n  maxDate,\n  minDate,\n  label,\n  onChange,\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds,\n  showSeconds = true,\n  clearable = false,\n}: Props) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n  const { overlayProps, underlayProps } = useOverlay(\n    {\n      onClose: () => setOpen(false),\n      isDismissable: true,\n      isOpen,\n      shouldCloseOnInteractOutside: (element) => {\n        const popupElement = document.getElementsByClassName(POPUP_CLASS_NAME)[0];\n        return !(popupElement && popupElement.contains(element));\n      },\n    },\n    ref\n  );\n  const { dialogProps } = useDialog({}, ref);\n\n  const theme = useTheme2();\n  const { modalBackdrop } = useStyles2(getModalStyles);\n  const isFullscreen = useMedia(`(min-width: ${theme.breakpoints.values.lg}px)`);\n  const styles = useStyles2(getStyles);\n\n  // the order of middleware is important!\n  // see https://floating-ui.com/docs/arrow#order\n  const middleware = [\n    flip({\n      // see https://floating-ui.com/docs/flip#combining-with-shift\n      crossAxis: false,\n      boundary: document.body,\n    }),\n    shift(),\n  ];\n\n  const { refs, floatingStyles } = useFloating({\n    open: isOpen,\n    placement: 'bottom-start',\n    onOpenChange: setOpen,\n    middleware,\n    whileElementsMounted: autoUpdate,\n    strategy: 'fixed',\n  });\n\n  const onApply = useCallback(\n    (date: DateTime) => {\n      setOpen(false);\n      onChange(date);\n    },\n    [onChange]\n  );\n\n  const onOpen = useCallback(\n    (event: FormEvent<HTMLElement>) => {\n      event.preventDefault();\n      setOpen(true);\n    },\n    [setOpen]\n  );\n\n  return (\n    <div data-testid=\"date-time-picker\" style={{ position: 'relative' }}>\n      <DateTimeInput\n        date={date}\n        onChange={onChange}\n        isFullscreen={isFullscreen}\n        onOpen={onOpen}\n        label={label}\n        ref={refs.setReference}\n        showSeconds={showSeconds}\n        clearable={clearable}\n      />\n      {isOpen ? (\n        isFullscreen ? (\n          <Portal>\n            <FocusScope contain autoFocus restoreFocus>\n              <div ref={ref} {...overlayProps} {...dialogProps}>\n                <DateTimeCalendar\n                  date={date}\n                  onChange={onApply}\n                  isFullscreen={true}\n                  onClose={() => setOpen(false)}\n                  maxDate={maxDate}\n                  minDate={minDate}\n                  ref={refs.setFloating}\n                  style={floatingStyles}\n                  showSeconds={showSeconds}\n                  disabledHours={disabledHours}\n                  disabledMinutes={disabledMinutes}\n                  disabledSeconds={disabledSeconds}\n                />\n              </div>\n            </FocusScope>\n          </Portal>\n        ) : (\n          <Portal>\n            <div className={modalBackdrop} {...underlayProps} />\n            <FocusScope contain autoFocus restoreFocus>\n              <div ref={ref} {...overlayProps} {...dialogProps}>\n                <div className={styles.modal}>\n                  <DateTimeCalendar\n                    date={date}\n                    maxDate={maxDate}\n                    minDate={minDate}\n                    onChange={onApply}\n                    isFullscreen={false}\n                    onClose={() => setOpen(false)}\n                    showSeconds={showSeconds}\n                    disabledHours={disabledHours}\n                    disabledMinutes={disabledMinutes}\n                    disabledSeconds={disabledSeconds}\n                  />\n                </div>\n              </div>\n            </FocusScope>\n          </Portal>\n        )\n      ) : null}\n    </div>\n  );\n};\n\ninterface DateTimeCalendarProps {\n  date?: DateTime;\n  onChange: (date: DateTime) => void;\n  onClose: () => void;\n  isFullscreen: boolean;\n  maxDate?: Date;\n  minDate?: Date;\n  style?: React.CSSProperties;\n  showSeconds?: boolean;\n  disabledHours?: () => number[];\n  disabledMinutes?: () => number[];\n  disabledSeconds?: () => number[];\n}\n\ntype InputProps = Pick<Props, 'onChange' | 'label' | 'date' | 'showSeconds' | 'clearable'> & {\n  isFullscreen: boolean;\n  onOpen: (event: FormEvent<HTMLElement>) => void;\n};\n\ntype InputState = {\n  value: string;\n  invalid: boolean;\n};\n\nconst DateTimeInput = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ date, label, onChange, onOpen, showSeconds = true, clearable = false }, ref) => {\n    const styles = useStyles2(getStyles);\n    const format = showSeconds ? 'YYYY-MM-DD HH:mm:ss' : 'YYYY-MM-DD HH:mm';\n    const [internalDate, setInternalDate] = useState<InputState>(() => {\n      return { value: date ? dateTimeFormat(date) : !clearable ? dateTimeFormat(dateTime()) : '', invalid: false };\n    });\n\n    useEffect(() => {\n      if (date) {\n        setInternalDate({\n          invalid: !isValid(dateTimeFormat(date, { format })),\n          value: isDateTime(date) ? dateTimeFormat(date, { format }) : date,\n        });\n      }\n    }, [date, format]);\n\n    const onChangeDate = useCallback((event: FormEvent<HTMLInputElement>) => {\n      const isInvalid = !isValid(event.currentTarget.value);\n      setInternalDate({\n        value: event.currentTarget.value,\n        invalid: isInvalid,\n      });\n    }, []);\n\n    const onBlur = useCallback(() => {\n      if (!internalDate.invalid && internalDate.value) {\n        const date = dateTimeForTimeZone(getTimeZone(), internalDate.value);\n        onChange(date);\n      }\n    }, [internalDate, onChange]);\n\n    const clearInternalDate = useCallback(() => {\n      setInternalDate({ value: '', invalid: false });\n      onChange();\n    }, [onChange]);\n\n    const icon = <Button aria-label=\"Time picker\" icon=\"calendar-alt\" variant=\"secondary\" onClick={onOpen} />;\n    return (\n      <InlineField label={label} invalid={!!(internalDate.value && internalDate.invalid)} className={styles.field}>\n        <Input\n          onChange={onChangeDate}\n          addonAfter={icon}\n          value={internalDate.value}\n          onBlur={onBlur}\n          data-testid={Components.DateTimePicker.input}\n          placeholder=\"Select date/time\"\n          ref={ref}\n          suffix={\n            clearable &&\n            internalDate.value && <Icon name=\"times\" className={styles.clearIcon} onClick={clearInternalDate} />\n          }\n        />\n      </InlineField>\n    );\n  }\n);\n\nDateTimeInput.displayName = 'DateTimeInput';\n\nconst DateTimeCalendar = React.forwardRef<HTMLDivElement, DateTimeCalendarProps>(\n  (\n    {\n      date,\n      onClose,\n      onChange,\n      isFullscreen,\n      maxDate,\n      minDate,\n      style,\n      showSeconds = true,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n    },\n    ref\n  ) => {\n    const calendarStyles = useStyles2(getBodyStyles);\n    const styles = useStyles2(getStyles);\n\n    // need to keep these 2 separate in state since react-calendar doesn't support different timezones\n    const [timeOfDayDateTime, setTimeOfDayDateTime] = useState(() => {\n      if (date && date.isValid()) {\n        return dateTimeForTimeZone(getTimeZone(), date);\n      }\n\n      return dateTimeForTimeZone(getTimeZone(), new Date());\n    });\n    const [reactCalendarDate, setReactCalendarDate] = useState<Date>(() => {\n      if (date && date.isValid()) {\n        return adjustDateForReactCalendar(date.toDate(), getTimeZone());\n      }\n\n      return new Date();\n    });\n\n    const onChangeDate = useCallback<NonNullable<React.ComponentProps<typeof Calendar>['onChange']>>((date) => {\n      if (date && !Array.isArray(date)) {\n        setReactCalendarDate(date);\n      }\n    }, []);\n\n    const onChangeTime = useCallback((date: DateTime) => {\n      setTimeOfDayDateTime(date);\n    }, []);\n\n    // here we need to stitch the 2 date objects back together\n    const handleApply = () => {\n      // we take the date that's set by TimeOfDayPicker\n      const newDate = dateTime(timeOfDayDateTime);\n\n      // and apply the date/month/year set by react-calendar\n      newDate.set('date', reactCalendarDate.getDate());\n      newDate.set('month', reactCalendarDate.getMonth());\n      newDate.set('year', reactCalendarDate.getFullYear());\n\n      onChange(newDate);\n    };\n\n    return (\n      <div className={cx(styles.container, { [styles.fullScreen]: isFullscreen })} style={style} ref={ref}>\n        <Calendar\n          next2Label={null}\n          prev2Label={null}\n          value={reactCalendarDate}\n          nextLabel={<Icon name=\"angle-right\" />}\n          nextAriaLabel=\"Next month\"\n          prevLabel={<Icon name=\"angle-left\" />}\n          prevAriaLabel=\"Previous month\"\n          onChange={onChangeDate}\n          locale=\"en\"\n          className={calendarStyles.body}\n          tileClassName={calendarStyles.title}\n          maxDate={maxDate}\n          minDate={minDate}\n        />\n        <div className={styles.time}>\n          <TimeOfDayPicker\n            showSeconds={showSeconds}\n            onChange={onChangeTime}\n            value={timeOfDayDateTime}\n            disabledHours={disabledHours}\n            disabledMinutes={disabledMinutes}\n            disabledSeconds={disabledSeconds}\n          />\n        </div>\n        <Stack>\n          <Button type=\"button\" onClick={handleApply}>\n            Apply\n          </Button>\n          <Button variant=\"secondary\" type=\"button\" onClick={onClose}>\n            Cancel\n          </Button>\n        </Stack>\n      </div>\n    );\n  }\n);\n\nDateTimeCalendar.displayName = 'DateTimeCalendar';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    padding: theme.spacing(1),\n    border: `1px ${theme.colors.border.weak} solid`,\n    borderRadius: theme.shape.radius.default,\n    backgroundColor: theme.colors.background.primary,\n    zIndex: theme.zIndex.modal,\n  }),\n  fullScreen: css({\n    position: 'absolute',\n  }),\n  time: css({\n    marginBottom: theme.spacing(2),\n  }),\n  modal: css({\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: theme.zIndex.modal,\n    maxWidth: '280px',\n  }),\n  clearIcon: css({\n    cursor: 'pointer',\n  }),\n  field: css({\n    marginBottom: 0,\n    width: '100%',\n  }),\n});\n"],"names":["date","React"],"mappings":"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"}