{"version":3,"file":"TimeOfDayPicker.js","sources":["../../../../src/components/DateTimePickers/TimeOfDayPicker.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport RcTimePicker from 'rc-time-picker';\nimport React from 'react';\n\nimport { dateTime, DateTime, dateTimeAsMoment, GrafanaTheme2, isDateTimeInput } from '@grafana/data';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { getFocusStyles } from '../../themes/mixins';\nimport { inputSizes } from '../Forms/commonStyles';\nimport { FormInputSize } from '../Forms/types';\nimport { Icon } from '../Icon/Icon';\n\nimport 'rc-time-picker/assets/index.css';\n\nexport interface Props {\n  onChange: (value: DateTime) => void;\n  value?: DateTime;\n  showHour?: boolean;\n  showSeconds?: boolean;\n  minuteStep?: number;\n  size?: FormInputSize;\n  disabled?: boolean;\n  disabledHours?: () => number[];\n  disabledMinutes?: () => number[];\n  disabledSeconds?: () => number[];\n}\n\nexport const POPUP_CLASS_NAME = 'time-of-day-picker-panel';\n\nexport const TimeOfDayPicker = ({\n  minuteStep = 1,\n  showHour = true,\n  showSeconds = false,\n  onChange,\n  value,\n  size = 'auto',\n  disabled,\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds,\n}: Props) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <RcTimePicker\n      className={cx(inputSizes()[size], styles.input)}\n      popupClassName={cx(styles.picker, POPUP_CLASS_NAME)}\n      defaultValue={dateTimeAsMoment()}\n      onChange={(value) => {\n        if (isDateTimeInput(value)) {\n          return onChange(dateTime(value));\n        }\n      }}\n      allowEmpty={false}\n      showSecond={showSeconds}\n      value={dateTimeAsMoment(value)}\n      showHour={showHour}\n      minuteStep={minuteStep}\n      inputIcon={<Caret wrapperStyle={styles.caretWrapper} />}\n      disabled={disabled}\n      disabledHours={disabledHours}\n      disabledMinutes={disabledMinutes}\n      disabledSeconds={disabledSeconds}\n    />\n  );\n};\n\ninterface CaretProps {\n  wrapperStyle?: string;\n}\n\nconst Caret = ({ wrapperStyle = '' }: CaretProps) => {\n  return (\n    <div className={wrapperStyle}>\n      <Icon name=\"angle-down\" />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const bgColor = theme.components.input.background;\n  const menuShadowColor = theme.v1.palette.black;\n  const optionBgHover = theme.colors.background.secondary;\n  const borderRadius = theme.shape.radius.default;\n  const borderColor = theme.components.input.borderColor;\n  return {\n    caretWrapper: css({\n      position: 'absolute',\n      right: '8px',\n      top: '50%',\n      transform: 'translateY(-50%)',\n      display: 'inline-block',\n      textAlign: 'right',\n      color: theme.colors.text.secondary,\n    }),\n    picker: css({\n      '.rc-time-picker-panel-select': {\n        fontSize: '14px',\n        backgroundColor: bgColor,\n        color: theme.colors.text.secondary,\n        borderColor,\n        li: {\n          outlineWidth: '2px',\n          '&.rc-time-picker-panel-select-option-selected': {\n            backgroundColor: 'inherit',\n            border: `1px solid ${theme.v1.palette.orange}`,\n            borderRadius,\n            color: theme.colors.text.primary,\n          },\n\n          '&:hover': {\n            background: optionBgHover,\n            color: theme.colors.text.primary,\n          },\n\n          '&.rc-time-picker-panel-select-option-disabled': {\n            color: theme.colors.action.disabledText,\n          },\n        },\n      },\n\n      '.rc-time-picker-panel-inner': {\n        boxShadow: `0px 4px 4px ${menuShadowColor}`,\n        backgroundColor: bgColor,\n        borderColor,\n        borderRadius,\n        marginTop: '3px',\n\n        '.rc-time-picker-panel-input-wrap': {\n          marginRight: '2px',\n\n          '&, .rc-time-picker-panel-input': {\n            backgroundColor: bgColor,\n            paddingTop: '2px',\n          },\n        },\n\n        '.rc-time-picker-panel-combobox': {\n          display: 'flex',\n        },\n      },\n    }),\n    input: css({\n      '.rc-time-picker-input': {\n        backgroundColor: bgColor,\n        borderRadius,\n        borderColor,\n        color: theme.colors.text.primary,\n        height: theme.spacing(4),\n\n        '&:focus': getFocusStyles(theme),\n\n        '&:disabled': {\n          backgroundColor: theme.colors.action.disabledBackground,\n          color: theme.colors.action.disabledText,\n          border: `1px solid ${theme.colors.action.disabledBackground}`,\n          '&:focus': {\n            boxShadow: 'none',\n          },\n        },\n      },\n    }),\n  };\n};\n"],"names":["React","value"],"mappings":"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"}