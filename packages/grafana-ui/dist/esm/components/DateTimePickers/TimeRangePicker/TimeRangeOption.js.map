{"version":3,"file":"TimeRangeOption.js","sources":["../../../../../src/components/DateTimePickers/TimeRangePicker/TimeRangeOption.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { memo } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { GrafanaTheme2, TimeOption } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes/ThemeContext';\nimport { getFocusStyles } from '../../../themes/mixins';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row-reverse',\n      justifyContent: 'space-between',\n    }),\n    selected: css({\n      background: theme.colors.action.selected,\n      fontWeight: theme.typography.fontWeightMedium,\n    }),\n    radio: css({\n      opacity: 0,\n      width: '0 !important',\n\n      '&:focus-visible + label': getFocusStyles(theme),\n    }),\n    label: css({\n      cursor: 'pointer',\n      flex: 1,\n      padding: '7px 9px 7px 9px',\n\n      '&:hover': {\n        background: theme.colors.action.hover,\n        cursor: 'pointer',\n      },\n    }),\n  };\n};\n\ninterface Props {\n  value: TimeOption;\n  selected?: boolean;\n  onSelect: (option: TimeOption) => void;\n  /**\n   *  Input identifier. This should be the same for all options in a group.\n   */\n  name: string;\n}\n\nexport const TimeRangeOption = memo<Props>(({ value, onSelect, selected = false, name }) => {\n  const styles = useStyles2(getStyles);\n  // In case there are more of the same timerange in the list\n  const id = uuidv4();\n\n  return (\n    <li className={cx(styles.container, selected && styles.selected)}>\n      <input\n        className={styles.radio}\n        checked={selected}\n        name={name}\n        type=\"checkbox\"\n        data-role=\"item\"\n        tabIndex={-1}\n        id={id}\n        onChange={() => onSelect(value)}\n      />\n      <label className={styles.label} htmlFor={id}>\n        {value.display}\n      </label>\n    </li>\n  );\n});\n\nTimeRangeOption.displayName = 'TimeRangeOption';\n"],"names":["uuidv4","React"],"mappings":";;;;;;AASA,MAAM,SAAA,GAAY,CAAC,KAAyB,KAAA;AAC1C,EAAO,OAAA;AAAA,IACL,WAAW,GAAI,CAAA;AAAA,MACb,OAAS,EAAA,MAAA;AAAA,MACT,UAAY,EAAA,QAAA;AAAA,MACZ,aAAe,EAAA,aAAA;AAAA,MACf,cAAgB,EAAA,eAAA;AAAA,KACjB,CAAA;AAAA,IACD,UAAU,GAAI,CAAA;AAAA,MACZ,UAAA,EAAY,KAAM,CAAA,MAAA,CAAO,MAAO,CAAA,QAAA;AAAA,MAChC,UAAA,EAAY,MAAM,UAAW,CAAA,gBAAA;AAAA,KAC9B,CAAA;AAAA,IACD,OAAO,GAAI,CAAA;AAAA,MACT,OAAS,EAAA,CAAA;AAAA,MACT,KAAO,EAAA,cAAA;AAAA,MAEP,yBAAA,EAA2B,eAAe,KAAK,CAAA;AAAA,KAChD,CAAA;AAAA,IACD,OAAO,GAAI,CAAA;AAAA,MACT,MAAQ,EAAA,SAAA;AAAA,MACR,IAAM,EAAA,CAAA;AAAA,MACN,OAAS,EAAA,iBAAA;AAAA,MAET,SAAW,EAAA;AAAA,QACT,UAAA,EAAY,KAAM,CAAA,MAAA,CAAO,MAAO,CAAA,KAAA;AAAA,QAChC,MAAQ,EAAA,SAAA;AAAA,OACV;AAAA,KACD,CAAA;AAAA,GACH,CAAA;AACF,CAAA,CAAA;AAYa,MAAA,eAAA,GAAkB,KAAY,CAAC,EAAE,OAAO,QAAU,EAAA,QAAA,GAAW,KAAO,EAAA,IAAA,EAAW,KAAA;AAC1F,EAAM,MAAA,MAAA,GAAS,WAAW,SAAS,CAAA,CAAA;AAEnC,EAAA,MAAM,KAAKA,EAAO,EAAA,CAAA;AAElB,EACE,uBAAAC,cAAA,CAAA,aAAA,CAAC,QAAG,SAAW,EAAA,EAAA,CAAG,OAAO,SAAW,EAAA,QAAA,IAAY,MAAO,CAAA,QAAQ,CAC7D,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,OAAA;AAAA,IAAA;AAAA,MACC,WAAW,MAAO,CAAA,KAAA;AAAA,MAClB,OAAS,EAAA,QAAA;AAAA,MACT,IAAA;AAAA,MACA,IAAK,EAAA,UAAA;AAAA,MACL,WAAU,EAAA,MAAA;AAAA,MACV,QAAU,EAAA,CAAA,CAAA;AAAA,MACV,EAAA;AAAA,MACA,QAAA,EAAU,MAAM,QAAA,CAAS,KAAK,CAAA;AAAA,KAAA;AAAA,GAChC,kBACCA,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA,EAAM,SAAW,EAAA,MAAA,CAAO,OAAO,OAAS,EAAA,EAAA,EAAA,EACtC,KAAM,CAAA,OACT,CACF,CAAA,CAAA;AAEJ,CAAC,EAAA;AAED,eAAA,CAAgB,WAAc,GAAA,iBAAA;;;;"}