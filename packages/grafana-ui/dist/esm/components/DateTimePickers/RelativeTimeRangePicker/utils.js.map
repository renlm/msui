{"version":3,"file":"utils.js","sources":["../../../../../src/components/DateTimePickers/RelativeTimeRangePicker/utils.ts"],"sourcesContent":["import { RelativeTimeRange, TimeOption } from '@grafana/data';\n\nconst regex = /^now$|^now\\-(\\d{1,10})([wdhms])$/;\n\nexport const mapOptionToRelativeTimeRange = (option: TimeOption): RelativeTimeRange | undefined => {\n  return {\n    from: relativeToSeconds(option.from),\n    to: relativeToSeconds(option.to),\n  };\n};\n\nexport const mapRelativeTimeRangeToOption = (range: RelativeTimeRange): TimeOption => {\n  const from = secondsToRelativeFormat(range.from);\n  const to = secondsToRelativeFormat(range.to);\n\n  return { from, to, display: `${from} to ${to}` };\n};\n\nexport type RangeValidation = {\n  isValid: boolean;\n  errorMessage?: string;\n};\n\nexport const isRangeValid = (relative: string, now = Date.now()): RangeValidation => {\n  if (!isRelativeFormat(relative)) {\n    return {\n      isValid: false,\n      errorMessage: 'Value not in relative time format.',\n    };\n  }\n\n  const seconds = relativeToSeconds(relative);\n\n  if (seconds > Math.ceil(now / 1000)) {\n    return {\n      isValid: false,\n      errorMessage: 'Can not enter value prior to January 1, 1970.',\n    };\n  }\n\n  return { isValid: true };\n};\n\nexport const isRelativeFormat = (format: string): boolean => {\n  return regex.test(format);\n};\n\nconst relativeToSeconds = (relative: string): number => {\n  const match = regex.exec(relative);\n\n  if (!match || match.length !== 3) {\n    return 0;\n  }\n\n  const [, value, unit] = match;\n  const parsed = parseInt(value, 10);\n\n  if (isNaN(parsed)) {\n    return 0;\n  }\n\n  return parsed * units[unit];\n};\n\nconst units: Record<string, number> = {\n  w: 604800,\n  d: 86400,\n  h: 3600,\n  m: 60,\n  s: 1,\n};\n\nconst secondsToRelativeFormat = (seconds: number): string => {\n  if (seconds <= 0) {\n    return 'now';\n  }\n\n  if (seconds >= units.w && seconds % units.w === 0) {\n    return `now-${seconds / units.w}w`;\n  }\n\n  if (seconds >= units.d && seconds % units.d === 0) {\n    return `now-${seconds / units.d}d`;\n  }\n\n  if (seconds >= units.h && seconds % units.h === 0) {\n    return `now-${seconds / units.h}h`;\n  }\n\n  if (seconds >= units.m && seconds % units.m === 0) {\n    return `now-${seconds / units.m}m`;\n  }\n\n  return `now-${seconds}s`;\n};\n"],"names":[],"mappings":"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"}