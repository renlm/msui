{"version":3,"file":"Slider.js","sources":["../../../../src/components/Slider/Slider.tsx"],"sourcesContent":["import { cx } from '@emotion/css';\nimport { Global } from '@emotion/react';\nimport SliderComponent from 'rc-slider';\nimport React, { useState, useCallback, ChangeEvent, FocusEvent } from 'react';\n\nimport { useStyles2 } from '../../themes/ThemeContext';\nimport { Input } from '../Input/Input';\n\nimport { getStyles } from './styles';\nimport { SliderProps } from './types';\n\n/**\n * @public\n */\nexport const Slider = ({\n  min,\n  max,\n  onChange,\n  onAfterChange,\n  orientation = 'horizontal',\n  reverse,\n  step,\n  value,\n  ariaLabelForHandle,\n  marks,\n  included,\n}: SliderProps) => {\n  const isHorizontal = orientation === 'horizontal';\n  const styles = useStyles2(getStyles, isHorizontal, Boolean(marks));\n  const SliderWithTooltip = SliderComponent;\n  const [sliderValue, setSliderValue] = useState<number>(value ?? min);\n\n  const onSliderChange = useCallback(\n    (v: number | number[]) => {\n      const value = typeof v === 'number' ? v : v[0];\n\n      setSliderValue(value);\n      onChange?.(value);\n    },\n    [setSliderValue, onChange]\n  );\n\n  const onSliderInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      let v = +e.target.value;\n\n      if (Number.isNaN(v)) {\n        v = 0;\n      }\n\n      setSliderValue(v);\n\n      if (onChange) {\n        onChange(v);\n      }\n\n      if (onAfterChange) {\n        onAfterChange(v);\n      }\n    },\n    [onChange, onAfterChange]\n  );\n\n  // Check for min/max on input blur so user is able to enter\n  // custom values that might seem above/below min/max on first keystroke\n  const onSliderInputBlur = useCallback(\n    (e: FocusEvent<HTMLInputElement>) => {\n      const v = +e.target.value;\n\n      if (v > max) {\n        setSliderValue(max);\n      } else if (v < min) {\n        setSliderValue(min);\n      }\n    },\n    [max, min]\n  );\n\n  const handleChangeComplete = useCallback(\n    (v: number | number[]) => {\n      const value = typeof v === 'number' ? v : v[0];\n      onAfterChange?.(value);\n    },\n    [onAfterChange]\n  );\n\n  const sliderInputClassNames = !isHorizontal ? [styles.sliderInputVertical] : [];\n  const sliderInputFieldClassNames = !isHorizontal ? [styles.sliderInputFieldVertical] : [];\n\n  return (\n    <div className={cx(styles.container, styles.slider)}>\n      {/** Slider tooltip's parent component is body and therefore we need Global component to do css overrides for it. */}\n      <Global styles={styles.tooltip} />\n      <div className={cx(styles.sliderInput, ...sliderInputClassNames)}>\n        <SliderWithTooltip\n          min={min}\n          max={max}\n          step={step}\n          defaultValue={value}\n          value={sliderValue}\n          onChange={onSliderChange}\n          onChangeComplete={handleChangeComplete}\n          vertical={!isHorizontal}\n          reverse={reverse}\n          ariaLabelForHandle={ariaLabelForHandle}\n          marks={marks}\n          included={included}\n        />\n\n        <Input\n          type=\"text\"\n          className={cx(styles.sliderInputField, ...sliderInputFieldClassNames)}\n          value={sliderValue}\n          onChange={onSliderInputChange}\n          onBlur={onSliderInputBlur}\n          min={min}\n          max={max}\n        />\n      </div>\n    </div>\n  );\n};\n\nSlider.displayName = 'Slider';\n"],"names":["value","React"],"mappings":"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"}