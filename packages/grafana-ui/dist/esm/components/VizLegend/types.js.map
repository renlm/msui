{"version":3,"file":"types.js","sources":["../../../../src/components/VizLegend/types.ts"],"sourcesContent":["import React from 'react';\n\nimport { DataFrameFieldIndex, DisplayValue } from '@grafana/data';\nimport { LegendDisplayMode, LegendPlacement, LineStyle } from '@grafana/schema';\n\nexport enum SeriesVisibilityChangeBehavior {\n  Isolate,\n  Hide,\n}\n\nexport interface VizLegendBaseProps<T> {\n  placement: LegendPlacement;\n  className?: string;\n  items: Array<VizLegendItem<T>>;\n  seriesVisibilityChangeBehavior?: SeriesVisibilityChangeBehavior;\n  onLabelClick?: (item: VizLegendItem<T>, event: React.MouseEvent<HTMLButtonElement>) => void;\n  itemRenderer?: (item: VizLegendItem<T>, index: number) => JSX.Element;\n  onLabelMouseOver?: (\n    item: VizLegendItem,\n    event: React.MouseEvent<HTMLButtonElement> | React.FocusEvent<HTMLButtonElement>\n  ) => void;\n  onLabelMouseOut?: (\n    item: VizLegendItem,\n    event: React.MouseEvent<HTMLButtonElement> | React.FocusEvent<HTMLButtonElement>\n  ) => void;\n  readonly?: boolean;\n}\n\nexport interface VizLegendTableProps<T> extends VizLegendBaseProps<T> {\n  sortBy?: string;\n  sortDesc?: boolean;\n  onToggleSort?: (sortBy: string) => void;\n  isSortable?: boolean;\n}\n\nexport interface LegendProps<T = any> extends VizLegendBaseProps<T>, VizLegendTableProps<T> {\n  displayMode: LegendDisplayMode;\n}\n\nexport interface VizLegendItem<T = any> {\n  getItemKey?: () => string;\n  label: string;\n  color?: string;\n  gradient?: string;\n  yAxis: number;\n  disabled?: boolean;\n  // displayValues?: DisplayValue[];\n  getDisplayValues?: () => DisplayValue[];\n  fieldIndex?: DataFrameFieldIndex;\n  fieldName?: string;\n  data?: T;\n  lineStyle?: LineStyle;\n}\n"],"names":["SeriesVisibilityChangeBehavior"],"mappings":"AAKY,IAAA,8BAAA,qBAAAA,+BAAL,KAAA;AACL,EAAAA,+BAAA,CAAA,+BAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA;AACA,EAAAA,+BAAA,CAAA,+BAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA,CAAA;AAFU,EAAAA,OAAAA,+BAAAA,CAAAA;AAAA,CAAA,EAAA,8BAAA,IAAA,EAAA;;;;"}