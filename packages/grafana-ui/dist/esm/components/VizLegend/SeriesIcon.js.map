{"version":3,"file":"SeriesIcon.js","sources":["../../../../src/components/VizLegend/SeriesIcon.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { CSSProperties } from 'react';\n\nimport { GrafanaTheme2, fieldColorModeRegistry } from '@grafana/data';\nimport { LineStyle } from '@grafana/schema';\n\nimport { useTheme2, useStyles2 } from '../../themes';\n\nexport interface Props extends React.HTMLAttributes<HTMLDivElement> {\n  color?: string;\n  gradient?: string;\n  lineStyle?: LineStyle;\n}\n\nexport const SeriesIcon = React.memo(\n  React.forwardRef<HTMLDivElement, Props>(({ color, className, gradient, lineStyle, ...restProps }, ref) => {\n    const theme = useTheme2();\n    const styles = useStyles2(getStyles);\n\n    let cssColor: string;\n\n    if (gradient) {\n      const colors = fieldColorModeRegistry.get(gradient).getColors?.(theme);\n      if (colors?.length) {\n        cssColor = `linear-gradient(90deg, ${colors.join(', ')})`;\n      } else {\n        // Not sure what to default to, this will return gray, this should not happen though.\n        cssColor = theme.visualization.getColorByName('');\n      }\n    } else {\n      cssColor = color!;\n    }\n\n    let customStyle: CSSProperties;\n\n    if (lineStyle?.fill === 'dot' && !gradient) {\n      // make a circle bg image and repeat it\n      customStyle = {\n        backgroundImage: `radial-gradient(circle at 2px 2px, ${color} 2px, transparent 0)`,\n        backgroundSize: '4px 4px',\n        backgroundRepeat: 'space',\n      };\n    } else if (lineStyle?.fill === 'dash' && !gradient) {\n      // make a rectangle bg image and repeat it\n      customStyle = {\n        backgroundImage: `linear-gradient(to right, ${color} 100%, transparent 0%)`,\n        backgroundSize: '6px 4px',\n        backgroundRepeat: 'space',\n      };\n    } else {\n      customStyle = {\n        background: cssColor,\n        borderRadius: theme.shape.radius.pill,\n      };\n    }\n\n    return (\n      <div\n        data-testid=\"series-icon\"\n        ref={ref}\n        className={cx(className, styles.forcedColors, styles.container)}\n        style={customStyle}\n        {...restProps}\n      />\n    );\n  })\n);\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    marginRight: '8px',\n    display: 'inline-block',\n    width: '14px',\n    height: '4px',\n  }),\n  forcedColors: css({\n    '@media (forced-colors: active)': {\n      forcedColorAdjust: 'none',\n    },\n  }),\n});\n\nSeriesIcon.displayName = 'SeriesIcon';\n"],"names":["React","_a","_b"],"mappings":"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"}