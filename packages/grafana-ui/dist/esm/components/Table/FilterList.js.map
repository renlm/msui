{"version":3,"file":"FilterList.js","sources":["../../../../src/components/Table/FilterList.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useCallback, useMemo } from 'react';\nimport { FixedSizeList as List } from 'react-window';\n\nimport { GrafanaTheme2, formattedValueToString, getValueFormat, SelectableValue } from '@grafana/data';\n\nimport { ButtonSelect, Checkbox, FilterInput, Label, Stack } from '..';\nimport { useStyles2, useTheme2 } from '../../themes';\n\ninterface Props {\n  values: SelectableValue[];\n  options: SelectableValue[];\n  onChange: (options: SelectableValue[]) => void;\n  caseSensitive?: boolean;\n  showOperators?: boolean;\n  searchFilter: string;\n  setSearchFilter: (value: string) => void;\n  operator: SelectableValue<string>;\n  setOperator: (item: SelectableValue<string>) => void;\n}\n\nconst ITEM_HEIGHT = 28;\nconst MIN_HEIGHT = ITEM_HEIGHT * 5;\n\nconst operatorSelectableValues: { [key: string]: SelectableValue<string> } = {\n  Contains: { label: 'Contains', value: 'Contains', description: 'Contains' },\n  '=': { label: '=', value: '=', description: 'Equals' },\n  '!=': { label: '!=', value: '!=', description: 'Not equals' },\n  '>': { label: '>', value: '>', description: 'Greater' },\n  '>=': { label: '>=', value: '>=', description: 'Greater or Equal' },\n  '<': { label: '<', value: '<', description: 'Less' },\n  '<=': { label: '<=', value: '<=', description: 'Less or Equal' },\n  Expression: {\n    label: 'Expression',\n    value: 'Expression',\n    description: 'Bool Expression (Char $ represents the column value in the expression, e.g. \"$ >= 10 && $ <= 12\")',\n  },\n};\nconst OPERATORS = Object.values(operatorSelectableValues);\nexport const REGEX_OPERATOR = operatorSelectableValues['Contains'];\nconst XPR_OPERATOR = operatorSelectableValues['Expression'];\n\nconst comparableValue = (value: string): string | number | Date | boolean => {\n  value = value.trim().replace(/\\\\/g, '');\n\n  // Does it look like a Date (Starting with pattern YYYY-MM-DD* or YYYY/MM/DD*)?\n  if (/^(\\d{4}-\\d{2}-\\d{2}|\\d{4}\\/\\d{2}\\/\\d{2})/.test(value)) {\n    const date = new Date(value);\n    if (!isNaN(date.getTime())) {\n      const fmt = getValueFormat('dateTimeAsIso');\n      return formattedValueToString(fmt(date.getTime()));\n    }\n  }\n  // Does it look like a Number?\n  const num = parseFloat(value);\n  if (!isNaN(num)) {\n    return num;\n  }\n  // Does it look like a Bool?\n  const lvalue = value.toLowerCase();\n  if (lvalue === 'true' || lvalue === 'false') {\n    return lvalue === 'true';\n  }\n  // Anything else\n  return value;\n};\n\nexport const FilterList = ({\n  options,\n  values,\n  caseSensitive,\n  showOperators,\n  onChange,\n  searchFilter,\n  setSearchFilter,\n  operator,\n  setOperator,\n}: Props) => {\n  const regex = useMemo(() => new RegExp(searchFilter, caseSensitive ? undefined : 'i'), [searchFilter, caseSensitive]);\n  const items = useMemo(\n    () =>\n      options.filter((option) => {\n        if (!showOperators || !searchFilter || operator.value === REGEX_OPERATOR.value) {\n          if (option.label === undefined) {\n            return false;\n          }\n          return regex.test(option.label);\n        } else if (operator.value === XPR_OPERATOR.value) {\n          if (option.value === undefined) {\n            return false;\n          }\n          try {\n            const xpr = searchFilter.replace(/\\\\/g, '');\n            const fnc = new Function('$', `'use strict'; return ${xpr};`);\n            const val = comparableValue(option.value);\n            return fnc(val);\n          } catch (_) {}\n          return false;\n        } else {\n          if (option.value === undefined) {\n            return false;\n          }\n\n          const value1 = comparableValue(option.value);\n          const value2 = comparableValue(searchFilter);\n\n          switch (operator.value) {\n            case '=':\n              return value1 === value2;\n            case '!=':\n              return value1 !== value2;\n            case '>':\n              return value1 > value2;\n            case '>=':\n              return value1 >= value2;\n            case '<':\n              return value1 < value2;\n            case '<=':\n              return value1 <= value2;\n          }\n          return false;\n        }\n      }),\n    [options, regex, showOperators, operator, searchFilter]\n  );\n  const selectedItems = useMemo(() => items.filter((item) => values.includes(item)), [items, values]);\n\n  const selectCheckValue = useMemo(() => items.length === selectedItems.length, [items, selectedItems]);\n  const selectCheckIndeterminate = useMemo(\n    () => selectedItems.length > 0 && items.length > selectedItems.length,\n    [items, selectedItems]\n  );\n  const selectCheckLabel = useMemo(\n    () => (selectedItems.length ? `${selectedItems.length} selected` : `Select all`),\n    [selectedItems]\n  );\n  const selectCheckDescription = useMemo(\n    () =>\n      items.length !== selectedItems.length\n        ? 'Add all displayed values to the filter'\n        : 'Remove all displayed values from the filter',\n    [items, selectedItems]\n  );\n\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n  const gutter = theme.spacing.gridSize;\n  const height = useMemo(() => Math.min(items.length * ITEM_HEIGHT, MIN_HEIGHT) + gutter, [gutter, items.length]);\n\n  const onCheckedChanged = useCallback(\n    (option: SelectableValue) => (event: React.FormEvent<HTMLInputElement>) => {\n      const newValues = event.currentTarget.checked\n        ? values.concat(option)\n        : values.filter((c) => c.value !== option.value);\n\n      onChange(newValues);\n    },\n    [onChange, values]\n  );\n\n  const onSelectChanged = useCallback(() => {\n    if (items.length === selectedItems.length) {\n      const newValues = values.filter((item) => !items.includes(item));\n      onChange(newValues);\n    } else {\n      const newValues = [...new Set([...values, ...items])];\n      onChange(newValues);\n    }\n  }, [onChange, values, items, selectedItems]);\n\n  return (\n    <Stack direction=\"column\" gap={0.25}>\n      {!showOperators && <FilterInput placeholder=\"Filter values\" onChange={setSearchFilter} value={searchFilter} />}\n      {showOperators && (\n        <Stack direction=\"row\" gap={0}>\n          <ButtonSelect\n            variant=\"canvas\"\n            options={OPERATORS}\n            onChange={setOperator}\n            value={operator}\n            tooltip={operator.description}\n          />\n          <FilterInput placeholder=\"Filter values\" onChange={setSearchFilter} value={searchFilter} />\n        </Stack>\n      )}\n      {!items.length && <Label>No values</Label>}\n      {items.length && (\n        <List\n          height={height}\n          itemCount={items.length}\n          itemSize={ITEM_HEIGHT}\n          width=\"100%\"\n          className={styles.filterList}\n        >\n          {({ index, style }) => {\n            const option = items[index];\n            const { value, label } = option;\n            const isChecked = values.find((s) => s.value === value) !== undefined;\n\n            return (\n              <div className={styles.filterListRow} style={style} title={label}>\n                <Checkbox value={isChecked} label={label} onChange={onCheckedChanged(option)} />\n              </div>\n            );\n          }}\n        </List>\n      )}\n      {items.length && (\n        <Stack direction=\"column\" gap={0.25}>\n          <div className={cx(styles.selectDivider)} />\n          <div className={cx(styles.filterListRow)}>\n            <Checkbox\n              value={selectCheckValue}\n              indeterminate={selectCheckIndeterminate}\n              label={selectCheckLabel}\n              description={selectCheckDescription}\n              onChange={onSelectChanged}\n            />\n          </div>\n        </Stack>\n      )}\n    </Stack>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  filterList: css({\n    label: 'filterList',\n  }),\n  filterListRow: css({\n    label: 'filterListRow',\n    cursor: 'pointer',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    padding: theme.spacing(0.5),\n\n    ':hover': {\n      backgroundColor: theme.colors.action.hover,\n    },\n  }),\n  selectDivider: css({\n    label: 'selectDivider',\n    width: '100%',\n    borderTop: `1px solid ${theme.colors.border.medium}`,\n    padding: theme.spacing(0.5, 2),\n  }),\n});\n"],"names":["React","List"],"mappings":"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"}