{"version":3,"file":"index.js","sources":["../../../../src/components/PanelChrome/index.ts"],"sourcesContent":["import React from 'react';\n\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { PanelChrome as PanelChromeComponent, PanelChromeProps } from './PanelChrome';\nimport { TitleItem } from './TitleItem';\n\n/**\n * @internal\n */\nexport type { PanelChromeProps, PanelPadding } from './PanelChrome';\n\n/**\n * @internal\n */\nexport interface PanelChromeType extends React.FC<PanelChromeProps> {\n  LoadingIndicator: typeof LoadingIndicator;\n  TitleItem: typeof TitleItem;\n}\n\n/**\n * @internal\n */\nexport const PanelChrome = PanelChromeComponent as PanelChromeType;\nPanelChrome.LoadingIndicator = LoadingIndicator;\nPanelChrome.TitleItem = TitleItem;\n\n/**\n * Exporting the components for extensibility and since it is a good practice\n * according to the api-extractor.\n */\nexport {\n  LoadingIndicator as PanelChromeLoadingIndicator,\n  type LoadingIndicatorProps as PanelChromeLoadingIndicatorProps,\n} from './LoadingIndicator';\n\nexport { PanelDescription } from './PanelDescription';\n\nexport { usePanelContext, PanelContextProvider, type PanelContext, PanelContextRoot } from './PanelContext';\n\nexport * from './types';\n"],"names":["PanelChromeComponent"],"mappings":";;;;;;;;;;;;;;;;AAsBO,MAAM,WAAc,GAAAA,cAAA;AAC3B,WAAA,CAAY,gBAAmB,GAAA,gBAAA,CAAA;AAC/B,WAAA,CAAY,SAAY,GAAA,SAAA;;;;"}