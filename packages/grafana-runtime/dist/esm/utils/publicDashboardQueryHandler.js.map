{"version":3,"file":"publicDashboardQueryHandler.js","sources":["../../../src/utils/publicDashboardQueryHandler.ts"],"sourcesContent":["import { catchError, Observable, of, switchMap } from 'rxjs';\n\nimport { DataQuery, DataQueryRequest, DataQueryResponse } from '@grafana/data';\n\nimport { config } from '../config';\nimport { getBackendSrv } from '../services/backendSrv';\n\nimport { BackendDataSourceResponse, toDataQueryResponse } from './queryResponse';\n\nexport function publicDashboardQueryHandler(request: DataQueryRequest<DataQuery>): Observable<DataQueryResponse> {\n  const {\n    intervalMs,\n    maxDataPoints,\n    requestId,\n    panelId,\n    queryCachingTTL,\n    range: { from: fromRange, to: toRange },\n  } = request;\n  // Return early if no queries exist\n  if (!request.targets.length) {\n    return of({ data: [] });\n  }\n\n  const body = {\n    intervalMs,\n    maxDataPoints,\n    queryCachingTTL,\n    timeRange: {\n      from: fromRange.valueOf().toString(),\n      to: toRange.valueOf().toString(),\n      timezone: request.timezone,\n    },\n  };\n\n  return getBackendSrv()\n    .fetch<BackendDataSourceResponse>({\n      url: `/api/public/dashboards/${config.publicDashboardAccessToken!}/panels/${panelId}/query`,\n      method: 'POST',\n      data: body,\n      requestId,\n    })\n    .pipe(\n      switchMap((raw) => {\n        return of(toDataQueryResponse(raw, request.targets));\n      }),\n      catchError((err) => {\n        return of(toDataQueryResponse(err));\n      })\n    );\n}\n"],"names":[],"mappings":";;;;;AASO,SAAS,4BAA4B,OAAqE,EAAA;AAC/G,EAAM,MAAA;AAAA,IACJ,UAAA;AAAA,IACA,aAAA;AAAA,IACA,SAAA;AAAA,IACA,OAAA;AAAA,IACA,eAAA;AAAA,IACA,KAAO,EAAA,EAAE,IAAM,EAAA,SAAA,EAAW,IAAI,OAAQ,EAAA;AAAA,GACpC,GAAA,OAAA,CAAA;AAEJ,EAAI,IAAA,CAAC,OAAQ,CAAA,OAAA,CAAQ,MAAQ,EAAA;AAC3B,IAAA,OAAO,EAAG,CAAA,EAAE,IAAM,EAAA,IAAI,CAAA,CAAA;AAAA,GACxB;AAEA,EAAA,MAAM,IAAO,GAAA;AAAA,IACX,UAAA;AAAA,IACA,aAAA;AAAA,IACA,eAAA;AAAA,IACA,SAAW,EAAA;AAAA,MACT,IAAM,EAAA,SAAA,CAAU,OAAQ,EAAA,CAAE,QAAS,EAAA;AAAA,MACnC,EAAI,EAAA,OAAA,CAAQ,OAAQ,EAAA,CAAE,QAAS,EAAA;AAAA,MAC/B,UAAU,OAAQ,CAAA,QAAA;AAAA,KACpB;AAAA,GACF,CAAA;AAEA,EAAO,OAAA,aAAA,GACJ,KAAiC,CAAA;AAAA,IAChC,GAAK,EAAA,CAAA,uBAAA,EAA0B,MAAO,CAAA,0BAA2B,WAAW,OAAO,CAAA,MAAA,CAAA;AAAA,IACnF,MAAQ,EAAA,MAAA;AAAA,IACR,IAAM,EAAA,IAAA;AAAA,IACN,SAAA;AAAA,GACD,CACA,CAAA,IAAA;AAAA,IACC,SAAA,CAAU,CAAC,GAAQ,KAAA;AACjB,MAAA,OAAO,EAAG,CAAA,mBAAA,CAAoB,GAAK,EAAA,OAAA,CAAQ,OAAO,CAAC,CAAA,CAAA;AAAA,KACpD,CAAA;AAAA,IACD,UAAA,CAAW,CAAC,GAAQ,KAAA;AAClB,MAAO,OAAA,EAAA,CAAG,mBAAoB,CAAA,GAAG,CAAC,CAAA,CAAA;AAAA,KACnC,CAAA;AAAA,GACH,CAAA;AACJ;;;;"}