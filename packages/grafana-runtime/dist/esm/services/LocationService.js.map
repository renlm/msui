{"version":3,"file":"LocationService.js","sources":["../../../src/services/LocationService.ts"],"sourcesContent":["import * as H from 'history';\n\nimport { deprecationWarning, UrlQueryMap, urlUtil } from '@grafana/data';\nimport { attachDebugger, createLogger } from '@grafana/ui';\n\nimport { config } from '../config';\n\nimport { LocationUpdate } from './LocationSrv';\n\n/**\n * @public\n * A wrapper to help work with browser location and history\n */\nexport interface LocationService {\n  partial: (query: Record<string, any>, replace?: boolean) => void;\n  push: (location: H.Path | H.LocationDescriptor<any>) => void;\n  replace: (location: H.Path | H.LocationDescriptor<any>) => void;\n  reload: () => void;\n  getLocation: () => H.Location;\n  getHistory: () => H.History;\n  getSearch: () => URLSearchParams;\n  getSearchObject: () => UrlQueryMap;\n\n  /**\n   * This is from the old LocationSrv interface\n   * @deprecated use partial, push or replace instead */\n  update: (update: LocationUpdate) => void;\n}\n\n/** @internal */\nexport class HistoryWrapper implements LocationService {\n  private readonly history: H.History;\n\n  constructor(history?: H.History) {\n    // If no history passed create an in memory one if being called from test\n    this.history =\n      history ||\n      (process.env.NODE_ENV === 'test'\n        ? H.createMemoryHistory({ initialEntries: ['/'] })\n        : H.createBrowserHistory({ basename: config.appSubUrl ?? '/' }));\n\n    this.partial = this.partial.bind(this);\n    this.push = this.push.bind(this);\n    this.replace = this.replace.bind(this);\n    this.getSearch = this.getSearch.bind(this);\n    this.getHistory = this.getHistory.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n  }\n\n  getHistory() {\n    return this.history;\n  }\n\n  getSearch() {\n    return new URLSearchParams(this.history.location.search);\n  }\n\n  partial(query: Record<string, any>, replace?: boolean) {\n    const currentLocation = this.history.location;\n    const newQuery = this.getSearchObject();\n\n    for (const key in query) {\n      // removing params with null | undefined\n      if (query[key] === null || query[key] === undefined) {\n        delete newQuery[key];\n      } else {\n        newQuery[key] = query[key];\n      }\n    }\n\n    const updatedUrl = urlUtil.renderUrl(currentLocation.pathname, newQuery);\n\n    if (replace) {\n      this.history.replace(updatedUrl, this.history.location.state);\n    } else {\n      this.history.push(updatedUrl, this.history.location.state);\n    }\n  }\n\n  push(location: H.Path | H.LocationDescriptor) {\n    this.history.push(location);\n  }\n\n  replace(location: H.Path | H.LocationDescriptor) {\n    this.history.replace(location);\n  }\n\n  reload() {\n    const prevState = (this.history.location.state as any)?.routeReloadCounter;\n    this.history.replace({\n      ...this.history.location,\n      state: { routeReloadCounter: prevState ? prevState + 1 : 1 },\n    });\n  }\n\n  getLocation() {\n    return this.history.location;\n  }\n\n  getSearchObject() {\n    return locationSearchToObject(this.history.location.search);\n  }\n\n  /** @deprecated use partial, push or replace instead */\n  update(options: LocationUpdate) {\n    deprecationWarning('LocationSrv', 'update', 'partial, push or replace');\n    if (options.partial && options.query) {\n      this.partial(options.query, options.partial);\n    } else {\n      const newLocation: H.LocationDescriptor = {\n        pathname: options.path,\n      };\n      if (options.query) {\n        newLocation.search = urlUtil.toUrlParams(options.query);\n      }\n      if (options.replace) {\n        this.replace(newLocation);\n      } else {\n        this.push(newLocation);\n      }\n    }\n  }\n}\n\n/**\n * @public\n * Parses a location search string to an object\n * */\nexport function locationSearchToObject(search: string | number): UrlQueryMap {\n  let queryString = typeof search === 'number' ? String(search) : search;\n\n  if (queryString.length > 0) {\n    if (queryString.startsWith('?')) {\n      return urlUtil.parseKeyValue(queryString.substring(1));\n    }\n    return urlUtil.parseKeyValue(queryString);\n  }\n\n  return {};\n}\n\n/**\n * @public\n */\nexport let locationService: LocationService = new HistoryWrapper();\n\n/**\n * Used for tests only\n * @internal\n */\nexport const setLocationService = (location: LocationService) => {\n  if (process.env.NODE_ENV !== 'test') {\n    throw new Error('locationService can be only overriden in test environment');\n  }\n  locationService = location;\n};\n\nconst navigationLog = createLogger('Router');\n\n/** @internal */\nexport const navigationLogger = navigationLog.logger;\n\n// For debugging purposes the location service is attached to global _debug variable\nattachDebugger('location', locationService, navigationLog);\n"],"names":[],"mappings":"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"}