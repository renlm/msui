{"version":3,"file":"config.js","sources":["../../src/config.ts"],"sourcesContent":["import { merge } from 'lodash';\n\nimport {\n  AuthSettings,\n  BootData,\n  BuildInfo,\n  DataSourceInstanceSettings,\n  FeatureToggles,\n  GrafanaConfig,\n  GrafanaTheme,\n  GrafanaTheme2,\n  LicenseInfo,\n  MapLayerOptions,\n  OAuthSettings,\n  PanelPluginMeta,\n  systemDateFormats,\n  SystemDateFormatSettings,\n  getThemeById,\n  AngularMeta,\n} from '@grafana/data';\n\nexport interface AzureSettings {\n  cloud?: string;\n  clouds?: AzureCloudInfo[];\n  managedIdentityEnabled: boolean;\n  workloadIdentityEnabled: boolean;\n  userIdentityEnabled: boolean;\n  userIdentityFallbackCredentialsEnabled: boolean;\n}\n\nexport interface AzureCloudInfo {\n  name: string;\n  displayName: string;\n}\n\nexport type AppPluginConfig = {\n  id: string;\n  path: string;\n  version: string;\n  preload: boolean;\n  angular: AngularMeta;\n};\n\nexport class GrafanaBootConfig implements GrafanaConfig {\n  publicDashboardAccessToken?: string;\n  publicDashboardsEnabled = true;\n  snapshotEnabled = true;\n  datasources: { [str: string]: DataSourceInstanceSettings } = {};\n  panels: { [key: string]: PanelPluginMeta } = {};\n  apps: Record<string, AppPluginConfig> = {};\n  auth: AuthSettings = {};\n  minRefreshInterval = '';\n  appUrl = '';\n  appSubUrl = '';\n  namespace = 'default';\n  windowTitlePrefix = '';\n  buildInfo: BuildInfo;\n  newPanelTitle = '';\n  bootData: BootData;\n  externalUserMngLinkUrl = '';\n  externalUserMngLinkName = '';\n  externalUserMngInfo = '';\n  allowOrgCreate = false;\n  feedbackLinksEnabled = true;\n  disableLoginForm = false;\n  defaultDatasource = ''; // UID\n  angularSupportEnabled = false;\n  authProxyEnabled = false;\n  exploreEnabled = false;\n  queryHistoryEnabled = false;\n  helpEnabled = false;\n  profileEnabled = false;\n  newsFeedEnabled = true;\n  ldapEnabled = false;\n  jwtHeaderName = '';\n  jwtUrlLogin = false;\n  sigV4AuthEnabled = false;\n  azureAuthEnabled = false;\n  secureSocksDSProxyEnabled = false;\n  samlEnabled = false;\n  samlName = '';\n  autoAssignOrg = true;\n  verifyEmailEnabled = false;\n  oauth: OAuthSettings = {};\n  rbacEnabled = true;\n  disableUserSignUp = false;\n  loginHint = '';\n  passwordHint = '';\n  loginError: string | undefined = undefined;\n  viewersCanEdit = false;\n  editorsCanAdmin = false;\n  disableSanitizeHtml = false;\n  trustedTypesDefaultPolicyEnabled = false;\n  cspReportOnlyEnabled = false;\n  liveEnabled = true;\n  /** @deprecated Use `theme2` instead. */\n  theme: GrafanaTheme;\n  theme2: GrafanaTheme2;\n  featureToggles: FeatureToggles = {};\n  anonymousEnabled = false;\n  anonymousDeviceLimit: number | undefined = undefined;\n  licenseInfo: LicenseInfo = {} as LicenseInfo;\n  rendererAvailable = false;\n  rendererVersion = '';\n  rendererDefaultImageWidth = 1000;\n  rendererDefaultImageHeight = 500;\n  rendererDefaultImageScale = 1;\n  secretsManagerPluginEnabled = false;\n  supportBundlesEnabled = false;\n  http2Enabled = false;\n  dateFormats?: SystemDateFormatSettings;\n  grafanaJavascriptAgent = {\n    enabled: false,\n    customEndpoint: '',\n    apiKey: '',\n    errorInstrumentalizationEnabled: true,\n    consoleInstrumentalizationEnabled: false,\n    webVitalsInstrumentalizationEnabled: false,\n  };\n  pluginCatalogURL = 'https://grafana.com/grafana/plugins/';\n  pluginAdminEnabled = true;\n  pluginAdminExternalManageEnabled = false;\n  pluginCatalogHiddenPlugins: string[] = [];\n  pluginsCDNBaseURL = '';\n  expressionsEnabled = false;\n  customTheme?: undefined;\n  awsAllowedAuthProviders: string[] = [];\n  awsAssumeRoleEnabled = false;\n  azure: AzureSettings = {\n    managedIdentityEnabled: false,\n    workloadIdentityEnabled: false,\n    userIdentityEnabled: false,\n    userIdentityFallbackCredentialsEnabled: false,\n  };\n  caching = {\n    enabled: false,\n  };\n  geomapDefaultBaseLayerConfig?: MapLayerOptions;\n  geomapDisableCustomBaseLayer?: boolean;\n  unifiedAlertingEnabled = false;\n  unifiedAlerting = {\n    minInterval: '',\n    alertStateHistoryBackend: undefined,\n    alertStateHistoryPrimary: undefined,\n  };\n  applicationInsightsConnectionString?: string;\n  applicationInsightsEndpointUrl?: string;\n  recordedQueries = {\n    enabled: true,\n  };\n  featureHighlights = {\n    enabled: false,\n  };\n  reporting = {\n    enabled: true,\n  };\n  analytics = {\n    enabled: true,\n  };\n  googleAnalyticsId: undefined;\n  googleAnalytics4Id: undefined;\n  googleAnalytics4SendManualPageViews = false;\n  rudderstackWriteKey: undefined;\n  rudderstackDataPlaneUrl: undefined;\n  rudderstackSdkUrl: undefined;\n  rudderstackConfigUrl: undefined;\n  rudderstackIntegrationsUrl: undefined;\n  sqlConnectionLimits = {\n    maxOpenConns: 100,\n    maxIdleConns: 100,\n    connMaxLifetime: 14400,\n  };\n\n  tokenExpirationDayLimit: undefined;\n  disableFrontendSandboxForPlugins: string[] = [];\n  sharedWithMeFolderUID: string | undefined;\n  rootFolderUID: string | undefined;\n  localFileSystemAvailable: boolean | undefined;\n  cloudMigrationIsTarget: boolean | undefined;\n\n  /**\n   * Language used in Grafana's UI. This is after the user's preference (or deteceted locale) is resolved to one of\n   * Grafana's supported language.\n   */\n  language: string | undefined;\n\n  constructor(options: GrafanaBootConfig) {\n    this.bootData = options.bootData;\n\n    const defaults = {\n      datasources: {},\n      windowTitlePrefix: 'Grafana - ',\n      panels: {},\n      newPanelTitle: 'Panel Title',\n      playlist_timespan: '1m',\n      unsaved_changes_warning: true,\n      appUrl: '',\n      appSubUrl: '',\n      buildInfo: {\n        version: '1.0',\n        commit: '1',\n        env: 'production',\n      },\n      viewersCanEdit: false,\n      editorsCanAdmin: false,\n      disableSanitizeHtml: false,\n    };\n\n    merge(this, defaults, options);\n\n    this.buildInfo = options.buildInfo || defaults.buildInfo;\n\n    if (this.dateFormats) {\n      systemDateFormats.update(this.dateFormats);\n    }\n\n    overrideFeatureTogglesFromUrl(this);\n    overrideFeatureTogglesFromLocalStorage(this);\n\n    if (this.featureToggles.disableAngular) {\n      this.angularSupportEnabled = false;\n    }\n\n    // Creating theme after applying feature toggle overrides in case we need to toggle anything\n    this.theme2 = getThemeById(this.bootData.user.theme);\n    this.bootData.user.lightTheme = this.theme2.isLight;\n    this.theme = this.theme2.v1;\n  }\n}\n\n// localstorage key: grafana.featureToggles\n// example value: panelEditor=1,panelInspector=1\nfunction overrideFeatureTogglesFromLocalStorage(config: GrafanaBootConfig) {\n  const featureToggles = config.featureToggles;\n  const localStorageKey = 'grafana.featureToggles';\n  const localStorageValue = window.localStorage.getItem(localStorageKey);\n  if (localStorageValue) {\n    const features = localStorageValue.split(',');\n    for (const feature of features) {\n      const [featureName, featureValue] = feature.split('=');\n      const toggleState = featureValue === 'true' || featureValue === '1';\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      featureToggles[featureName as keyof FeatureToggles] = toggleState;\n      console.log(`Setting feature toggle ${featureName} = ${toggleState} via localstorage`);\n    }\n  }\n}\n\nfunction overrideFeatureTogglesFromUrl(config: GrafanaBootConfig) {\n  if (window.location.href.indexOf('__feature') === -1) {\n    return;\n  }\n\n  const isDevelopment = config.buildInfo.env === 'development';\n\n  // Although most flags can not be changed from the URL in production,\n  // some of them are safe (and useful!) to change dynamically from the browser URL\n  const safeRuntimeFeatureFlags = new Set(['queryServiceFromUI']);\n\n  const params = new URLSearchParams(window.location.search);\n  params.forEach((value, key) => {\n    if (key.startsWith('__feature.')) {\n      const featureToggles = config.featureToggles as Record<string, boolean>;\n      const featureName = key.substring(10);\n\n      const toggleState = value === 'true' || value === ''; // browser rewrites true as ''\n      if (toggleState !== featureToggles[key]) {\n        if (isDevelopment || safeRuntimeFeatureFlags.has(featureName)) {\n          featureToggles[featureName] = toggleState;\n          console.log(`Setting feature toggle ${featureName} = ${toggleState} via url`);\n        } else {\n          console.log(`Unable to change feature toggle ${featureName} via url in production.`);\n        }\n      }\n    }\n  });\n}\n\nconst bootData = (window as any).grafanaBootData || {\n  settings: {},\n  user: {},\n  navTree: [],\n};\n\nconst options = bootData.settings;\noptions.bootData = bootData;\n\n/**\n * Use this to access the {@link GrafanaBootConfig} for the current running Grafana instance.\n *\n * @public\n */\nexport const config = new GrafanaBootConfig(options);\n"],"names":["options","config"],"mappings":"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"}