{"version":3,"file":"FlameGraphMetadata.js","sources":["../../../src/FlameGraph/FlameGraphMetadata.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { ReactNode } from 'react';\n\nimport { getValueFormat, GrafanaTheme2 } from '@grafana/data';\nimport { Icon, IconButton, useStyles2 } from '@grafana/ui';\n\nimport { ClickedItemData } from '../types';\n\nimport { FlameGraphDataContainer } from './dataTransform';\n\ntype Props = {\n  data: FlameGraphDataContainer;\n  totalTicks: number;\n  onFocusPillClick: () => void;\n  onSandwichPillClick: () => void;\n  focusedItem?: ClickedItemData;\n  sandwichedLabel?: string;\n};\n\nconst FlameGraphMetadata = React.memo(\n  ({ data, focusedItem, totalTicks, sandwichedLabel, onFocusPillClick, onSandwichPillClick }: Props) => {\n    const styles = useStyles2(getStyles);\n    const parts: ReactNode[] = [];\n    const ticksVal = getValueFormat('short')(totalTicks);\n\n    const displayValue = data.valueDisplayProcessor(totalTicks);\n    let unitValue = displayValue.text + displayValue.suffix;\n    const unitTitle = data.getUnitTitle();\n    if (unitTitle === 'Count') {\n      if (!displayValue.suffix) {\n        // Makes sure we don't show 123undefined or something like that if suffix isn't defined\n        unitValue = displayValue.text;\n      }\n    }\n\n    parts.push(\n      <div className={styles.metadataPill} key={'default'}>\n        {unitValue} | {ticksVal.text}\n        {ticksVal.suffix} samples ({unitTitle})\n      </div>\n    );\n\n    if (sandwichedLabel) {\n      parts.push(\n        <span key={'sandwich'}>\n          <Icon size={'sm'} name={'angle-right'} />\n          <div className={styles.metadataPill}>\n            <Icon size={'sm'} name={'gf-show-context'} />{' '}\n            <span className={styles.metadataPillName}>\n              {sandwichedLabel.substring(sandwichedLabel.lastIndexOf('/') + 1)}\n            </span>\n            <IconButton\n              className={styles.pillCloseButton}\n              name={'times'}\n              size={'sm'}\n              onClick={onSandwichPillClick}\n              tooltip={'Remove sandwich view'}\n              aria-label={'Remove sandwich view'}\n            />\n          </div>\n        </span>\n      );\n    }\n\n    if (focusedItem) {\n      const percentValue = Math.round(10000 * (focusedItem.item.value / totalTicks)) / 100;\n      parts.push(\n        <span key={'focus'}>\n          <Icon size={'sm'} name={'angle-right'} />\n          <div className={styles.metadataPill}>\n            <Icon size={'sm'} name={'eye'} /> {percentValue}% of total\n            <IconButton\n              className={styles.pillCloseButton}\n              name={'times'}\n              size={'sm'}\n              onClick={onFocusPillClick}\n              tooltip={'Remove focus'}\n              aria-label={'Remove focus'}\n            />\n          </div>\n        </span>\n      );\n    }\n\n    return <div className={styles.metadata}>{parts}</div>;\n  }\n);\n\nFlameGraphMetadata.displayName = 'FlameGraphMetadata';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metadataPill: css({\n    label: 'metadataPill',\n    display: 'inline-flex',\n    alignItems: 'center',\n    background: theme.colors.background.secondary,\n    borderRadius: theme.shape.borderRadius(8),\n    padding: theme.spacing(0.5, 1),\n    fontSize: theme.typography.bodySmall.fontSize,\n    fontWeight: theme.typography.fontWeightMedium,\n    lineHeight: theme.typography.bodySmall.lineHeight,\n    color: theme.colors.text.secondary,\n  }),\n  pillCloseButton: css({\n    label: 'pillCloseButton',\n    verticalAlign: 'text-bottom',\n    margin: theme.spacing(0, 0.5),\n  }),\n  metadata: css({\n    margin: '8px 0',\n    textAlign: 'center',\n  }),\n  metadataPillName: css({\n    label: 'metadataPillName',\n    maxWidth: '200px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    marginLeft: theme.spacing(0.5),\n  }),\n});\n\nexport default FlameGraphMetadata;\n"],"names":[],"mappings":"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"}